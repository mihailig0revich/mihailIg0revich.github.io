{"version":3,"sources":["api/api.js","redux/auth-reducer.js","context/authContext.js","navigation/ModalMenu.jsx","navigation/NotificationModal.jsx","customHooks/useFrom.jsx","navigation/SearchInputComponent.jsx","navigation/Navigation.jsx","common/loader.svg","common/LoaderPage.jsx","hoc/withAuthRedirect.jsx","feed/PostInModalFeed.jsx","feed/Post.jsx","feed/loading.gif","customHooks/useOserver.jsx","feed/Feed.jsx","redux/feed-reducer.js","common/NoInternetError.jsx","feed/FeedContainer.jsx","profile/SettingsModal.jsx","scripts/scripts.js","profile/PostInModal.jsx","profile/loading.svg","profile/Posts.jsx","profile/UserListModal.jsx","profile/DialogForm.jsx","profile/Profile.jsx","redux/profile-reducer.js","profile/ErrorPage.jsx","profile/ProfileContainer.jsx","settings/ChangePassword.jsx","settings/NotificationSettings.jsx","settings/EditProfile.jsx","settings/SecuritySettings.jsx","settings/Settings.jsx","redux/settings-reducer.js","settings/SettingsContainer.jsx","login/Login.jsx","ScrollToTop.jsx","redux/postPage-reducer.js","post/PostPage.jsx","addPost/AddPost.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["instance","axios","baseURL","api","id","get","then","response","catch","error","console","log","request","username","albumId","page","userId","SET_AUTH_USER","SET_ERROR","LOGOUT_USER","GET_ALL_USERS","DELETE_SUBSCRIPTIONS","DELETE_SUBSCRIBERS","ADD_SUBSCRIPTION","SAVED_POST","DELETE_POST","SET_LOADING","initialState","isAuth","user","subscriptions","subscribers","savedPosts","isLoading","savedPost","post","type","deletePost","setError","setLoading","getMeThunk","login","dispatch","a","data","length","loginThunk","localStorage","setItem","AllUserThink","responseAllUser","users","authReducer","state","action","filter","item","postId","AuthContext","createContext","ModalMenu","props","React","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","menuId","Box","IconButton","size","edge","onClick","event","currentTarget","color","sx","customStyle","children","Menu","MenuListProps","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","component","Link","to","style","textDecoration","marginRight","Divider","logoutThunk","NotificationModal","handleNotificationClose","setNotificationAnchorEl","notificationanchorEl","isNotificationOpen","maxHeight","List","width","maxWidth","minWidth","bgcolor","padding","notificationsData","map","ListItem","alignItems","justifyContent","ListItemAvatar","display","Avatar","alt","src","Typography","variant","message","img","useForm","initialValue","useState","values","setValues","handleInputChange","e","target","name","value","handleCheckboxChange","checked","initialPostValues","searchUser","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","breakpoints","down","StyledInputBase","InputBase","spacing","paddingLeft","transition","transitions","create","up","SearchInputComponent","history","useHistory","justify","push","onChange","placeholder","inputProps","ElevationScroll","window","trigger","useScrollTrigger","disableHysteresis","threshold","undefined","elevation","connect","removeItem","CssBaseline","AppBar","Toolbar","mr","Grid","container","direction","Button","noWrap","flexGrow","Badge","badgeContent","xs","sm","LoaderPage","marginTop","loader","mapStateToProps","withAuthRedirect","Component","useEffect","getItem","top","left","transform","height","boxShadow","p","styleCard","styleExitButton","postComment","BasicModal","setOpen","handleClose","Modal","Card","CardMedia","image","url","CardContent","CardHeader","paddingRight","avatar","red","paddingTop","title","overflowY","comments","margin","href","body","fontSize","paddingBottom","setLike","like","setSave","likeCount","TextField","InputProps","disableUnderline","label","addComment","disabled","RecipeReviewCard","expanded","setExpanded","sendPost","marginBottom","border","subheader","CardActions","disableSpacing","Collapse","in","timeout","paragraph","slice","expand","useObserver","ref","canLoad","isPostsLoading","cb","observer","useRef","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","Feed","lastElement","totalPageCount","getPostsThink","postsArray","posts","Fragment","GET_POSTS","ITERATION_PAGE","SET_PAGE","SET_POSTS_LOADING","SET_LIKE","ADD_COMMENT","SET_SAVE","getPosts","setPostsLoading","feedReducer","concat","comment","NoInternetError","textAlign","compose","responseUsers","index","count","responsePhoto","responseComments","liked","Promise","all","reponse","feedPage","iteratonPage","setPage","document","SettingsModal","handleSettingsClose","Paper","MenuList","ListItemText","handleFormProblemDialogOpen","chunkArray","arr","chunk","newArray","i","ImageButton","ButtonBase","opacity","zIndex","ImageSrc","right","bottom","backgroundSize","backgroundPosition","Image","ImageBackdrop","black","focusRipple","backgroundImage","className","Posts","md","UserListModal","disableRipple","disableFocusRipple","Dialog","DialogTitle","borderBottom","titleText","DialogContent","userList","userMatch","deleteUser","buttonText","DialogForm","setValue","openModal","handleFormProblemDialogClose","autoFocus","multiline","fullWidth","rows","DialogActions","typographyStyle","typographyButtonStyle","textTransform","fontFamily","Profile","currentPage","isPageLoading","getAlbumThink","useParams","tag","allTabs","setOpenModal","isSub","deleteSubscriptions","addSubscription","totalPostsCount","deleteSubscribers","borderColor","Tabs","centered","Tab","path","render","visibility","GET_USER","GET_ALBUM","IS_PAGE_LOADING","TOTAL_POSTS_COUNT","IS_USER_LOADING","album","isUserLoading","responseUser","responseUserAlbum","userAlbumAndComment","headers","profileReducer","ErrorPage","align","getUserThink","profilePage","authUsername","withRouter","authContext","useContext","findIndex","checkSub","match","params","containerStyle","feldStyle","ChangePassword","oldPassword","newPasswordFirst","newPasswordSecond","NotificationSettings","notificationSettings","changeSettings","RadioGroup","FormControlLabel","control","Radio","subscriptionRequest","reminders","firstPublications","supportRequests","EditProfile","editProfile","editName","editUsername","editWebsite","maxRows","editAboutSelf","editEmail","editPhoneNumber","editGender","Checkbox","recommendationSimilarAccounts","SecuritySettings","securitySettings","accountPrivacy","onlineStatus","settingsPage","settings","minHeight","orientation","borderRight","CHANGE_SETTINGS","settingsReducer","settingsName","flexDirection","preventDefault","ScrollToTop","prevProps","this","location","scrollTo","GET_POST","DELETE_LIKE","SET_POST_IS_LOADING","postIsLoading","postPageReducer","getPostThunk","postResponse","userResponce","commentsResponce","lenght","postPage","deleteLike","fileInput","background","accept","htmlFor","files","App","Provider","Navigation","pt","exact","Login","SettingsContainer","AddPost","PostPage","ProfileContainer","FeedContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","basename","process","getElementById"],"mappings":"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","file":"static/js/main.cd89f968.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com'\r\n})\r\n\r\nexport const api = {\r\n    login(id) {\r\n        return instance.get(`/users?id=${id}`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                \r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n\r\n    getUser(username) {\r\n        return instance.get(`/users?username=${username}`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n\r\n    getAllUsers() {\r\n        return instance.get(`/users`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n\r\n    getUserAlbum(albumId, page) {\r\n        return instance.get(`/photos?albumId=${albumId}&_limit=3&_page=${page}`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n\r\n    getPhoto(id) {\r\n        return instance.get(`/photos?id=${id}`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n\r\n    getComments(page) {\r\n        //debugger\r\n        return instance.get(`/comments?_limit=2&_page=${page}`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n\r\n    getUserById(userId) {\r\n        return instance.get(`/users?id=${userId}`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n}\r\n\r\n","import { api } from \"../api/api\"\r\n\r\nconst SET_AUTH_USER = 'auth-reducer/SET_AUTH_USER'\r\nconst SET_ERROR = 'profile-reducer/SET_ERROR'\r\nconst LOGOUT_USER = 'auth-reducer/LOGOUT_USER'\r\nconst GET_ALL_USERS = 'profile-reducer/GET_ALL_USERS';\r\nconst DELETE_SUBSCRIPTIONS = 'profile-reducer/DELETE_SUBSCRIPTIONS';\r\nconst DELETE_SUBSCRIBERS = 'profile-reducer/DELETE_SUBSCRIBERS';\r\nconst ADD_SUBSCRIPTION = 'profile-reducer/ADD_SUBSCRIPTION';\r\nconst SAVED_POST = 'profile-reducer/SAVED_POST';\r\nconst DELETE_POST = 'profile-reducer/DELETE_POST';\r\nconst SET_LOADING = 'profile-reducer/SET_LOADING';\r\n\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    error: false,\r\n    user: {\r\n        \"id\": null,\r\n        \"name\": \"\",\r\n        \"username\": \"\",\r\n        \"email\": \"\",\r\n        \"address\": {},\r\n        \"phone\": \"\",\r\n        \"website\": \"\",\r\n        \"company\": {}\r\n    },\r\n    subscriptions: [],\r\n    subscribers: [],\r\n    savedPosts: [],\r\n    isLoading: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER:\r\n                return {\r\n                    ...state,\r\n                    ...action.user\r\n                }\r\n        case LOGOUT_USER:\r\n                return {\r\n                    ...state,\r\n                    ...action.user\r\n                }\r\n        case GET_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                subscribers: action.users.filter((item) => {\r\n                    if (item.username !== state.user.username) return true;\r\n                    return false;\r\n                }),\r\n                subscriptions: action.users.filter((item) => {\r\n                    if (item.username !== state.user.username) return true;\r\n                    return false;\r\n                })\r\n            }\r\n        case DELETE_SUBSCRIBERS:\r\n            return {\r\n                ...state,\r\n                subscribers: state.subscribers.filter((item) => {\r\n                    if (item.username !== action.username) return true;\r\n                    return false;\r\n                }),\r\n                \r\n            }\r\n        case DELETE_SUBSCRIPTIONS:\r\n            return {\r\n                ...state,\r\n                subscriptions: state.subscriptions.filter((item) => {\r\n                    if (item.username !== action.username) return true;\r\n                    return false;\r\n                })\r\n            }\r\n        case ADD_SUBSCRIPTION:\r\n            return {\r\n                ...state,\r\n                subscriptions: [...state.subscriptions, {username: action.username}]\r\n            }\r\n        case SAVED_POST:\r\n            \r\n            return {\r\n                ...state,\r\n                savedPosts: [...state.savedPosts, {...action.post, savedPost: true, type: 'saved'}]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                savedPosts: state.savedPosts.filter((item) => {\r\n                    \r\n                    if (item.postId !== action.id) return true;\r\n                    return false;\r\n                })\r\n            }\r\n        case SET_ERROR: \r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case SET_LOADING: \r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setAuthUser = (isAuth, user) => {\r\n    return {\r\n        type: 'auth-reducer/SET_AUTH_USER',\r\n        user: {\r\n            isAuth,\r\n            error: null,\r\n            user,\r\n        }\r\n    }\r\n}\r\n\r\nconst logoutUser = () => {\r\n    return {\r\n        type: 'auth-reducer/LOGOUT_USER',\r\n        user: {\r\n            isAuth: false,\r\n            error: null,\r\n            user: {\r\n                \"id\": null,\r\n                \"name\": \"\",\r\n                \"username\": \"\",\r\n                \"email\": \"\",\r\n                \"address\": {},\r\n                \"phone\": \"\",\r\n                \"website\": \"\",\r\n                \"company\": {}\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nconst getAllUser = (users) => {\r\n    return {\r\n        type: 'profile-reducer/GET_ALL_USERS',\r\n        users\r\n    }\r\n}\r\n\r\nexport const deleteSubscribers = (username) => {\r\n    return {\r\n        type: 'profile-reducer/DELETE_SUBSCRIBERS',\r\n        username\r\n    }\r\n}\r\n\r\nexport const deleteSubscriptions = (username) => {\r\n    return {\r\n        type: 'profile-reducer/DELETE_SUBSCRIPTIONS',\r\n        username\r\n    }\r\n}\r\n\r\nexport const addSubscription = (username) => {\r\n    return {\r\n        type: 'profile-reducer/SUBSCRIPTION',\r\n        username\r\n    }\r\n}\r\n\r\nexport const savedPost = (post) => {\r\n    return {\r\n        type: 'profile-reducer/SAVED_POST',\r\n        post\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => {\r\n    return {\r\n        type: 'profile-reducer/DELETE_POST',\r\n        id\r\n    }\r\n}\r\n\r\nexport const setError = (error) => {\r\n    return {\r\n        type: 'profile-reducer/SET_ERROR',\r\n        error\r\n    }\r\n}\r\n\r\nexport const setLoading = (isLoading) => {\r\n    return {\r\n        type: 'profile-reducer/SET_LOADING',\r\n        isLoading\r\n    }\r\n}\r\n\r\nexport const getMeThunk = (login) => {\r\n    return async (dispatch) => {\r\n        dispatch(setError(false))\r\n        \r\n        try {\r\n            const response = await api.login(login);\r\n\r\n            if (response.data.length !== 0) {\r\n                dispatch(setAuthUser(true, response.data[0]))\r\n            }\r\n        } catch (err) {\r\n            \r\n            dispatch(setError(true))\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginThunk = (login) => {\r\n    return async (dispatch) => {\r\n            dispatch(setError(false))\r\n            dispatch(setLoading(true))\r\n        \r\n        try {\r\n            const response = await api.login(login);\r\n            \r\n            if (response.data.length !== 0) {\r\n                dispatch(getMeThunk(login))\r\n                localStorage.setItem('LOCAL_SAFE_AUTH', login);\r\n                dispatch(AllUserThink())\r\n                \r\n            }\r\n        } catch (err) {\r\n            dispatch(setError(true))\r\n        }\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\nexport const logoutThunk = () => {\r\n    return async (dispatch) => {\r\n        dispatch(logoutUser())\r\n        localStorage.removeItem('LOCAL_SAFE_AUTH');\r\n    }\r\n}\r\n\r\nexport const AllUserThink = () => {\r\n    return async (dispatch) => {\r\n        dispatch(setError(false))\r\n        \r\n        try {\r\n            const responseAllUser = await api.getAllUsers();\r\n        \r\n            if (responseAllUser.data.length !== 0) {\r\n                dispatch(getAllUser(responseAllUser.data));\r\n            }\r\n        } catch (error) {\r\n            dispatch(setError(true))\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { createContext } from \"react\";\r\n\r\n\r\nexport const AuthContext = createContext({});","import * as React from 'react';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport { Box, Divider, IconButton } from '@mui/material';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\n\r\nconst ModalMenu = (props) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const onLogout = () => {\r\n        handleMenuClose()\r\n        props.logoutThunk();\r\n    }\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    return (\r\n        <Box>\r\n            <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n                sx = {props.customStyle}\r\n            >\r\n                {props.children}\r\n            </IconButton>\r\n            <Menu\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                id={menuId}\r\n                keepMounted\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n                }}\r\n                open={isMenuOpen}\r\n                onClose={handleMenuClose}\r\n            >\r\n                <MenuItem \r\n                    component = {Link}\r\n                    to={`/${props.username}/publications`} \r\n                    style = {{textDecoration: 'none',color: 'black'}} \r\n                    onClick={handleMenuClose}\r\n                >\r\n                    <AccountCircle sx = {{marginRight: '10px'}}/> Профиль\r\n                </MenuItem>\r\n\r\n                <MenuItem \r\n                    onClick={handleMenuClose}\r\n                    component = {Link}\r\n                    to= {`/${props.username}/saved`} \r\n                    style = {{textDecoration: 'none',color: 'black'}} \r\n                >\r\n                    <BookmarkBorderIcon sx = {{marginRight: '10px'}}/> Сохнаненное\r\n                </MenuItem>\r\n\r\n                <MenuItem \r\n                    onClick={handleMenuClose}\r\n                    component = {Link}\r\n                    to=\"/accounts/edit\" \r\n                    style = {{textDecoration: 'none',color: 'black'}}\r\n                >\r\n                    <SettingsIcon sx = {{marginRight: '10px'}}/> Настройки\r\n                </MenuItem>\r\n\r\n                <Divider />\r\n                \r\n                <NavLink style = {{\r\n                    textDecoration: 'none',\r\n                    color: 'black'\r\n                }} to=\"/\">\r\n                    <MenuItem onClick={onLogout}>Выйти</MenuItem>\r\n                </NavLink>\r\n            </Menu>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ModalMenu","\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport {Avatar, List, ListItem, ListItemAvatar } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst NotificationModal = (props) => {\r\n\r\n    const handleNotificationOpen = (event) => {\r\n        setNotificationAnchorEl(event.currentTarget);\r\n    };\r\n    const handleNotificationClose = () => {\r\n        setNotificationAnchorEl(null);\r\n    };  \r\n    const [notificationanchorEl, setNotificationAnchorEl] = React.useState(null);\r\n    const isNotificationOpen = Boolean(notificationanchorEl);\r\n    const NotificationId = 'primary-notification';  \r\n\r\n    return (\r\n        <Box>\r\n            <IconButton\r\n                size=\"large\"\r\n                aria-label=\"show 17 new notifications\"\r\n                color=\"inherit\"\r\n                onClick = {handleNotificationOpen}\r\n            >\r\n                {props.children}\r\n            </IconButton>\r\n            <Menu\r\n                id={NotificationId}\r\n                anchorEl={notificationanchorEl}\r\n                open={isNotificationOpen}\r\n                onClose={handleNotificationClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                MenuListProps={{\r\n                'aria-labelledby': 'basic-button',\r\n                }}\r\n                sx = {{\r\n                    maxHeight: '500px',\r\n                }}\r\n            >\r\n                <List sx={{ width: '100%', maxWidth: '500px', minWidth: '300px', bgcolor: 'background.paper', padding: '0px 0px', }}>\r\n                    {\r\n                        props.notificationsData.map((item) => {\r\n                            return (\r\n                                <React.Fragment key = {item.id}>\r\n                                    <ListItem sx = {{\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'space-between'\r\n                                }}>\r\n                                    <Box>\r\n                                        <ListItemAvatar sx={{ display: 'inline-block'}}>\r\n                                            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                                        </ListItemAvatar>\r\n                                        <Typography\r\n                                            sx={{ display: 'inline-block'}}\r\n                                            component=\"span\"\r\n                                            variant=\"body2\"\r\n                                            color=\"text.primary\"\r\n                                        >\r\n                                            <NavLink \r\n                                                style = {{\r\n                                                    textDecoration: 'none', \r\n                                                    color: 'black', \r\n                                                    marginRight: '10px'\r\n                                                }} \r\n                                                to={`/${item.username}/publications`}\r\n                                            >\r\n                                                <b>{item.username}</b>\r\n                                            </NavLink>\r\n                                            {item.message}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    <NavLink onClick = {handleNotificationClose} style = {{textDecoration: 'none', color: 'black'}} to={`/post/1`}><img src={item.img}/></NavLink>\r\n                                    \r\n                                    </ListItem>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </Menu>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default NotificationModal","import {useState} from \"react\"\r\n\r\nconst useForm = (initialValue) => {\r\n    const [values, setValues] = useState(initialValue);\r\n\r\n    const handleInputChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    const handleCheckboxChange = (e) => {\r\n        const {name, checked} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: checked,\r\n        })\r\n    }\r\n\r\n    return({\r\n        values,\r\n        handleInputChange,\r\n        handleCheckboxChange\r\n    })\r\n}\r\n\r\nexport default useForm;","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport useForm from '../customHooks/useFrom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst initialPostValues = {\r\n    searchUser: ''\r\n}\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: '10%',\r\n    [theme.breakpoints.down('md')]: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n        },\r\n    },\r\n}));\r\n\r\nconst SearchInputComponent = () => {\r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(initialPostValues);\r\n\r\n    let history = useHistory()\r\n\r\n    const handleSearchUser = () => {\r\n        \r\n        history.push(`/${values.searchUser}/publications`); \r\n        values.searchUser = ''\r\n    }\r\n    return (\r\n        <Search sx = {{\r\n            justify: 'center'\r\n        }}>\r\n            <IconButton onClick ={handleSearchUser} sx ={{color: 'inherit'}}>\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <StyledInputBase\r\n                name = \"searchUser\"\r\n                value={values.searchUser}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Search…\"\r\n                inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n        </Search>\r\n    )\r\n}\r\n\r\nexport default SearchInputComponent","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Badge from '@mui/material/Badge';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport Button from '@mui/material/Button';\r\nimport { CssBaseline, Grid, useScrollTrigger } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { connect } from 'react-redux';\r\nimport { logoutThunk } from '../redux/auth-reducer';\r\nimport { AuthContext } from '../context/authContext'\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\nimport ModalMenu from './ModalMenu';\r\nimport NotificationModal from './NotificationModal';\r\nimport SearchInput from './SearchInputComponent';\r\n\r\nconst notificationsData = [\r\n    {\r\n        id: '1',\r\n        username: 'Antonette',\r\n        message: \"I'll be in your\",\r\n        img: 'https://via.placeholder.com/40/197d29',\r\n    },\r\n    {\r\n        id: '2',\r\n        username: 'Antonette',\r\n        message: \"I'll be in your\",\r\n        img: 'https://via.placeholder.com/40/197d29',\r\n    },\r\n    {\r\n        id: '3',\r\n        username: 'Antonette',\r\n        message: \"I'll be in your\",\r\n        img: 'https://via.placeholder.com/40/197d29',\r\n    },\r\n]\r\n\r\nfunction ElevationScroll(props) {\r\n    const { children, window } = props;\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 0,\r\n        target: window ? window() : undefined,\r\n    });\r\n\r\n    return React.cloneElement(children, {\r\n        elevation: trigger ? 4 : 0,\r\n    });\r\n}\r\n\r\nfunction PrimarySearchAppBar(props) {    \r\n\r\n    const isAuth = React.useContext(AuthContext);    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n                <ElevationScroll {...props}>\r\n                    <AppBar>\r\n                        <Toolbar sx={{ mr: 1 }}>\r\n                            <Grid\r\n                                alignItems=\"center\"\r\n                                justifyContent=\"center\"\r\n                                container\r\n                                direction=\"row\"\r\n                            >\r\n                                {isAuth.isAuth ?\r\n                                    <Grid\r\n                                        alignItems=\"center\"\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justifyContent=\"space-between\"\r\n                                        sx = {{\r\n                                            maxWidth: '800px'\r\n                                        }}\r\n                                    >\r\n                                        <NavLink style = {{\r\n                                            textDecoration: 'none',\r\n                                            color: 'white'\r\n                                        }} to=\"/\">\r\n                                            <Button color=\"inherit\">\r\n                                                <Typography\r\n                                                    variant=\"h6\"\r\n                                                    noWrap\r\n                                                    component=\"div\"\r\n                                                >\r\n                                                    My Album\r\n                                                </Typography>\r\n                                            </Button>\r\n                                        </NavLink>\r\n                                        \r\n                                        <SearchInput/>\r\n\r\n                                        <div>\r\n                                            <Box sx={{ flexGrow: 1 }} />\r\n                                            <Box sx={{ display: 'flex' }}>\r\n                                                <NavLink style = {{\r\n                                                    textDecoration: 'none',\r\n                                                    color: 'white'\r\n                                                }} to=\"/\">\r\n                                                    <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                                                        <HomeIcon />\r\n                                                    </IconButton>\r\n                                                </NavLink>\r\n                                                <NavLink style = {{\r\n                                                    textDecoration: 'none',\r\n                                                    color: 'white'\r\n                                                }} to=\"/create\">\r\n                                                    <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                                                        <AddBoxIcon />\r\n                                                    </IconButton>\r\n                                                </NavLink>\r\n\r\n                                                <NotificationModal\r\n                                                    notificationsData = {notificationsData}\r\n                                                >\r\n                                                    <Badge badgeContent={notificationsData.length} color=\"error\">\r\n                                                    <NotificationsIcon />\r\n                                                    </Badge>\r\n                                                </NotificationModal>\r\n                                                \r\n                                                <ModalMenu\r\n                                                    logoutThunk = {props.logoutThunk}\r\n                                                    username = {props.username}\r\n                                                >\r\n                                                    <AccountCircle />\r\n                                                </ModalMenu>\r\n                                            </Box>\r\n                                        </div>\r\n                                    </Grid>\r\n                                    :\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        noWrap\r\n                                        component=\"div\"\r\n                                        sx={{ display: { xs: 'none', sm: 'block' } }}\r\n                                    >\r\n                                        MY ALBUM\r\n                                    </Typography>\r\n                                }\r\n                            </Grid>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </ElevationScroll>\r\n            <Toolbar />\r\n        </React.Fragment>  \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        username: state.authReducer.user.username\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logoutThunk})(PrimarySearchAppBar)","export default __webpack_public_path__ + \"static/media/loader.5cea070a.svg\";","import loader from './loader.svg'\r\n\r\nconst LoaderPage = () => {\r\n    return (\r\n        <>\r\n            <img style = {{marginTop: '15%'}} src={loader} alt=\"Loading\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoaderPage","import { useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport LoaderPage from \"../common/LoaderPage\"\r\nimport { loginThunk } from \"../redux/auth-reducer\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n        error: state.authReducer.error,\r\n        isLoading: state.authReducer.isLoading\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        useEffect(() => {\r\n            if(localStorage.getItem('LOCAL_SAFE_AUTH') && props.isAuth === false) {\r\n                props.loginThunk(localStorage.getItem('LOCAL_SAFE_AUTH'))\r\n            }\r\n        }, [props.isAuth])\r\n\r\n        if (!(localStorage.getItem('LOCAL_SAFE_AUTH')) && !props.isAuth) return <Redirect to = '/login'/>\r\n\r\n        if (props.isLoading || !props.isAuth) return <LoaderPage/>;\r\n\r\n        return <Component {...props}/>\r\n        \r\n    }\r\n\r\n    return connect(mapStateToProps, {loginThunk})(RedirectComponent)\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Card, CardContent, CardHeader, CardMedia, Divider, Grid, IconButton, TextField } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport useForm from '../customHooks/useFrom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    height: 700,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    padding: 0,\r\n};\r\n\r\nconst styleCard = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    height: 700,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    padding: 0,\r\n    borderRadius: '15px'\r\n};\r\n\r\nconst styleExitButton = {\r\n    position: 'absolute',\r\n    top: '3%',\r\n    left: '98%',\r\n    transform: 'translate(-50%, -50%)',\r\n    color: 'white'\r\n}\r\n\r\nconst initialPostValues = {\r\n    postComment: '',\r\n}\r\n\r\nexport default function BasicModal(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    \r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(initialPostValues);\r\n\r\n    const sendPost = () => {\r\n        props.addComment(values.postComment, props.post.postId)\r\n        values.postComment = ''\r\n    }\r\n\r\n    const deletePost = () => {\r\n        props.deletePost(props.post.postId)\r\n        props.setSave(props.post.postId)\r\n    }\r\n\r\n    const savedPost = () => {\r\n        props.savedPost(props.post)\r\n        props.setSave(props.post.postId)\r\n    }\r\n        \r\n    return (\r\n        <React.Fragment>\r\n            <Button sx = {props.customStyle} color={'inherit'} onClick={handleOpen}>{props.children}</Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx = {{style}}>\r\n                <Card sx={styleCard}>\r\n                    <Box sx = {{display: 'flex', justifyContent: 'start', alignItems: 'center', height: '100%'}}>\r\n                        <Box  sx = {{width: '600px', height: '100%', display: 'flex', alignItems: 'center', backgroundColor: 'black'}}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                height=\"auto\"\r\n                                width = '600px'\r\n                                image= {props.post.url}\r\n                                alt=\"green iguana\"\r\n                            />\r\n                        </Box>\r\n                        <Box sx = {{width: '400px', height: '100%', display: 'inline-block'}}>\r\n                            <CardContent sx = {{padding: '0'}}>\r\n                                <Box sx = {{height: '60px', width: '100%'}}>\r\n                                    <CardHeader\r\n                                        sx = {{padding: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                        avatar={\r\n                                            <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                                                R\r\n                                            </Avatar>\r\n                                        }\r\n                                        action={\r\n                                            <IconButton aria-label=\"settings\" sx = {{padding: 0, paddingTop: '15px'}}>\r\n                                                <MoreVertIcon />\r\n                                            </IconButton>\r\n                                        }\r\n                                        title= {\r\n                                            <NavLink style = {{textDecoration: 'none', color: 'black'}} to={`/${props.post.username}/publications`}>{props.post.username}</NavLink>\r\n                                        }\r\n                                    />\r\n                                </Box>\r\n                                <Divider/>\r\n                                <Box sx = {{height: '480px', width: '100%', justifyContent: 'space-between', alignItems: 'center', overflowY: 'scroll'}}>\r\n                                    {\r\n                                        props.comments.map((item) => {\r\n                                            return (\r\n                                                <Box key = {item.id} sx = {{padding: '10px'}}>\r\n                                                    <Box sx={{width: '100%', margin: '0', display: 'flex', justifyContent: 'left', alignItems: 'center'}}>\r\n                                                        <Avatar sx={{ bgcolor: red[500], width: 24, height: 24 }} aria-label=\"recipe\">\r\n                                                            R\r\n                                                        </Avatar>\r\n                                                        <Typography\r\n                                                            sx={{ display: 'inline-block', width: '300px', paddingLeft: '15px'}}\r\n                                                            component=\"span\"\r\n                                                            variant=\"body2\"\r\n                                                            color=\"text.primary\"\r\n                                                        >\r\n                                                            <a href=\"/\">User</a>\r\n                                                            <Typography component=\"span\" variant=\"body2\" sx={{ paddingLeft: '15px'}}>\r\n                                                                {item.body}\r\n                                                            </Typography>\r\n                                                        </Typography>\r\n                                                    </Box>\r\n                                                    <Typography sx = {{paddingLeft: '50px', color: 'gray'}} fontSize = '12px'>\r\n                                                        3 ч.\r\n                                                    </Typography>\r\n                                                </Box>   \r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Box>\r\n                                <Divider/>\r\n                                <Box sx = {{height: '100px', width: '100%'}}>\r\n                                <Grid\r\n                                    alignItems=\"center\"\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justifyContent=\"space-between\"\r\n                                    sx = {{paddingBottom: '0px'}}\r\n                                >\r\n                                    <Box>\r\n                                        <IconButton aria-label=\"add to favorites\" onClick = {() => props.setLike(props.post.postId)}>\r\n                                            {props.post.like \r\n                                                ? <FavoriteIcon fontSize = 'medium' color='error'/>\r\n                                                : <FavoriteBorderIcon fontSize = 'medium' />\r\n                                            }\r\n                                        </IconButton>\r\n                                        <NavLink style = {{textDecoration: 'none'}} to={`/post/${props.post.id}`}>\r\n                                            <IconButton aria-label=\"share\">\r\n                                                <OpenInNewIcon />\r\n                                            </IconButton>\r\n                                        </NavLink>\r\n                                        \r\n                                    </Box>\r\n                                    {\r\n                                        props.post.savedPost\r\n                                        ?<IconButton onClick = {deletePost} aria-label=\"share\"><BookmarkIcon /></IconButton>                                    \r\n                                        :<IconButton onClick = {savedPost} aria-label=\"share\"><BookmarkBorderIcon/></IconButton>\r\n                                    }\r\n                                    \r\n                                </Grid>\r\n                                    <Box sx = {{paddingLeft: '10px'}}>\r\n                                        <Typography fontSize = '15px'>\r\n                                            <b>{props.post.likeCount} отметок \"Нравится\"</b>\r\n                                        </Typography>\r\n                                        <Typography fontSize = '10px' color = 'gray'>\r\n                                            5 ЧАСОВ НАЗАД\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </Box>\r\n                                <Divider/>\r\n                                <form>\r\n                                    <Grid\r\n                                        alignItems=\"center\"\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justifyContent=\"space-between\"\r\n                                        sx = {{height: '50px', width: '100%'}}\r\n                                    >\r\n                                        <TextField placeholder=\"Оставить комментарий\" \r\n                                        InputProps={{ disableUnderline: true }} \r\n                                        sx = {{width: '300px', paddingLeft: '10px'}} \r\n                                        id=\"filled-basic\" \r\n                                        label=\"\" \r\n                                        variant=\"standard\" \r\n                                        name = \"postComment\"\r\n                                        onChange = {handleInputChange}\r\n                                        value = {values.postComment}\r\n                                        />\r\n                                        {\r\n                                            values.postComment\r\n                                            ? <Button \r\n                                                variant=\"text\"\r\n                                                onClick = {sendPost}\r\n                                            >   \r\n                                            Send\r\n                                            </Button>\r\n                                            : <Button \r\n                                                variant=\"text\"\r\n                                                disabled\r\n                                            >   \r\n                                            Send\r\n                                            </Button>\r\n                                        }\r\n                                    </Grid>\r\n                                </form>\r\n                            </CardContent>\r\n                        </Box>\r\n                    </Box>\r\n                </Card>\r\n                    <IconButton sx = {styleExitButton} onClick = {handleClose}>\r\n                        <CloseIcon fontSize = 'large' />\r\n                    </IconButton>\r\n                </Box>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport { Button, Divider, Grid, TextField } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport PostInModal from './PostInModalFeed'\r\nimport useForm from '../customHooks/useFrom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\n\r\nconst initialPostValues = {\r\n    postComment: '',\r\n}\r\n\r\nexport default function RecipeReviewCard( props) {\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    \r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(initialPostValues);\r\n\r\n    const sendPost = () => {\r\n        props.addComment(values.postComment, props.post.postId)\r\n        values.postComment = ''\r\n    }\r\n\r\n    const deletePost = () => {\r\n        props.deletePost(props.post.postId)\r\n        props.setSave(props.post.postId)\r\n    }\r\n\r\n    const savedPost = () => {\r\n        props.savedPost(props.post)\r\n        props.setSave(props.post.postId)\r\n    }\r\n    \r\n    return (\r\n        <Box sx = {{width: '100%', justifyContent: 'center', display: 'flex', paddingBottom: '20px'}}>\r\n            <Card sx={{ width: 600, padding: '0px', marginBottom: '0px', border: 'solid 1px gray'}}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                            R\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <IconButton aria-label=\"settings\" sx = {{padding: 0, paddingTop: '10px', paddingRight: '10px'}}>\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                    }\r\n                    title= {\r\n                        <NavLink style = {{textDecoration: 'none', color: 'black'}} to={`/${props.post.username}/publications`}>{props.post.username}</NavLink>\r\n                    }\r\n                    subheader=\"September 14, 2016\"\r\n                />\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    height=\"auto\"\r\n                    image= {props.post.url}\r\n                    width = '100%'\r\n                    alt=\"Paella dish\"\r\n                />\r\n                <CardActions disableSpacing>\r\n                    <Grid\r\n                        alignItems=\"center\"\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"space-between\"\r\n                    >\r\n                        <Box>\r\n                            <IconButton aria-label=\"add to favorites\" onClick = {() => props.setLike(props.post.postId)}>\r\n                                {props.post.like \r\n                                    ? <FavoriteIcon fontSize = 'medium' color='error'/>\r\n                                    : <FavoriteBorderIcon fontSize = 'medium' />\r\n                                }\r\n                                \r\n                            </IconButton>\r\n                        </Box>\r\n                        {\r\n                            props.post.savedPost\r\n                            ?<IconButton onClick = {deletePost} aria-label=\"share\"><BookmarkIcon /></IconButton>                                    \r\n                            :<IconButton onClick = {savedPost} aria-label=\"share\"><BookmarkBorderIcon/></IconButton>\r\n                        }\r\n                    </Grid>\r\n                    \r\n                </CardActions>\r\n                <Typography sx = {{paddingLeft: '16px'}}>\r\n                    {props.post.likeCount} отметок \"Нравится\"\r\n                </Typography>\r\n                {!expanded \r\n                    ? <Box>\r\n                        <Typography sx = {{paddingLeft : '16px', paddingRight : '16px', paddingBottom : '0', paddingTop : '0'}}>\r\n                            <a href=\"/\">{props.post.username}</a> {props.post.title.slice(0, 300)}{props.post.title.length > 300 && '...'}\r\n                            {\r\n                                props.post.title.length > 300 && <CardActions disableSpacing sx = {{padding: '0', paddingLeft: '8px', height: '16px', display: 'inline-block'}}>\r\n                                    <IconButton\r\n                                        expand={expanded}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                        sx = {{fontSize: '16px', padding: '0', paddingLeft: '8px'}}\r\n                                    >\r\n                                        ещё\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                                \r\n                            }\r\n                            </Typography>\r\n                        </Box>\r\n                    : <Collapse in={expanded} timeout=\"auto\">\r\n                        <CardContent sx = {{paddingLeft : '16px', paddingRight : '16px', paddingBottom : '0', paddingTop : '0'}}>\r\n                            <Typography paragraph sx = {{margin: '0'}}>\r\n                                <a href=\"/\">{props.post.username}</a> {props.post.title}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Collapse>\r\n                }\r\n                <CardContent sx = {{padding : '0px', marginBottom: '0px'}}>\r\n                    <Box>\r\n                        <Box sx={{paddingLeft: '16px'}}>\r\n                            <PostInModal \r\n                                addComment = {props.addComment} \r\n                                setLike = {props.setLike} \r\n                                comments = {props.post.comments} \r\n                                post = {props.post}\r\n                                deletePost = {props.deletePost}\r\n                                savedPost = {props.savedPost}\r\n                                setSave = {props.setSave}\r\n                                customStyle = {{\r\n                                    padding: '0'\r\n                                }}\r\n                            >\r\n                                Посмотеть комментарии\r\n                            </PostInModal>\r\n                            \r\n                        </Box>\r\n                    </Box>\r\n                    <Typography sx = {{paddingLeft: '16px', paddingBottom: '8px', color: 'gray'}} fontSize = '10px'>\r\n                        21 ЧАСОВ НАЗАД\r\n                    </Typography>\r\n                    <Divider />\r\n                    <form>\r\n                        <Grid\r\n                            alignItems=\"center\"\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"space-between\"\r\n                            sx = {{height: '40px'}}\r\n                        >\r\n                            <TextField \r\n                                placeholder=\"Оставить комментарий\" \r\n                                InputProps={{ disableUnderline: true }} \r\n                                sx = {{width: '430px', paddingLeft: '10px'}} \r\n                                id=\"filled-basic\"\r\n                                name = \"postComment\"\r\n                                variant=\"standard\" \r\n                                onChange = {handleInputChange}\r\n                                value = {values.postComment}\r\n                            />\r\n                            {\r\n                                values.postComment\r\n                                ? <Button \r\n                                    variant=\"text\"\r\n                                    onClick = {sendPost}\r\n                                >   \r\n                                Send\r\n                                </Button>\r\n                                : <Button \r\n                                    onClick = {sendPost}\r\n                                    variant=\"text\"\r\n                                    disabled\r\n                                >   \r\n                                Send\r\n                                </Button>\r\n                            }\r\n                        </Grid>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    );\r\n}\r\n\r\n// disabled","export default __webpack_public_path__ + \"static/media/loading.603c632f.gif\";","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useObserver = (ref, canLoad, isPostsLoading, cb, ...values) => {\r\n    const observer = useRef()\r\n    useEffect(() => {\r\n        \r\n        if (isPostsLoading) return;\r\n        if (observer.current) observer.current.disconnect();\r\n        const callback = function(entries) {\r\n            \r\n            if (entries[0].isIntersecting && canLoad) {\r\n                cb(...values)\r\n            }\r\n        };\r\n        observer.current = new IntersectionObserver(callback);\r\n        observer.current.observe(ref.current)\r\n    }, [isPostsLoading])\r\n}","import React, { useRef } from 'react'\r\nimport Post from './Post'\r\nimport loader from './loading.gif'\r\nimport { useObserver } from '../customHooks/useOserver'\r\n\r\nlet Feed = (props) => {\r\n\r\n    const lastElement = useRef()\r\n    \r\n    useObserver(lastElement, props.page <= props.totalPageCount, props.isPostsLoading, props.getPostsThink, props.page);\r\n\r\n    let postsArray = props.posts.map((item) => {\r\n        return (\r\n            <Post \r\n                key = {item.postId}\r\n                addComment = {props.addComment} \r\n                setLike = {props.setLike} \r\n                post = {item}\r\n                deletePost = {props.deletePost}\r\n                savedPost = {props.savedPost}\r\n                setSave = {props.setSave}\r\n            />\r\n        )\r\n    })\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {postsArray}\r\n            <img ref = {lastElement} style = {{width: '100px'}} src={loader} alt=\" \" />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Feed;","import { api } from '../api/api';\r\nimport { setError } from './auth-reducer';\r\n\r\nconst GET_POSTS = 'feed-reducer/GET_POSTS';\r\nconst ITERATION_PAGE = 'feed-reducer/ITERATION_PAGE';\r\nconst SET_PAGE = 'feed-reducer/SET_PAGE';\r\nconst SET_POSTS_LOADING = 'feed-reducer/SET_POSTS_LOADING';\r\nconst SET_LIKE = 'feed-reducer/SET_LIKE';\r\nconst ADD_COMMENT = 'feed-reducer/ADD_COMMENT';\r\nconst SET_SAVE = 'feed-reducer/SET_SAVE';\r\n\r\n\r\nlet initialState = {\r\n    page: 1,\r\n    posts: [],\r\n    isPostsLoading: false,\r\n    totalPageCount: 50,\r\n}\r\n\r\nconst feedReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.concat(action.posts),\r\n            }\r\n        case ITERATION_PAGE: \r\n            return {\r\n                ...state,\r\n                page: ++state.page\r\n            }\r\n        case SET_PAGE: \r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            }\r\n        case SET_POSTS_LOADING:\r\n            return {\r\n                ...state,\r\n                isPostsLoading: action.isPostsLoading\r\n            }\r\n        case SET_LIKE:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((item) => {\r\n                    if (item.postId === action.postId) {\r\n                        item.like = !item.like;\r\n                        if (item.like) {\r\n                            item.likeCount++;\r\n                            return item;\r\n                        }\r\n                        item.likeCount--;\r\n                        return item;\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        case SET_SAVE:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((item) => {\r\n                    if (item.postId === action.postId) {\r\n                        item.savedPost = !item.savedPost;\r\n                        return item;\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        case ADD_COMMENT:\r\n            \r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((item) => {\r\n                    if (item.postId === action.postId) {\r\n                        item.comments.push({'body': action.comment})\r\n                        return item;\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getPosts = (posts) => {\r\n    return {\r\n        type: 'feed-reducer/GET_POSTS',\r\n        posts\r\n    }\r\n}\r\n\r\nexport const iteratonPage = () => {\r\n    return {\r\n        type: 'feed-reducer/ITERATION_PAGE'\r\n    }\r\n}\r\n\r\nexport const setPage = (page) => {\r\n    return {\r\n        type: 'feed-reducer/SET_PAGE',\r\n        page\r\n    }\r\n}\r\n\r\nexport const setPostsLoading = (isPostsLoading) => {\r\n    return {\r\n        type: 'feed-reducer/SET_POSTS_LOADING',\r\n        isPostsLoading\r\n    }\r\n}\r\n\r\nexport const setLike = (postId) => {\r\n    return {\r\n        type: 'feed-reducer/SET_LIKE',\r\n        postId,\r\n    }\r\n}\r\n\r\nexport const setSave = (postId) => {\r\n    return {\r\n        type: 'feed-reducer/SET_SAVE',\r\n        postId,\r\n    }\r\n}\r\n\r\nexport const addComment = (comment, postId) => {\r\n    return {\r\n        type: 'feed-reducer/ADD_COMMENT',\r\n        comment,\r\n        postId,\r\n    }\r\n}\r\n\r\n\r\nexport const getPostsThink = (page) => { // Получает 10 постов, по одному от каждого пользователя\r\n    return async (dispatch) => {\r\n        dispatch(setError(false))\r\n        dispatch(setPostsLoading(true))\r\n        try {\r\n            const responseUsers = await api.getAllUsers();\r\n        \r\n            const posts = responseUsers.data.map(async (item, index) => {\r\n            const count = page + index*50;\r\n\r\n            const responsePhoto = await api.getPhoto(count);\r\n            const responseComments = await api.getComments(index)\r\n\r\n            return {\r\n                postId: responsePhoto.data[0].id,\r\n                albumId: item.id,\r\n                username: item.username,\r\n                url: responsePhoto.data[0].url,\r\n                title: responsePhoto.data[0].title,\r\n                comments: responseComments.data,\r\n                liked: false,\r\n                likeCount: 0,\r\n                savedPost: false,\r\n            }\r\n        })\r\n\r\n        Promise.all(posts)\r\n            .then(reponse => {\r\n                if (reponse.length !== 0) {\r\n                    dispatch(getPosts(reponse));\r\n                    dispatch(iteratonPage())\r\n                    dispatch(setPostsLoading(false))\r\n                }\r\n            })\r\n        } catch (error) {\r\n            dispatch(setError(true))\r\n        }\r\n    }\r\n}\r\n\r\nexport default feedReducer;","import { Typography } from \"@mui/material\"\r\n\r\nconst NoInternetError = () => {\r\n    return (\r\n        <Typography textAlign={'center'} variant=\"h5\">Нет соединения с интернетом. Попробуйте обновить страницу</Typography>\r\n    )\r\n}\r\n\r\nexport default NoInternetError","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport Feed from './Feed'\r\nimport { getPostsThink, iteratonPage, setPage, setLike, addComment, setSave } from '../redux/feed-reducer'\r\nimport { deletePost, savedPost } from '../redux/auth-reducer';\r\nimport NoInternetError from '../common/NoInternetError'\r\n\r\nconst FeedAPIContainer = (props) => {\r\n    useEffect(() => {\r\n        props.setPage(1)\r\n    }, [])\r\n    useEffect(() => {\r\n        document.title = 'myAlbum'\r\n    }, [])\r\n\r\n    if (props.error) return <NoInternetError/>\r\n    \r\n    return (\r\n        <Feed\r\n            posts = {props.posts}\r\n            page = {props.page}\r\n            isPostsLoading = {props.isPostsLoading}\r\n            totalPageCount = {props.totalPageCount}\r\n            getPostsThink = {props.getPostsThink}\r\n            setLike = {props.setLike}\r\n            addComment = {props.addComment}\r\n            deletePost = {props.deletePost}\r\n            savedPost = {props.savedPost}\r\n            setSave = {props.setSave}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.feedPage.posts,\r\n        page: state.feedPage.page,\r\n        isPostsLoading: state.feedPage.isPostsLoading,\r\n        totalPageCount: state.feedPage.totalPageCount,\r\n        error: state.authReducer.error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        iteratonPage: () => {\r\n            dispatch(iteratonPage())\r\n        },\r\n        setPage: (page) => {\r\n            dispatch(setPage(page))\r\n        },\r\n        setLike: (postId) => {\r\n            dispatch(setLike(postId))\r\n        },\r\n        setSave: (postId) => {\r\n            dispatch(setSave(postId))\r\n        },\r\n        addComment: (comment, postId) => {\r\n            dispatch(addComment(comment, postId))\r\n        },\r\n        savedPost: (post) => {\r\n            dispatch(savedPost(post))\r\n        },\r\n        deletePost: (id) => {\r\n            dispatch(deletePost(id))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(null, {getPostsThink}),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(FeedAPIContainer);","import * as React from 'react';\r\nimport Modal from '@mui/material/Modal';\r\nimport {IconButton, ListItemText, MenuItem, MenuList, Paper } from '@mui/material';\r\nimport Divider from '@mui/material/Divider';\r\nimport { Box } from '@mui/system';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SettingsModal(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleSettingsOpen = () => setOpen(true);\r\n    const handleSettingsClose = () => setOpen(false);\r\n\r\n    const multyHandle = () => {\r\n        props.handleFormProblemDialogOpen();\r\n        handleSettingsClose()\r\n    }\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        width: 500,\r\n        transform: 'translate(-50%, -50%)',\r\n        bgcolor: 'background.paper',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IconButton variant=\"text\" color={'inherit'} onClick={handleSettingsOpen}>{props.children}</IconButton>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleSettingsClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Paper>\r\n                        <MenuList>\r\n                            <MenuItem component = {Link} to = '/accounts/changepassword' onClick={handleSettingsClose} sx = {{textAlign: 'center'}}>\r\n                                <ListItemText>Сменить пароль</ListItemText>\r\n                            </MenuItem>\r\n\r\n                            <Divider/>\r\n\r\n                            <MenuItem component = {Link} to = '/accounts/emails' onClick={handleSettingsClose} sx = {{textAlign: 'center'}}>\r\n                                <ListItemText>Уведомления</ListItemText>\r\n                            </MenuItem>\r\n\r\n                            <Divider />\r\n\r\n                            <MenuItem component = {Link} to = '/accounts/privacy_and_security' onClick={handleSettingsClose} sx = {{textAlign: 'center'}}>\r\n                                <ListItemText>Конфиденциальность и безопасность</ListItemText>\r\n                            </MenuItem>\r\n\r\n                            <Divider />\r\n\r\n                            <MenuItem onClick={multyHandle} sx = {{textAlign: 'center'}}>\r\n                                <ListItemText>Сообщить о проблеме</ListItemText>\r\n                            </MenuItem>\r\n\r\n                            <Divider sx = {{marginBottom: '8px', marginTop: '8px'}} />\r\n\r\n                            <MenuItem onClick={handleSettingsClose} sx = {{textAlign: 'center'}}>\r\n                                <ListItemText>Выход</ListItemText>\r\n                            </MenuItem>\r\n\r\n                            <Divider />\r\n\r\n                            <MenuItem onClick={handleSettingsClose} sx = {{textAlign: 'center'}}>\r\n                                <ListItemText>Отмена</ListItemText>\r\n                            </MenuItem>\r\n                        </MenuList>\r\n                    </Paper>\r\n                </Box>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}","export const chunkArray = (arr, chunk = 3) => {\r\n    let newArray = []\r\n    for (let i = 0; i < arr.length; i += chunk) {\r\n        newArray.push(arr.slice(i, i + chunk))\r\n    }\r\n    return newArray;\r\n} ","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { ButtonBase, Card, CardContent, CardHeader, CardMedia, Divider, Grid, IconButton, TextField } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport useForm from '../customHooks/useFrom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport { styled } from '@mui/material/styles';\r\nimport ModeCommentIcon from '@mui/icons-material/ModeComment';\r\n\r\nconst ImageButton = styled(ButtonBase)(({ theme }) => ({\r\n    position: 'relative',\r\n    width: '30%',\r\n    paddingBottom: '30%',\r\n    height: '0',\r\n    margin: '0px 16px',\r\n    '& .TypographyOpacity-root': {\r\n        opacity: 0,\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n        width: '33.3%',\r\n        paddingBottom: '33.3%',\r\n        margin: '0px'\r\n    },\r\n    '&:hover, &.Mui-focusVisible': {\r\n        zIndex: 1,\r\n        '& .MuiImageBackdrop-root': {\r\n            opacity: 0.7,\r\n        },\r\n        '& .MuiImageMarked-root': {\r\n            opacity: 0,\r\n        },\r\n        '& .TypographyOpacity-root': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}));\r\n\r\nconst ImageSrc = styled('span')({\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n    \r\n});\r\n    \r\nconst Image = styled('span')(({ theme }) => ({\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n}));\r\n\r\nconst ImageBackdrop = styled('span')(({ theme }) => ({\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0,\r\n    transition: theme.transitions.create('opacity'),\r\n}));\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    height: 700,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    padding: 0,\r\n};\r\n\r\nconst styleCard = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    height: 700,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    padding: 0,\r\n    borderRadius: '15px'\r\n};\r\n\r\nconst styleExitButton = {\r\n    position: 'absolute',\r\n    top: '3%',\r\n    left: '98%',\r\n    transform: 'translate(-50%, -50%)',\r\n    color: 'white'\r\n}\r\n\r\nconst initialPostValues = {\r\n    postComment: '',\r\n}\r\n\r\nexport default function BasicModal(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    \r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(initialPostValues);\r\n\r\n    const sendPost = () => {\r\n        props.addComment(values.postComment, props.post.postId)\r\n        values.postComment = ''\r\n    }\r\n\r\n    const deletePost = () => {\r\n        props.deletePost(props.post.postId)\r\n        if (props.post.type !== 'saved') {\r\n            props.setSave(props.post.postId)\r\n        }\r\n        if (props.post.type === 'saved') {\r\n            handleClose()\r\n        }\r\n    }\r\n\r\n    const savedPost = () => {\r\n        props.savedPost(props.post)\r\n        props.setSave(props.post.postId)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n                <ImageButton\r\n                    onClick={handleOpen}\r\n                    focusRipple\r\n                >\r\n                    <ImageSrc \r\n                        style={{ \r\n                            backgroundImage: `url(${props.item.url}?w=164&h=164&fit=crop&auto=format)` \r\n                        }} \r\n                    />\r\n                    <ImageBackdrop className=\"MuiImageBackdrop-root\" />\r\n                    <Image>\r\n                        <Typography\r\n                            className = 'TypographyOpacity-root' \r\n                            sx = {{\r\n                                display: 'flex', \r\n                                justifyContent: 'space-around', \r\n                                alignItems: \"center\", \r\n                                width: '100px'\r\n                            }}\r\n                        >\r\n                            <FavoriteIcon \r\n                                fontSize = 'small'\r\n                            /> \r\n                            {props.item.likeCount} \r\n                            <ModeCommentIcon/> \r\n                            {props.item.comments.length}\r\n                        </Typography>\r\n                    </Image>                                                    \r\n                </ImageButton>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx = {{style}}>\r\n                <Card  sx={styleCard}>\r\n                    <Box sx = {{display: 'flex', justifyContent: 'start', alignItems: 'center', height: '100%'}}>\r\n                        <Box  sx = {{width: '600px', height: '100%', display: 'flex', alignItems: 'center', backgroundColor: 'black'}}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                height=\"auto\"\r\n                                width = '600px'\r\n                                image= {props.post.url}\r\n                                alt=\"green iguana\"\r\n                            />\r\n                        </Box>\r\n                        <Box sx = {{width: '400px', height: '100%', display: 'inline-block'}}>\r\n                            <CardContent sx = {{padding: '0'}}>\r\n                                <Box sx = {{height: '60px', width: '100%'}}>\r\n                                    <CardHeader\r\n                                        sx = {{padding: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                        avatar={\r\n                                            <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                                                R\r\n                                            </Avatar>\r\n                                        }\r\n                                        action={\r\n                                            <IconButton aria-label=\"settings\" sx = {{padding: 0, paddingTop: '15px'}}>\r\n                                                <MoreVertIcon />\r\n                                            </IconButton>\r\n                                        }\r\n                                        title= {\r\n                                            <NavLink style = {{textDecoration: 'none', color: 'black'}} to={`/${props.post.username}/publications`}>{props.post.username}</NavLink>\r\n                                        }\r\n                                    />\r\n                                </Box>\r\n                                <Divider/>\r\n                                <Box sx = {{height: '480px', width: '100%', justifyContent: 'space-between', alignItems: 'center', overflowY: 'scroll'}}>\r\n                                    {\r\n                                        props.comments.map((item) => {\r\n                                            return (\r\n                                                <Box key = {item.id} sx = {{padding: '10px'}}>\r\n                                                    <Box sx={{width: '100%', margin: '0', display: 'flex', justifyContent: 'left', alignItems: 'center'}}>\r\n                                                        <Avatar sx={{ bgcolor: red[500], width: 24, height: 24 }} aria-label=\"recipe\">\r\n                                                            R\r\n                                                        </Avatar>\r\n                                                        <Typography\r\n                                                            sx={{ display: 'inline-block', width: '300px', paddingLeft: '15px'}}\r\n                                                            component=\"span\"\r\n                                                            variant=\"body2\"\r\n                                                            color=\"text.primary\"\r\n                                                        >\r\n                                                            <a href=\"/\">User</a>\r\n                                                            <Typography component=\"span\" variant=\"body2\" sx={{ paddingLeft: '15px'}}>\r\n                                                                {item.body}\r\n                                                            </Typography>\r\n                                                        </Typography>\r\n                                                    </Box>\r\n                                                    <Typography sx = {{paddingLeft: '50px', color: 'gray'}} fontSize = '12px'>\r\n                                                        3 ч.\r\n                                                    </Typography>\r\n                                                </Box>   \r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Box>\r\n                                <Divider/>\r\n                                <Box sx = {{height: '100px', width: '100%'}}>\r\n                                <Grid\r\n                                    alignItems=\"center\"\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justifyContent=\"space-between\"\r\n                                    sx = {{paddingBottom: '0px'}}\r\n                                >\r\n                                    <Box>\r\n                                        <IconButton aria-label=\"add to favorites\" onClick = {() => props.setLike(props.post.postId)}>\r\n                                            {props.post.like \r\n                                                ? <FavoriteIcon fontSize = 'medium' color='error'/>\r\n                                                : <FavoriteBorderIcon fontSize = 'medium' />\r\n                                            }\r\n                                        </IconButton>\r\n                                        <NavLink style = {{textDecoration: 'none'}} to={`/post/${props.post.id}`}>\r\n                                            <IconButton aria-label=\"share\">\r\n                                                <OpenInNewIcon />\r\n                                            </IconButton>\r\n                                        </NavLink>\r\n                                        \r\n                                    </Box>\r\n                                    {\r\n                                        props.post.savedPost\r\n                                        ?<IconButton onClick = {deletePost} aria-label=\"share\"><BookmarkIcon /></IconButton>                                    \r\n                                        :<IconButton onClick = {savedPost} aria-label=\"share\"><BookmarkBorderIcon/></IconButton>\r\n                                    }\r\n                                    \r\n                                </Grid>\r\n                                    <Box sx = {{paddingLeft: '10px'}}>\r\n                                        <Typography fontSize = '15px'>\r\n                                            <b>{props.post.likeCount} отметок \"Нравится\"</b>\r\n                                        </Typography>\r\n                                        <Typography fontSize = '10px' color = 'gray'>\r\n                                            5 ЧАСОВ НАЗАД\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </Box>\r\n                                <Divider/>\r\n                                <form>\r\n                                    <Grid\r\n                                        alignItems=\"center\"\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justifyContent=\"space-between\"\r\n                                        sx = {{height: '50px', width: '100%'}}\r\n                                    >\r\n                                        <TextField placeholder=\"Оставить комментарий\" \r\n                                        InputProps={{ disableUnderline: true }} \r\n                                        sx = {{width: '300px', paddingLeft: '10px'}} \r\n                                        id=\"filled-basic\" \r\n                                        label=\"\" \r\n                                        variant=\"standard\" \r\n                                        name = \"postComment\"\r\n                                        onChange = {handleInputChange}\r\n                                        value = {values.postComment}\r\n                                        />\r\n                                        {\r\n                                            values.postComment\r\n                                            ? <Button \r\n                                                variant=\"text\"\r\n                                                onClick = {sendPost}\r\n                                            >   \r\n                                            Send\r\n                                            </Button>\r\n                                            : <Button \r\n                                                variant=\"text\"\r\n                                                disabled\r\n                                            >   \r\n                                            Send\r\n                                            </Button>\r\n                                        }\r\n                                    </Grid>\r\n                                </form>\r\n                            </CardContent>\r\n                        </Box>\r\n                    </Box>\r\n                </Card>\r\n                    <IconButton sx = {styleExitButton} onClick = {handleClose}>\r\n                        <CloseIcon fontSize = 'large' />\r\n                    </IconButton>\r\n                </Box>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/loading.3539afbf.svg\";","import { Box } from \"@mui/material\";\r\nimport { chunkArray } from \"../scripts/scripts\";\r\nimport PostingModal from './PostInModal'\r\nimport loader from './loading.svg';\r\n\r\nconst Posts = (props) => {\r\n    return(\r\n        <Box>\r\n            {chunkArray(props.posts).map((item, index) => {\r\n                return (\r\n                    <Box \r\n                        key = {index}\r\n                        sx = {{\r\n                            width: '100%', \r\n                            marginTop: {xs: '0', sm: '0', md: '20px'},\r\n                            display: 'flex',\r\n                            justifyContent: 'left',\r\n                        }}\r\n                    >\r\n                        {\r\n                            item.map((item) => {\r\n                                return (\r\n                                    <PostingModal \r\n                                    item = {item}\r\n                                    key = {item.id}\r\n                                    addComment = {props.addComment} \r\n                                    setLike = {props.setLike} \r\n                                    comments = {item.comments} \r\n                                    post = {item} \r\n                                    savedPost = {props.savedPost}\r\n                                    deletePost = {props.deletePost}\r\n                                    setSave = {props.setSave}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </Box>\r\n                )\r\n            })}\r\n            <img ref = {props.lastElement} style = {props.customStyle} src={loader} alt=\" \" />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Posts","import { Avatar, Button, Dialog, DialogContent, DialogTitle, Divider, IconButton, Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nconst UserListModal = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <Box>\r\n            <Button \r\n                sx = {props.customStyle} \r\n                color={'inherit'} \r\n                onClick={handleOpen}\r\n                disableRipple \r\n                disableFocusRipple\r\n            >\r\n                {props.children}\r\n            </Button>\r\n            <Dialog \r\n                open={open} \r\n                onClose={handleClose}\r\n            >\r\n                <DialogTitle \r\n                    sx = {{\r\n                        display: 'flex', \r\n                        width: '400px', \r\n                        alignItems: 'center', \r\n                        justifyContent: 'space-between', \r\n                        padding: '0', \r\n                        borderBottom: '1px solid black'\r\n                    }}\r\n                >\r\n                    <Typography \r\n                        component = {'span'} \r\n                        sx = {{\r\n                            width: '100%', \r\n                            textAlign: 'center', \r\n                            marginLeft: '40px'\r\n                        }}\r\n                    >\r\n                        {props.titleText}\r\n                    </Typography>\r\n                    <IconButton \r\n                        onClick = {handleClose}>\r\n                        <ClearIcon/>\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent \r\n                    sx = {{\r\n                        padding: '0', \r\n                        overflowY: 'scroll', \r\n                        height: '300px'\r\n                    }}\r\n                >\r\n                    {\r\n                        props.userList.map((item) => {\r\n                            return (\r\n                                <Box \r\n                                    key = {item.id}\r\n                                    sx = {{\r\n                                        display: 'flex', \r\n                                        alignItems: 'center', \r\n                                        justifyContent: 'space-between', \r\n                                        padding: '10px 10px'\r\n                                    }}\r\n                                >\r\n                                    <Box \r\n                                        sx = {{\r\n                                            display: 'flex', \r\n                                            alignItems: 'center'\r\n                                        }}\r\n                                    >\r\n                                        <Avatar \r\n                                            alt=\"Remy Sharp\"\r\n                                            src=\"/static/images/avatar/1.jpg\"\r\n                                            sx={{ \r\n                                                width: 40, \r\n                                                height: 40,\r\n                                            }}\r\n                                        />\r\n                                        <NavLink \r\n                                            style = {{\r\n                                                textDecoration: 'none', \r\n                                                color: 'black', \r\n                                                margin: '0 10px'\r\n                                            }} \r\n                                            to={`/${item.username}/publications`} \r\n                                            onClick={handleClose}\r\n                                        >\r\n                                            {item.username}\r\n                                        </NavLink>\r\n                                    </Box>\r\n                                    { props.userMatch && <Button variant=\"outlined\" onClick = {() => props.deleteUser(item.username)}>{props.buttonText}</Button>}\r\n                                </Box>\r\n                            )\r\n                        })\r\n                    }\r\n                    <Divider/>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default UserListModal","import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, Divider, IconButton, TextField, Typography } from \"@mui/material\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport React from \"react\";\r\n\r\nconst DialogForm = (props) => {\r\n    \r\n    const [value, setValue] = React.useState();\r\n\r\n    const handleChange = (event) => setValue(event.target.value);\r\n\r\n    return (\r\n        <Box>\r\n            <Dialog open={props.openModal} onClose={props.handleFormProblemDialogClose}>\r\n                <DialogTitle sx = {{display: 'flex', width: '500px', alignItems: 'center', justifyContent: 'space-between', paddingBottom: '6px', paddingTop: '6px'}}>\r\n                    <Typography component = {'span'}>\r\n                        Сообщить о проблеме\r\n                    </Typography>\r\n                    <IconButton onClick = {props.handleFormProblemDialogClose}>\r\n                        <ClearIcon/>\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <Divider />\r\n                <DialogContent sx = {{paddingBottom: '6px', paddingTop: '6px'}}>\r\n                    <TextField\r\n                        id=\"outlined-multiline-flexible\"\r\n                        autoFocus\r\n                        multiline\r\n                        label=\"Описание проблемы\"\r\n                        margin=\"dense\"\r\n                        value={value}\r\n                        fullWidth\r\n                        rows={4}\r\n                        onChange={handleChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions sx = {{display: 'flex', width: '500px', alignItems: 'center', justifyContent: 'space-between', paddingBottom: '6px', paddingTop: '6px'}}>\r\n                    <Button onClick={props.handleFormProblemDialogClose}>Отправить жалобу</Button>\r\n                    <Button>Добавить файл</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default DialogForm","import { Avatar, Button, Grid, Tab, Tabs, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport React, { useRef } from 'react';\r\nimport AppsIcon from '@mui/icons-material/Apps';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport { Link, NavLink, Route, Switch, useParams} from 'react-router-dom';\r\nimport SettingsModal from './SettingsModal'\r\nimport { useObserver } from \"../customHooks/useOserver\";\r\nimport Posts from \"./Posts\";\r\nimport UserListModal from \"./UserListModal\";\r\nimport DialogForm from \"./DialogForm\";\r\n\r\nconst typographyStyle = {\r\n    display: 'inline-block',\r\n    marginRight: '20px',\r\n    \r\n}\r\n\r\nconst typographyButtonStyle = {\r\n    display: 'inline-block',\r\n    marginRight: '20px',\r\n    textTransform: 'none',\r\n    color: 'black',\r\n    fontSize: 16,\r\n    fontFamily: 'sans-serif'\r\n}\r\n\r\nconst Profile = (props) => {\r\n\r\n    const lastElement = useRef();\r\n    \r\n    const canLoad = props.currentPage < props.totalPageCount;\r\n    \r\n    useObserver(lastElement, canLoad, props.isPageLoading, props.getAlbumThink, props.user.username, props.currentPage);\r\n    \r\n    const {username, tag} = useParams();\r\n    \r\n    const allTabs = [`/${username}/publications`, `/${username}/saved`];\r\n\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n    const handleFormProblemDialogOpen = () => setOpenModal(true);\r\n    const handleFormProblemDialogClose = () => setOpenModal(false);\r\n        \r\n    return (\r\n        <>\r\n            <Box sx = {{width: '1000px'}}>\r\n                <Grid\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    container\r\n                    direction=\"row\" \r\n                    sx = {{marginTop: '20px'}}\r\n                >\r\n                    <Box sx = {{marginLeft: '100px', marginRight: '100px'}}>\r\n                        <Avatar \r\n                            alt=\"Remy Sharp\"\r\n                            src=\"/static/images/avatar/1.jpg\"\r\n                            sx={{ width: 130, height: 130, marginBottom: '20px' }}\r\n                        />\r\n                    </Box>\r\n                    <Box>   \r\n                        <Box sx = {{marginBottom: '10px'}}>\r\n                            <Typography sx ={typographyStyle}>{props.user.username}</Typography>\r\n                            {\r\n                                props.userMatch \r\n                                    ? <>\r\n                                        <NavLink style = {{\r\n                                                textDecoration: 'none',\r\n                                                color: 'white'\r\n                                            }} to=\"/accounts/edit\">\r\n                                                <Button variant=\"outlined\">Редактировать профиль</Button>\r\n                                        </NavLink>\r\n                                        <SettingsModal\r\n                                            handleFormProblemDialogOpen = {handleFormProblemDialogOpen}                            \r\n                                        >\r\n                                            <SettingsIcon/>\r\n                                        </SettingsModal>\r\n                                    </>\r\n                                    : <>\r\n                                        {\r\n                                            props.isSub \r\n                                                ? <Button variant=\"outlined\" onClick = {() => props.deleteSubscriptions(props.user.username)}>Отписаться</Button>\r\n                                                : <Button variant=\"contained\" onClick = {() => props.addSubscription(props.user.username)}>Подписаться</Button>\r\n                                        }\r\n                                    </>\r\n                            }\r\n                        </Box>\r\n                        <Box sx = {{marginBottom: '10px', display: 'flex', alignItems: 'center'}}>\r\n                            <Typography sx = {typographyStyle}><b>{props.totalPostsCount}</b> публикаций</Typography>\r\n                            <UserListModal\r\n                                userList = {props.subscribers}\r\n                                customStyle = {typographyButtonStyle}\r\n                                titleText = {'Подписчиков'}\r\n                                buttonText = {'Удалить'}\r\n                                deleteUser = {props.deleteSubscribers}\r\n                                userMatch = {props.userMatch}\r\n                                >\r\n                                <b>{props.subscribers.length}</b> подписчиков\r\n                            </UserListModal>\r\n                            <UserListModal\r\n                                userList = {props.subscriptions}\r\n                                customStyle = {typographyButtonStyle}\r\n                                userMatch = {props.userMatch}\r\n                                deleteUser = {props.deleteSubscriptions}\r\n                                buttonText = {'Отписаться'}\r\n                                titleText = {'Подписок'}\r\n                            >\r\n                                <b>{props.subscriptions.length}</b> подписок\r\n                            </UserListModal>\r\n                        </Box>\r\n                        <Box sx = {{marginBottom: '10px'}}>\r\n                            <Typography sx = {typographyStyle}><b>{props.user.name}</b></Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n                <Box sx={{ width: '100%', marginTop: '20px'}}>\r\n                    <Box \r\n                        sx = {{ \r\n                            width: '100%', \r\n                            marginTop: '20px'\r\n                        }}\r\n                    >\r\n                        <Box \r\n                            sx = {{ \r\n                                borderBottom: 1, \r\n                                borderColor: 'divider' \r\n                            }}\r\n                        >\r\n                            <Tabs \r\n                                value={`/${username}/${tag}`} \r\n                                aria-label=\"basic tabs example\" \r\n                                centered\r\n                            >\r\n                                <Tab \r\n                                    label = {\r\n                                        <Grid \r\n                                            alignItems=\"center\" \r\n                                            container \r\n                                            direction=\"row\"\r\n                                        >\r\n                                            <AppsIcon/>\r\n                                            ПУБЛИКАЦИИ\r\n                                        </Grid>\r\n                                    } \r\n                                    value = { `/${username}/publications` } \r\n                                    component={Link} \r\n                                    to={allTabs[0]} \r\n                                />\r\n                                <Tab \r\n                                    label = {\r\n                                        <Grid \r\n                                            alignItems=\"center\" \r\n                                            container \r\n                                            direction=\"row\"\r\n                                        >\r\n                                            <BookmarkBorderIcon/>\r\n                                            СОХРАНЕННОЕ\r\n                                        </Grid>\r\n                                    } \r\n                                    value={`/${username}/saved`} \r\n                                    component={Link} \r\n                                    to={allTabs[1]}/>\r\n                            </Tabs>\r\n                        </Box>\r\n                        <Switch>\r\n                            <Route \r\n                                path={allTabs[0]} \r\n                                render={() => (\r\n                                    <Posts\r\n                                        lastElement = {lastElement}\r\n                                        posts = {props.posts}\r\n                                        addComment = {props.addComment} \r\n                                        setLike = {props.setLike}\r\n                                        setSave = {props.setSave}\r\n                                        savedPost = {props.savedPost}\r\n                                        deletePost = {props.deletePost}\r\n                                        customStyle = {{\r\n                                            width: '100px'\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            />\r\n                            <Route \r\n                                path={allTabs[1]} \r\n                                render={() => {\r\n                                    return (\r\n                                        <Posts\r\n                                            lastElement = {lastElement}\r\n                                            posts = {props.savedPosts}\r\n                                            addComment = {props.addComment} \r\n                                            setLike = {props.setLike}\r\n                                            savedPost = {props.savedPost}\r\n                                            deletePost = {props.deletePost}\r\n                                            customStyle = {{\r\n                                                visibility: 'hidden',\r\n                                                width: '100px'\r\n                                            }}\r\n                                        />\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </Switch>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <DialogForm\r\n                handleFormProblemDialogClose = {handleFormProblemDialogClose}\r\n                handleFormProblemDialogOpen = {handleFormProblemDialogOpen}\r\n                openModal = {openModal}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n","import { api } from '../api/api';\r\nimport { setError } from './auth-reducer';\r\n\r\nconst GET_USER = 'profile-reducer/GET_USER';\r\nconst GET_ALBUM = 'profile-reducer/GET_ALBUM';\r\nconst ITERATION_PAGE = 'profile-reducer/ITERATION_PAGE';\r\nconst SET_PAGE = 'profile-reducer/SET_PAGE';\r\nconst IS_PAGE_LOADING = 'profile-reducer/IS_PAGE_LOADING';\r\nconst TOTAL_POSTS_COUNT = 'profile-reducer/TOTAL_POSTS_COUNT';\r\nconst SET_LIKE = 'profile-reducer/SET_LIKE';\r\nconst ADD_COMMENT = 'profile-reducer/ADD_COMMENT';\r\nconst IS_USER_LOADING = 'profile-reducer/IS_USER_LOADING';\r\nconst SET_SAVE = 'profile-reducer/SET_SAVE';\r\n\r\nlet initialState = {\r\n    user : {\r\n        \"id\": null,\r\n        \"name\": \"\",\r\n        \"username\": \"\",\r\n        \"email\": \"\",\r\n        \"address\": {},\r\n        \"phone\": \"\",\r\n        \"website\": \"\",\r\n        \"company\": {}\r\n    },\r\n    album: [],\r\n    totalPageCount: 10,\r\n    currentPage: 1,\r\n    isPageLoading: false,\r\n    isUserLoading: false,\r\n    totalPostsCount: 0,\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n                album: []\r\n            }\r\n        case GET_ALBUM:\r\n            return {\r\n                ...state,\r\n                album: [...state.album, ...action.album]\r\n            }\r\n        case ITERATION_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: ++state.currentPage\r\n            }\r\n        case SET_PAGE:\r\n            \r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case IS_PAGE_LOADING:\r\n            return {\r\n                ...state,\r\n                isPageLoading: action.isPageLoading\r\n            }\r\n        case IS_USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isUserLoading: action.isUserLoading\r\n            }\r\n        case TOTAL_POSTS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalPostsCount: action.totalPostsCount\r\n            }\r\n        case SET_LIKE:\r\n            \r\n            return {\r\n                ...state,\r\n                album: state.album.map((item) => {\r\n                    if (item.postId === action.postId) {\r\n                        item.like = !item.like;\r\n                        if (item.like) {\r\n                            item.likeCount++;\r\n                            return item;\r\n                        }\r\n                        item.likeCount--;\r\n                        return item;\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                album: state.album.map((item) => {\r\n                    if (item.postId === action.postId) {\r\n                        item.comments = [...item.comments, {'body': action.comment}]\r\n                        \r\n                        return item;\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        case SET_SAVE:\r\n            return {\r\n                ...state,\r\n                posts: state.album.map((item) => {\r\n                    if (item.postId === action.postId) {\r\n                        item.savedPost = !item.savedPost;\r\n                        return item;\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getUser = (user) => {\r\n    return {\r\n        type: 'profile-reducer/GET_USER',\r\n        user\r\n    }\r\n}\r\n\r\nconst getAlbum = (album) => {\r\n    return {\r\n        type: 'profile-reducer/GET_ALBUM',\r\n        album\r\n    }\r\n}\r\n\r\nconst iteratoinPage = () => {\r\n    return {\r\n        type: 'profile-reducer/ITERATION_PAGE',\r\n    }\r\n}\r\n\r\nexport const setPage = (page) => {\r\n    return {\r\n        type: 'profile-reducer/SET_PAGE',\r\n        page\r\n    }\r\n}\r\n\r\nconst isPageLoading = (isPageLoading) => {\r\n    return {\r\n        type: 'profile-reducer/IS_PAGE_LOADING',\r\n        isPageLoading\r\n    }\r\n}\r\nconst isUserLoading = (isUserLoading) => {\r\n    return {\r\n        type: 'profile-reducer/IS_USER_LOADING',\r\n        isUserLoading\r\n    }\r\n}\r\n\r\nconst totalPostsCount = (totalPostsCount) => {\r\n    return {\r\n        type: 'profile-reducer/TOTAL_POSTS_COUNT',\r\n        totalPostsCount\r\n    }\r\n}\r\n\r\nexport const setLike = (postId) => {\r\n    return {\r\n        type: 'profile-reducer/SET_LIKE',\r\n        postId,\r\n    }\r\n}\r\n\r\nexport const setSave = (postId) => {\r\n    return {\r\n        type: 'profile-reducer/SET_SAVE',\r\n        postId,\r\n    }\r\n}\r\n\r\nexport const addComment = (comment, postId) => {\r\n    return {\r\n        type: 'profile-reducer/ADD_COMMENT',\r\n        comment,\r\n        postId,\r\n    }\r\n}\r\n\r\nexport const getAlbumThink = (username, page) => {\r\n    return async (dispatch) => {\r\n        dispatch(setError(false))\r\n        try {\r\n            dispatch(isPageLoading(true))\r\n            \r\n            const responseUser = await api.getUser(username);\r\n            const responseUserAlbum = await api.getUserAlbum(responseUser.data[0].id, page);\r\n            \r\n            if (responseUserAlbum.data.length !== 0) {\r\n                let userAlbumAndComment = responseUserAlbum.data.map((item) => {\r\n                    item.comments = [\r\n                        {\"body\": \"harum non quasi et ratione\\ntempore iure ex voluptates in ratione\\nharum architecto fugit inventore cupiditate\\nvoluptates magni quo et\", id: '1'},\r\n                        {\"body\": \"doloribus at sed quis culpa deserunt consectetur qui praesentium\\naccusamus fugiat dicta\\nvoluptatem rerum ut voluptate autem\\nvoluptatem repellendus aspernatur dolorem in\", id: '2'}\r\n                    ];\r\n                    item.like = false;\r\n                    item.likeCount = 0;\r\n                    item.postId = item.id\r\n                    item.username = username;\r\n                    item.username = username;\r\n                    item.savedPost = false;\r\n                    return item\r\n                })\r\n                dispatch(getAlbum(userAlbumAndComment));\r\n                dispatch(iteratoinPage());\r\n                dispatch(totalPostsCount(responseUserAlbum.headers[\"x-total-count\"]))\r\n                dispatch(isPageLoading(false))\r\n            }\r\n        } catch (error) {\r\n            dispatch(setError(true))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserThink = (username, currentPage) => {\r\n    return async (dispatch) => {\r\n        dispatch(isUserLoading(true))\r\n        try {\r\n            dispatch(setError(false))\r\n            const responseUser = await api.getUser(username);\r\n            \r\n            if (responseUser.data.length !== 0) {\r\n                dispatch(setPage(1));\r\n                dispatch(getUser(responseUser.data[0]));\r\n                dispatch(getAlbumThink(username, currentPage));\r\n            }\r\n            \r\n        } catch (error) {\r\n            dispatch(setError(true))\r\n        }\r\n        dispatch(isUserLoading(false));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import { Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst ErrorPage = () => {\r\n    return <Box sx = {{width: '100%', marginTop: '2%'}}>\r\n        <Typography variant=\"h5\" align = 'center'><b>К сожалению, эта страница недоступна.</b></Typography>\r\n        <Typography sx = {{marginTop: '2%'}} align = 'center'>\r\n            Возможно, вы воспользовались недействительной ссылкой или страница была удалена. \r\n            <NavLink style={{textDecoration: 'none', color: 'blue'}} to = '/'>\r\n                Вернуться на главную страницу\r\n            </NavLink>\r\n        </Typography>\r\n    </Box>\r\n}\r\n\r\nexport default ErrorPage","import React, { useContext, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { useParams } from 'react-router-dom';\r\nimport Profile from './Profile';\r\nimport {getUserThink, setLike, addComment, setPage, setSave} from '../redux/profile-reducer'\r\nimport {withRouter} from 'react-router-dom';\r\nimport { getAlbumThink } from '../redux/profile-reducer';\r\nimport { addSubscription, AllUserThink, deletePost, deleteSubscribers, deleteSubscriptions, savedPost } from '../redux/auth-reducer';\r\nimport LoaderPage from '../common/LoaderPage';\r\nimport ErrorPage from './ErrorPage';\r\nimport NoInternetError from '../common/NoInternetError';\r\nimport { AuthContext } from '../context/authContext';\r\n\r\nconst checkSub = (arr, username) => {\r\n    const index = arr.findIndex((item) => {\r\n        if(item.username === username) return true;\r\n        return false\r\n    })\r\n    if (index >= 0) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nconst ProfileAPIContainer = (props) => {\r\n    const {username} = useParams();\r\n    \r\n    useEffect(() => {\r\n        if (!props.isUserLoading) {\r\n            props.getUserThink(username, 1);\r\n        }\r\n    }, [username])\r\n\r\n    useEffect(() => {\r\n        document.title = username\r\n    }, [username])\r\n    \r\n    const authContext = useContext(AuthContext)\r\n\r\n    const isSub = checkSub(props.subscriptions, username);\r\n\r\n    const userMatch = username === props.authUsername;\r\n    \r\n    if (props.error) return <NoInternetError/>\r\n    \r\n    if (props.isUserLoading) return <LoaderPage/>\r\n    \r\n    if (!(props.user.username === username) && authContext.isAuth) return <ErrorPage/>\r\n\r\n\r\n    return (\r\n        <Profile\r\n            posts = {props.posts}\r\n            user = {props.user}\r\n            tag = {props.match.params.tag}\r\n            userMatch = {userMatch}\r\n            totalPostsCount = {props.totalPostsCount}\r\n            setLike = {props.setLike}\r\n            setSave = {props.setSave}\r\n            addComment = {props.addComment}\r\n            subscribers = {props.subscribers}\r\n            subscriptions = {props.subscriptions}\r\n            deleteSubscriptions = {props.deleteSubscriptions}\r\n            deleteSubscribers = {props.deleteSubscribers}\r\n            addSubscription = {props.addSubscription}\r\n            savedPost = {props.savedPost}\r\n            deletePost = {props.deletePost}\r\n            savedPosts = {props.savedPosts}\r\n            isPageLoading = {props.isPageLoading}\r\n            getAlbumThink = {props.getAlbumThink}\r\n            totalPageCount = {props.totalPageCount}\r\n            currentPage = {props.currentPage}\r\n            isSub = {isSub}\r\n            isUserLoading = {props.isUserLoading}\r\n        />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.album,\r\n        user: state.profilePage.user,\r\n        currentPage: state.profilePage.currentPage,\r\n        isPageLoading: state.profilePage.isPageLoading,\r\n        totalPageCount: state.profilePage.totalPageCount,\r\n        totalPostsCount: state.profilePage.totalPostsCount,\r\n        subscribers: state.authReducer.subscribers,\r\n        subscriptions: state.authReducer.subscriptions,\r\n        authUsername: state.authReducer.user.username,\r\n        isAuth: state.authReducer.isAuth,\r\n        savedPosts: state.authReducer.savedPosts,\r\n        isUserLoading: state.profilePage.isUserLoading,\r\n        error: state.authReducer.error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLike: (postId) => {\r\n            dispatch(setLike(postId))\r\n        },\r\n        setSave: (postId) => {\r\n            dispatch(setSave(postId))\r\n        },\r\n        addComment: (comment, postId) => {\r\n            dispatch(addComment(comment, postId))\r\n        },\r\n        deleteSubscribers: (username) => {\r\n            dispatch(deleteSubscribers(username))\r\n        },\r\n        deleteSubscriptions: (username) => {\r\n            dispatch(deleteSubscriptions(username))\r\n        },\r\n        AllUserThink: () => {\r\n            dispatch(AllUserThink())\r\n        },\r\n        addSubscription: (username) => {\r\n            dispatch(addSubscription(username))\r\n        },\r\n        savedPost: (post) => {\r\n            dispatch(savedPost(post))\r\n        },\r\n        deletePost: (id) => {\r\n            dispatch(deletePost(id))\r\n        },\r\n        setPage: (page) => {\r\n            dispatch(setPage(page))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(null, {getUserThink, getAlbumThink}),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(ProfileAPIContainer)","import { Avatar, Button, TextField, Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport useForm from \"../customHooks/useFrom\"\r\n\r\nconst containerStyle = {\r\n    display: {xs: 'block', sm: 'block', md: 'flex'}, \r\n    alignItems: 'start',\r\n    width: '100%',\r\n    margin: '10px 0 0 0',\r\n}\r\n\r\nconst typographyStyle = {\r\n    width: '170px', \r\n    margin: '0 10px 0 30px', \r\n    textAlign: 'end'\r\n}\r\n\r\nconst feldStyle = {\r\n    margin: '0 50px 0 10px',\r\n    padding: {xs: '0 50px 0 10px', sm: '0 50px 0 10px', md: '0'}, \r\n    width: '100%',\r\n}\r\n\r\nconst ChangePassword = () => {\r\n    const initialValues = {\r\n        oldPassword: '',\r\n        newPasswordFirst: '',\r\n        newPasswordSecond: '',\r\n    }\r\n\r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(initialValues);\r\n\r\n    const handleSubmit = () => {\r\n        console.log(values);\r\n    }\r\n\r\n    return(\r\n        <Box sx = {{width: '100%'}}>\r\n            <Box \r\n                sx = {{\r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    width: '100%',\r\n                    margin: '10px 0 30px 0',\r\n                }}>\r\n                <Box sx = {{width: '170px', margin: '0 10px 0 30px', display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <Avatar \r\n                        alt=\"Remy Sharp\"\r\n                        src=\"/static/images/avatar/1.jpg\"\r\n                        sx={{ width: 50, height: 50 }}\r\n                    />\r\n                </Box>\r\n                <Typography variant = 'h6' sx = {feldStyle}>Bred</Typography>\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Старый пароль:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"oldPassword\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = 'oldPassword'\r\n                    onChange={handleInputChange}\r\n                    value = {values.oldPassword}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Новый пароль:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"newPasswordFirst\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = 'newPasswordFirst'\r\n                    onChange={handleInputChange}\r\n                    value = {values.newPasswordFirst}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Подтвердите новый пароль:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"newPasswordSecond\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = 'newPasswordSecond'\r\n                    onChange={handleInputChange}\r\n                    value = {values.newPasswordSecond}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Box sx = {{width: '170px', margin: '0 10px 0 30px'}}>\r\n                    \r\n                </Box>\r\n                <Box sx = {feldStyle}>\r\n                    <Button onClick={handleSubmit} variant=\"contained\">Сменить пароль</Button>\r\n                </Box>\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Box sx = {{width: '170px', margin: '0 10px 0 30px'}}>\r\n                    \r\n                </Box>\r\n                <Box sx = {feldStyle}>\r\n                    <Button>Забыли пароль?</Button>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","import { Button, FormControlLabel, Radio, RadioGroup, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport useForm from \"../customHooks/useFrom\";\r\n\r\nconst NotificationSettings = ({notificationSettings, changeSettings}) => {\r\n\r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(notificationSettings);\r\n\r\n    const handleSubmit = () => {\r\n        changeSettings(values, 'notificationSettings')\r\n    }\r\n\r\n    return (\r\n        <Box sx = {{width: '100%', height: '100%', padding: '30px 40px'}}>\r\n            <Box sx = {{width: '100%', height: '100%'}}>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Отметки \"Нравится\"</Typography>\r\n                <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    value={values.like}\r\n                    name=\"like\"\r\n                    onChange={handleInputChange}\r\n                    >\r\n                    <FormControlLabel value=\"1\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"Выкл.\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От людей, на которых вы подписаны\" />\r\n                    <FormControlLabel value=\"3\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От всех\" />\r\n                </RadioGroup>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>johnappleseed нравится ваше фото.</Typography>\r\n                <hr/>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Комментарии</Typography>\r\n                <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    value={values.comments}\r\n                    name=\"comments\"\r\n                    onChange={handleInputChange}\r\n                    >\r\n                    <FormControlLabel value=\"1\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"Выкл.\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От людей, на которых вы подписаны\" />\r\n                    <FormControlLabel value=\"3\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От всех\" />\r\n                </RadioGroup>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>johnappleseed прокомментировал(-а): \"Хороший снимок!\"</Typography>\r\n                <hr/>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Принятые запросы на подписку</Typography>\r\n                <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    value={values.subscriptionRequest}\r\n                    name=\"subscriptionRequest\"\r\n                    onChange={handleInputChange}\r\n                    >\r\n                    <FormControlLabel value=\"1\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"Выкл.\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От всех\" />\r\n                </RadioGroup>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>John Appleseed (johnappleseed) принял(-а) ваш запрос на подписку.</Typography>\r\n                <hr/>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Напоминания</Typography>\r\n                <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    value={values.reminders}\r\n                    name=\"reminders\"\r\n                    onChange={handleInputChange}\r\n                    >\r\n                    <FormControlLabel value=\"1\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"Выкл.\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От всех\" />\r\n                </RadioGroup>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>У вас есть непросмотренные уведомления и другие похожие уведомления.</Typography>\r\n                <hr/>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Первые публикации</Typography>\r\n                <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    value={values.firstPublications}\r\n                    name=\"firstPublications\"\r\n                    onChange={handleInputChange}\r\n                    >\r\n                    <FormControlLabel value=\"1\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"Выкл.\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От людей, на которых вы подписаны\" />\r\n                    <FormControlLabel value=\"3\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От всех\" />\r\n                </RadioGroup>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>Вы увидите первый пост johnappleseed в Instagram, а также другие похожие уведомления.</Typography>\r\n                <hr/>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Запросы поддержки</Typography>\r\n                <RadioGroup\r\n                    value={values.supportRequests}\r\n                    name=\"supportRequests\"\r\n                    onChange={handleInputChange}\r\n                    >\r\n                    <FormControlLabel value=\"1\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"Выкл.\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От всех\" />\r\n                </RadioGroup>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>Ваш запрос на поддержку (дата: июля 10) только что был обновлен.</Typography>\r\n                \r\n                <Box \r\n                    sx = {{\r\n                        margin: '20px 0', \r\n                        width: '100%', \r\n                        display: {xs: 'block', sm: 'block', md: 'flex'}, \r\n                        justifyContent: 'left',\r\n                    }}\r\n                >\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\" \r\n                        sx = {{\r\n                            display: 'block',\r\n                            margin: {xs: '20px', sm: '20px', md: '0'}\r\n                        }}\r\n                    >\r\n                        отправить\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default NotificationSettings","import { Avatar, Box, Button, Checkbox, FormControlLabel, TextField, Typography } from \"@mui/material\";\r\nimport useForm from \"../customHooks/useFrom\";\r\n\r\nconst containerStyle = {\r\n    display: {xs: 'block', sm: 'block', md: 'flex'}, \r\n    alignItems: 'start',\r\n    width: '100%',\r\n    margin: '10px 0 0 0',\r\n}\r\n\r\nconst typographyStyle = {\r\n    width: '170px', \r\n    margin: '0 10px 0 30px', \r\n    textAlign: 'end'\r\n}\r\n\r\nconst feldStyle = {\r\n    margin: '0 50px 0 10px',\r\n    padding: {xs: '0 50px 0 10px', sm: '0 50px 0 10px', md: '0'}, \r\n    width: '100%',\r\n}\r\n\r\nconst EditProfile = ({editProfile, changeSettings}) => {\r\n\r\n    const {\r\n        values,\r\n        handleInputChange,\r\n        handleCheckboxChange,\r\n    } = useForm(editProfile);\r\n\r\n    const handleSubmit = () => {\r\n        changeSettings(values, 'editProfile')\r\n    }\r\n\r\n    return (\r\n        <Box  sx = {{width: '100%'}}>\r\n            <Box \r\n                sx = {{\r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    width: '100%',\r\n                    margin: '10px 0 30px 0',\r\n                }}>\r\n                <Box sx = {{width: '170px', margin: '0 10px 0 30px', display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <Avatar \r\n                        alt=\"Remy Sharp\"\r\n                        src=\"/static/images/avatar/1.jpg\"\r\n                        sx={{ width: 50, height: 50 }}\r\n                    />\r\n                </Box>\r\n                <Typography variant = 'h6' sx = {feldStyle}>Bred</Typography>\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Имя:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"editName\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editName\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editName}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Имя пользователя:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"editUsername\"  \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editUsername\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editUsername}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Веб-сайт:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"editWebsite\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editWebsite\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editWebsite}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>О себе:</b></Typography>\r\n                <TextField  \r\n                    multiline \r\n                    maxRows={4} \r\n                    id=\"editAboutSelf\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editAboutSelf\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editAboutSelf}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}></Typography>\r\n                <Typography variant = 'h6' sx = {{margin: '10px 50px 10px 10px', width: '100%',}}>Личная информация</Typography>\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Эл. адрес:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"editEmail\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editEmail\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editEmail}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Номер телефона:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"editPhoneNumber\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editPhoneNumber\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editPhoneNumber}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Пол:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"editGender\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editGender\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editGender}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Рекомендации похожих аккаунтов:</b></Typography>\r\n                <FormControlLabel \r\n                    id = 'recommendationSimilarAccounts'\r\n                    control={<Checkbox \r\n                        name = 'recommendationSimilarAccounts'\r\n                        onChange = {handleCheckboxChange}\r\n                        checked = {values.recommendationSimilarAccounts}\r\n                    />} \r\n                    label=\"Рекомендовать ваш аккаунт возможным подписчикам.\" \r\n                    sx = {feldStyle} \r\n                    />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Box sx = {{width: '170px', margin: '0 10px 0 30px'}}>\r\n                    \r\n                </Box>\r\n                <Box \r\n                    sx = {{\r\n                        margin: '0 50px 0 10px', \r\n                        width: '100%', \r\n                        display: {xs: 'block', sm: 'block', md: 'flex'}, \r\n                        justifyContent: 'space-between',\r\n                    }}\r\n                >\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\" \r\n                        sx = {{\r\n                            display: 'block',\r\n                            margin: {xs: '20px', sm: '20px', md: '0'}\r\n                        }}\r\n                    >\r\n                        отправить\r\n                    </Button>\r\n                    <Button sx = {{\r\n                            display: 'block',\r\n                            margin: {xs: '20px', sm: '20px', md: '0'}\r\n                        }}\r\n                    >\r\n                        Временно отключить мой аккаунт\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default EditProfile","import { Box, Button, Checkbox, FormControlLabel, Typography } from \"@mui/material\";\r\nimport useForm from \"../customHooks/useFrom\";\r\n\r\nconst SecuritySettings = ({securitySettings, changeSettings}) => {\r\n\r\n    const {\r\n        values,\r\n        handleCheckboxChange,\r\n    } = useForm(securitySettings);\r\n\r\n    const handleSubmit = () => {\r\n        changeSettings(values, 'securitySettings')\r\n    }    \r\n\r\n    return (\r\n        <Box sx = {{width: '100%', height: '100%', padding: '30px 40px'}}>\r\n            <Box sx = {{width: '100%', height: '100%'}}>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Конфиденциальность аккаунта</Typography>\r\n                <FormControlLabel \r\n                    id = 'accountPrivacy'\r\n                    control={<Checkbox \r\n                        name = 'accountPrivacy'\r\n                        onChange = {handleCheckboxChange}\r\n                        checked = {values.accountPrivacy}\r\n                    />} \r\n                    label=\"Закрытый аккаунт\"/>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>Если у вас закрытый аккаунт, ваши фото и видео в Instagram смогут видеть только люди, которых вы одобрите. Это не относится к уже существующим подписчикам.</Typography>\r\n                <hr/>\r\n                <Typography sx = {{margin: '20px 0'}} variant=\"h6\">Сетевой статус</Typography>\r\n                <FormControlLabel  \r\n                    id = 'onlineStatus'\r\n                    control={<Checkbox \r\n                        name = 'onlineStatus'\r\n                        onChange = {handleCheckboxChange}\r\n                        checked = {values.onlineStatus}\r\n                    />} \r\n                    label=\"Показывать сетевой статус\"/>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>Разрешить владельцам аккаунтов, на которые вы подписаны, и всем, кому вы отправляете сообщения, видеть, когда вы заходили в приложения Instagram в последний раз. Отключив эту настройку, вы не сможете видеть сетевой статус других аккаунтов.</Typography>\r\n                <Box \r\n                    sx = {{\r\n                        margin: '20px 0', \r\n                        width: '100%', \r\n                        display: {xs: 'block', sm: 'block', md: 'flex'}, \r\n                        justifyContent: 'left',\r\n                    }}\r\n                >\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\" \r\n                        sx = {{\r\n                            display: 'block',\r\n                            margin: {xs: '20px', sm: '20px', md: '0'}\r\n                        }}\r\n                    >\r\n                        отправить\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SecuritySettings","import React from \"react\";\r\nimport { Switch, Route, Link, withRouter} from \"react-router-dom\";\r\nimport { Card, Tab, Tabs } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NotificationSettings from './NotificationSettings'\r\nimport EditProfile from \"./EditProfile\";\r\nimport SecuritySettings from \"./SecuritySettings\";\r\n\r\nconst Settings = ({settingsPage, changeSettings}) => {\r\n    const allTabs = ['/accounts/edit', '/accounts/changepassword', '/accounts/privacy_and_security', '/accounts/emails'];\r\n    const {settings} = useParams()\r\n    return (\r\n        <Box key = {settings} sx = {{maxWidth: '1000px', width: '100%'}}>\r\n                <Box sx = {{width: '100%'}}>\r\n                    <Card sx={{ flexGrow: 1, bgcolor: 'background.paper', display: 'flex', minHeight: '700px', margin: '10px'}}>\r\n                        <Tabs \r\n                            orientation=\"vertical\"\r\n                            aria-label=\"Vertical tabs example\"\r\n                            sx={{ borderRight: 1, borderColor: 'divider', width: '250px' }}\r\n                            value={`/accounts/${settings}`}\r\n                        >\r\n                            <Tab \r\n                                label=\"Редактировать профиль\" \r\n                                value=\"/accounts/edit\" \r\n                                component={Link} \r\n                                to={allTabs[0]} \r\n                            />\r\n                            <Tab \r\n                                label=\"Сменить пароль\" \r\n                                value=\"/accounts/changepassword\" \r\n                                component={Link} \r\n                                to={allTabs[1]} \r\n                            />\r\n                            <Tab \r\n                                label=\"Конфиденциальность и безопасность\" \r\n                                value=\"/accounts/privacy_and_security\" \r\n                                component={Link} \r\n                                to={allTabs[2]} \r\n                            />\r\n                            <Tab \r\n                                label=\"Уведомления\" \r\n                                value=\"/accounts/emails\" \r\n                                component={Link} \r\n                                to={allTabs[3]} \r\n                            />\r\n                        </Tabs>\r\n                        <Switch>\r\n                            <Route path={allTabs[0]} render={() => {\r\n                                return (\r\n                                    <EditProfile \r\n                                        editProfile = {settingsPage.editProfile}\r\n                                        changeSettings = {changeSettings}\r\n                                    />\r\n                                )\r\n                            }} />\r\n                            <Route path={allTabs[1]} render={() => {\r\n                                return (\r\n                                    <ChangePassword/>\r\n                                )\r\n                            }} />\r\n                            <Route path={allTabs[2]} render={() => {\r\n                                return (\r\n                                    <SecuritySettings \r\n                                        securitySettings = {settingsPage.securitySettings}\r\n                                        changeSettings = {changeSettings}\r\n                                    />\r\n                                )\r\n                            }} />\r\n                            <Route path={allTabs[3]} render={() => {\r\n                                return (\r\n                                    <NotificationSettings \r\n                                        notificationSettings = {settingsPage.notificationSettings}\r\n                                        changeSettings = {changeSettings}\r\n                                    />\r\n                                )\r\n                            }} />\r\n                        </Switch>\r\n                    </Card>\r\n                </Box>\r\n        </Box>\r\n        \r\n    );\r\n}\r\n\r\nexport default withRouter(Settings)","const CHANGE_SETTINGS = 'settings-reducer/CHANGE_SETTINGS';\r\n\r\nlet initialState = {\r\n    notificationSettings: {\r\n        like: '2',\r\n        comments: '2',\r\n        subscriptionRequest: '1',\r\n        reminders: '1',\r\n        firstPublications: '1',\r\n        supportRequests: '1',\r\n    },\r\n    editProfile: {\r\n        editName: '',\r\n        editUsername: '',\r\n        editWebsite: '',\r\n        editAboutSelf: '',\r\n        editEmail: '',\r\n        editPhoneNumber: '',\r\n        editGender: '',\r\n        recommendationSimilarAccounts: false\r\n    },\r\n    securitySettings: {\r\n        accountPrivacy: false,\r\n        onlineStatus: false,\r\n    }\r\n}\r\n\r\nconst settingsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_SETTINGS: \r\n            return {\r\n                ...state,\r\n                [action.settingsName]: action.settings\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const changeSettings = (settings, settingsName) => {\r\n    return {\r\n        type: 'settings-reducer/CHANGE_SETTINGS',\r\n        settings,\r\n        settingsName,\r\n    }\r\n}\r\n\r\nexport default settingsReducer;","import { connect } from 'react-redux'\r\nimport Settings from './Settings'\r\nimport React, { useEffect } from 'react';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { changeSettings } from '../redux/settings-reducer';\r\nimport NoInternetError from '../common/NoInternetError';\r\n\r\nconst SettingAPIContainer = (props) => {\r\n    useEffect(() => {\r\n        document.title = 'Редактрование профиля'\r\n    }, [])\r\n\r\n    if (props.error) return <NoInternetError/>\r\n\r\n    return (\r\n        <Settings\r\n            settingsPage = {props.settingsPage}\r\n            changeSettings = {props.changeSettings}\r\n        />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        settingsPage: state.settingsPage,\r\n        error: state.authReducer.error,\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeSettings (settings, settingsName) {\r\n            dispatch(changeSettings(settings, settingsName))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(SettingAPIContainer);","import { Box, Button, TextField, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport NoInternetError from '../common/NoInternetError';\r\nimport { loginThunk } from '../redux/auth-reducer';\r\n\r\nconst Login = (props) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.loginThunk(value)\r\n        setValue('')\r\n\r\n    }\r\n    \r\n    if (props.error) return <NoInternetError/>\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to = '/'/>\r\n    }\r\n    return (\r\n        <form>\r\n            <Box \r\n                sx = {{\r\n                    border: '1px solid lightgray', \r\n                    borderRadius: '10px', \r\n                    marginTop: '100px', \r\n                    display: 'flex', \r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    width: '300px',\r\n                    }}>\r\n                <Typography variant = 'h5' sx = {{margin: '10px'}}>\r\n                    Авторизация\r\n                </Typography>\r\n                <TextField \r\n                    id=\"outlined-basic\" \r\n                    value = {value} \r\n                    onChange = {handleInputChange}\r\n                    label=\"Пароль\" \r\n                    variant=\"outlined\" />\r\n                <Button \r\n                    sx = {{margin: '20px 0px 20px 0px'}}\r\n                    onClick = {handleSubmit} \r\n                    variant=\"contained\"\r\n                >\r\n                    Войти\r\n                </Button>\r\n            </Box>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n        error: state.authReducer.error\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapDispatchToProps, {loginThunk})\r\n)(Login) ","import React from \"react\"\r\nimport { withRouter } from \"react-router\"\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n    }\r\n    \r\n    export default withRouter(ScrollToTop)","import { api } from \"../api/api\";\r\nimport { setError } from \"./auth-reducer\";\r\n\r\nconst GET_POST = 'postPage-reducer/GET_POST';\r\nconst SET_LIKE = 'postPage-reducer/SET_LIKE';\r\nconst ADD_COMMENT = 'postPage-reducer/ADD_COMMENT';\r\nconst DELETE_LIKE = 'postPage-reducer/DELETE_LIKE';\r\nconst SET_POST_IS_LOADING = 'postPage-reducer/SET_POST_IS_LOADING';\r\n\r\nconst initialState = {\r\n    comments: [],\r\n    postIsLoading: true,\r\n}\r\n\r\nconst postPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                ...action.post\r\n            }\r\n        case SET_LIKE:\r\n            return {\r\n                ...state,\r\n                liked: true,\r\n                likeCount: ++state.likeCount,\r\n            }\r\n        case DELETE_LIKE:\r\n            return {\r\n                ...state,\r\n                liked: false,\r\n                likeCount: --state.likeCount,\r\n            }\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                comments: [...state.comments, {body: action.comment}],\r\n            }\r\n        case SET_POST_IS_LOADING: \r\n            return {\r\n                ...state,\r\n                postIsLoading: action.postIsLoading\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst getPost = (post) => {\r\n    return {\r\n        type: 'postPage-reducer/GET_POST',\r\n        post\r\n    }\r\n}\r\n\r\nconst postIsLoading = (postIsLoading) => {\r\n    return {\r\n        type: 'postPage-reducer/SET_POST_IS_LOADING',\r\n        postIsLoading\r\n    }\r\n}\r\n\r\nexport const setLike = () => {\r\n    return {\r\n        type: 'postPage-reducer/SET_LIKE',\r\n    }\r\n}\r\n\r\nexport const deleteLike = () => {\r\n    return {\r\n        type: 'postPage-reducer/DELETE_LIKE',\r\n    }\r\n}\r\n\r\nexport const addComment = (comment) => {\r\n    return {\r\n        type: 'postPage-reducer/ADD_COMMENT',\r\n        comment,\r\n    }\r\n}\r\n\r\nexport const getPostThunk = (postId) => {\r\n    return async (dispatch) => {\r\n        dispatch(postIsLoading(true))\r\n        dispatch(setError(false))\r\n        try {\r\n            const postResponse = await api.getPhoto(postId);\r\n            const userResponce = await api.getUserById(postResponse.data[0].albumId);\r\n            const commentsResponce = await api.getComments(1);\r\n\r\n            const canCraetePost = postResponse.data.lenght !== 0 && userResponce.data.lenght !== 0 && commentsResponce.data.lenght !== 0;\r\n            \r\n            if (canCraetePost) {\r\n                dispatch(getPost({\r\n                        username: userResponce.data[0].username,\r\n                        id: postResponse.data[0].id,\r\n                        url: postResponse.data[0].url,\r\n                        title: postResponse.data[0].title,\r\n                        comments: [...commentsResponce.data],\r\n                        liked: false,\r\n                        likeCount: 0,\r\n                        savedPost: false,\r\n                    }\r\n                ))\r\n            }\r\n            dispatch(postIsLoading(false))\r\n        } catch (error) {\r\n            dispatch(setError(true))\r\n        }\r\n    }\r\n}\r\n\r\nexport default postPageReducer;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Card, CardContent, CardHeader, CardMedia, Divider, Grid, IconButton, TextField } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport useForm from '../customHooks/useFrom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { deletePost, savedPost } from '../redux/auth-reducer';\r\nimport { addComment, deleteLike, getPostThunk, setLike } from '../redux/postPage-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport LoaderPage from '../common/LoaderPage'\r\nimport NoInternetError from '../common/NoInternetError';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    height: 700,\r\n    bgcolor: 'background.paper',\r\n    p: 4,\r\n    padding: 0,\r\n};\r\n\r\nconst styleCard = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    height: 700,\r\n    bgcolor: 'background.paper',\r\n    p: 4,\r\n    padding: 0,\r\n    border: '1px solid lightgray',\r\n    borderRadius: '15px'\r\n};\r\n\r\nconst initialPostValues = {\r\n    postComment: '',\r\n}\r\n\r\nfunction PostModal({post, ...props}) {\r\n    const {postId} = useParams();\r\n\r\n    useEffect(() => {\r\n        document.title = `Пост ${postId}`\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        props.getPostThunk(postId)\r\n    }, [])\r\n    \r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(initialPostValues);\r\n\r\n    const sendPost = () => {\r\n        props.addComment(values.postComment);\r\n        values.postComment = '';\r\n    }\r\n    \r\n    if (post.postIsLoading) {\r\n        return <LoaderPage/>\r\n    }\r\n\r\n    const deletePost = () => {\r\n        props.deletePost(post.postId)\r\n    }\r\n\r\n    const savedPost = () => {\r\n        props.savedPost(post)\r\n    }\r\n\r\n    if (props.error) return <NoInternetError/>\r\n    \r\n    return (\r\n        <Box sx = {{style}}>\r\n            <Card sx={styleCard}>\r\n                <Box sx = {{display: 'flex', justifyContent: 'start', alignItems: 'center', height: '100%'}}>\r\n                    <Box  sx = {{width: '600px', height: '100%', display: 'flex', alignItems: 'center', backgroundColor: 'black'}}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            height=\"auto\"\r\n                            width = '600px'\r\n                            image= {post.url}\r\n                            alt=\"green iguana\"\r\n                        />\r\n                    </Box>\r\n                    <Box sx = {{width: '400px', height: '100%', display: 'inline-block'}}>\r\n                        <CardContent sx = {{padding: '0'}}>\r\n                            <Box sx = {{height: '60px', width: '100%'}}>\r\n                                <CardHeader\r\n                                    sx = {{padding: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                    avatar={\r\n                                        <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                                            R\r\n                                        </Avatar>\r\n                                    }\r\n                                    action={\r\n                                        <IconButton aria-label=\"settings\" sx = {{padding: 0, paddingTop: '15px'}}>\r\n                                            <MoreVertIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                    title= {\r\n                                        <NavLink style = {{textDecoration: 'none', color: 'black'}} to={`/${post.username}/publications`}>{post.username}</NavLink>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            <Divider/>\r\n                            <Box sx = {{height: '480px', width: '100%', justifyContent: 'space-between', alignItems: 'center', overflowY: 'scroll'}}>\r\n                                {\r\n                                    post.comments.map((item) => {\r\n                                        return (\r\n                                            <Box key = {item.id} sx = {{padding: '10px'}}>\r\n                                                <Box sx={{width: '100%', margin: '0', display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n                                                    <Avatar sx={{ bgcolor: red[500], width: 24, height: 24 }} aria-label=\"recipe\">\r\n                                                        R\r\n                                                    </Avatar>\r\n                                                    <Typography\r\n                                                        sx={{ display: 'inline-block', width: '300px', paddingLeft: '15px'}}\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        color=\"text.primary\"\r\n                                                    >\r\n                                                        <a href=\"/\">User</a>\r\n                                                        <Typography component=\"span\" variant=\"body2\" sx={{ paddingLeft: '15px'}}>\r\n                                                            {item.body}\r\n                                                        </Typography>\r\n                                                    </Typography>\r\n                                                    <IconButton aria-label=\"add to favorites\">\r\n                                                        <FavoriteBorderIcon fontSize = 'small' />\r\n                                                    </IconButton>\r\n                                                </Box>\r\n                                                <Typography sx = {{paddingLeft: '50px', color: 'gray'}} fontSize = '12px'>\r\n                                                    3 ч.\r\n                                                </Typography>\r\n                                            </Box>   \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Box>\r\n                            <Divider/>\r\n                            <Box sx = {{height: '100px', width: '100%'}}>\r\n                            <Grid\r\n                                alignItems=\"center\"\r\n                                container\r\n                                direction=\"row\"\r\n                                justifyContent=\"space-between\"\r\n                                sx = {{paddingBottom: '0px'}}\r\n                            >\r\n                                <Box>\r\n                                    \r\n                                    {\r\n                                        post.liked\r\n                                            ? <IconButton onClick={props.deleteLike} aria-label=\"add to favorites\">\r\n                                                <FavoriteIcon  fontSize = 'medium' color='error'/>\r\n                                            </IconButton>\r\n                                            : <IconButton onClick={props.setLike} aria-label=\"add to favorites\">\r\n                                                <FavoriteBorderIcon fontSize = 'medium'/>\r\n                                            </IconButton>\r\n                                    }\r\n                                    \r\n                                    <IconButton aria-label=\"share\">\r\n                                        <SendIcon />\r\n                                    </IconButton>\r\n                                </Box>\r\n                                    {\r\n                                        post.savedPost\r\n                                        ?<IconButton onClick = {deletePost} aria-label=\"share\"><BookmarkIcon /></IconButton>                                    \r\n                                        :<IconButton onClick = {savedPost} aria-label=\"share\"><BookmarkBorderIcon/></IconButton>\r\n                                    }\r\n                            </Grid>\r\n                                <Box sx = {{paddingLeft: '10px'}}>\r\n                                    <Typography fontSize = '15px'>\r\n                                        <b>{post.likeCount} отметок \"Нравится\"</b>\r\n                                    </Typography>\r\n                                    <Typography fontSize = '10px' color = 'gray'>\r\n                                        5 ЧАСОВ НАЗАД\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                            <Divider/>\r\n                            <form>\r\n                                <Grid\r\n                                    alignItems=\"center\"\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justifyContent=\"space-between\"\r\n                                    sx = {{height: '50px', width: '100%'}}\r\n                                >\r\n                                    <TextField placeholder=\"Оставить комментарий\" \r\n                                    InputProps={{ disableUnderline: true }} \r\n                                    sx = {{width: '300px', paddingLeft: '10px'}} \r\n                                    id=\"filled-basic\" \r\n                                    label=\"\" \r\n                                    variant=\"standard\" \r\n                                    name = \"postComment\"\r\n                                    onChange = {handleInputChange}\r\n                                    value = {values.postComment}\r\n                                    />\r\n                                    {\r\n                                        values.postComment\r\n                                        ? <Button \r\n                                            variant=\"text\"\r\n                                            onClick = {sendPost}\r\n                                        >   \r\n                                        Send\r\n                                        </Button>\r\n                                        : <Button \r\n                                            variant=\"text\"\r\n                                            disabled\r\n                                        >   \r\n                                        Send\r\n                                        </Button>\r\n                                    }\r\n                                </Grid>\r\n                            </form>\r\n                        </CardContent>\r\n                    </Box>\r\n                </Box>\r\n            </Card>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        post: state.postPage,\r\n        error: state.authReducer.error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLike: () => {\r\n            dispatch(setLike())\r\n        },\r\n        deleteLike: () => {\r\n            dispatch(deleteLike())\r\n        },\r\n        addComment: (comment) => {\r\n            dispatch(addComment(comment))\r\n        },\r\n        savedPost: (post) => {\r\n            dispatch(savedPost(post))\r\n        },\r\n        deletePost: (id) => {\r\n            dispatch(deletePost(id))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(null, {getPostThunk}),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(PostModal);","import { Button, TextField, Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\n\r\nconst AddPost = (props) => {\r\n    useEffect(() => {\r\n        document.title = 'Создание поста'\r\n    }, [])\r\n\r\n    let fileInput = useRef()\r\n\r\n    const handleSubmit = () => {\r\n        console.log(fileInput.current.files[0]);\r\n    }\r\n\r\n    return (\r\n        <Box \r\n            sx = {{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}\r\n        >\r\n            <Box \r\n                sx = {{\r\n                    width: {xs: '100%'},\r\n                    maxWidth: '500px',\r\n                    border: '1px solid lightgray',\r\n                    borderRadius: '10px',\r\n                    margin: '10px'\r\n                }}\r\n            >\r\n                <Box\r\n                    sx = {{\r\n                        display: 'flex',\r\n                        alignItems: 'center'\r\n                    }}\r\n                >\r\n                    <Box\r\n                        sx = {{\r\n                            width: {xs: '150px', sm: '200px'},\r\n                            height: {xs: '150px', sm: '200px'},\r\n                            background: 'gray',\r\n                            margin: '10px',\r\n                            borderRadius: '5px'\r\n                        }}\r\n                    >\r\n                    </Box>\r\n                    <Box\r\n                        sx = {{\r\n                            margin: {sx: '0px', sm: '20px'}\r\n                        }}\r\n                    >\r\n                        <input\r\n                            ref={fileInput}\r\n                            color=\"primary\"\r\n                            accept=\"image/*\"\r\n                            type=\"file\"\r\n                            id=\"icon-button-file\"\r\n                            style={{ display: 'none', }}\r\n                        />\r\n                        <label htmlFor=\"icon-button-file\">\r\n                            <Button\r\n                                \r\n                                component=\"span\"\r\n                                size=\"large\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Выбрать фотографию\r\n                            </Button>\r\n                        </label>\r\n                    </Box>\r\n                </Box>\r\n                <Typography \r\n                    variant=\"h6\"\r\n                    sx = {{\r\n                        margin: '10px'\r\n                    }}\r\n                >\r\n                    Подпись:\r\n                </Typography>\r\n                <TextField \r\n                    multiline \r\n                    rows={4}\r\n                    sx = {{\r\n                        width: '100%',\r\n                        padding: '0 10px'\r\n                    }}\r\n                />\r\n                <Box\r\n                    sx = {{\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        justifyContent: 'right',\r\n                        padding: '10px'\r\n                    }}\r\n                    \r\n                >\r\n                    <Button onClick={handleSubmit} variant=\"contained\">Опубликовать пост</Button>\r\n                    \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n)(AddPost);","import './App.css';\nimport Navigation from './navigation/Navigation'\nimport FeedContainer from './feed/FeedContainer';\nimport {Grid } from '@mui/material';\nimport {Route, Switch, withRouter} from \"react-router-dom\"\nimport React, { Suspense } from 'react';\nimport ProfileContainer from './profile/ProfileContainer';\nimport SettingsContainer from './settings/SettingsContainer';\nimport Login from './login/Login';\nimport { AuthContext } from './context/authContext';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport ScrollToTop from './ScrollToTop';\nimport PostPage from './post/PostPage';\nimport AddPost from './addPost/AddPost.jsx';\n\nclass App extends React.Component {\n  render () {\n    return (\n      <ScrollToTop>\n        <AuthContext.Provider \n          value = {{\n            isAuth: this.props.isAuth,\n\n          }} \n        >\n        <Navigation/>\n        <Grid\n            sx = {{pt: '10px', width: '100%', height: '100%'}}\n            alignItems=\"start\"\n            justifyContent=\"center\"\n            container\n            direction=\"row\" \n          >\n            \n              <Switch>\n                <Route exact path = '/login' component = {Login} />\n                <Route exact path = '/accounts/:settings' component = {SettingsContainer} />\n                <Route exact path = '/create' component = {AddPost} />\n                <Route exact path = '/post/:postId' component = {PostPage} />\n                <Route exact path = '/:username/:tag' component = {ProfileContainer} />\n                <Route exact path = '/' component = {FeedContainer} /> \n              </Switch>\n            \n        </Grid>\n      </AuthContext.Provider>\n      </ScrollToTop>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.authReducer.isAuth,\n    error: state.authReducer.i\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  withRouter\n)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { combineReducers } from \"redux\";\r\nimport profileReducer from './profile-reducer';\r\nimport feedReducer from './feed-reducer';\r\nimport settingsReducer from './settings-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport postPageReducer from './postPage-reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nlet reducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    feedPage: feedReducer,\r\n    settingsPage: settingsReducer,\r\n    authReducer: authReducer,\r\n    postPage: postPageReducer\r\n})\r\n\r\nlet store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store = {store}>\n      <App/>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}