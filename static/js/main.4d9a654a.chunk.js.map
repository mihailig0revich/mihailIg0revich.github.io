{"version":3,"sources":["api/api.js","redux/auth-reducer.js","context/authContext.js","navigation/ModalMenu.jsx","navigation/NotificationModal.jsx","customHooks/useFrom.jsx","styledComponent/search.jsx","navigation/SearchInputComponent.jsx","navigation/Navigation.jsx","common/loader.svg","common/LoaderPage.jsx","hoc/withAuthRedirect.jsx","styledComponent/postInModal.jsx","feed/PostInModalFeed.jsx","feed/Post.jsx","feed/loading.gif","customHooks/useOserver.jsx","feed/Feed.jsx","redux/feed-reducer.js","common/NoInternetError.jsx","feed/FeedContainer.jsx","profile/SettingsModal.jsx","scripts/scripts.js","profile/PostInModal.jsx","profile/loading.svg","profile/Posts.jsx","profile/UserListModal.jsx","profile/DialogForm.jsx","profile/Profile.jsx","redux/profile-reducer.js","profile/ErrorPage.jsx","profile/ProfileContainer.jsx","settings/ChangePassword.jsx","settings/NotificationSettings.jsx","settings/EditProfile.jsx","settings/SecuritySettings.jsx","settings/Settings.jsx","redux/settings-reducer.js","settings/SettingsContainer.jsx","login/Login.jsx","ScrollToTop.jsx","redux/postPage-reducer.js","post/PostPage.jsx","addPost/AddPost.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["instance","axios","baseURL","api","id","get","then","response","catch","error","console","log","request","username","albumId","page","userId","SET_AUTH_USER","SET_ERROR","LOGOUT_USER","GET_ALL_USERS","DELETE_SUBSCRIPTIONS","DELETE_SUBSCRIBERS","ADD_SUBSCRIPTION","SAVED_POST","DELETE_POST","SET_LOADING","initialState","isAuth","user","subscriptions","subscribers","savedPosts","isLoading","savedPost","post","type","deletePost","setError","setLoading","getMeThunk","login","dispatch","a","data","length","loginThunk","localStorage","setItem","AllUserThink","responseAllUser","users","authReducer","state","action","filter","item","postId","AuthContext","createContext","ModalMenu","props","React","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","menuId","Box","IconButton","size","edge","onClick","event","currentTarget","color","sx","customStyle","children","Menu","MenuListProps","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","component","Link","to","style","textDecoration","marginRight","Divider","logoutThunk","NotificationModal","handleNotificationClose","setNotificationAnchorEl","notificationanchorEl","isNotificationOpen","maxHeight","List","width","maxWidth","minWidth","bgcolor","padding","notificationsData","map","ListItem","alignItems","justifyContent","ListItemAvatar","display","Avatar","alt","src","Typography","variant","message","img","useForm","initialValue","useState","values","setValues","handleInputChange","e","target","name","value","handleCheckboxChange","checked","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","breakpoints","down","StyledInputBase","InputBase","spacing","paddingLeft","transition","transitions","create","up","initialPostValues","searchUser","SearchInputComponent","history","useHistory","justify","push","onChange","placeholder","inputProps","ElevationScroll","window","trigger","useScrollTrigger","disableHysteresis","threshold","undefined","elevation","connect","removeItem","CssBaseline","AppBar","Toolbar","mr","Grid","container","direction","Button","noWrap","flexGrow","Badge","badgeContent","xs","sm","LoaderPage","marginTop","loader","mapStateToProps","withAuthRedirect","Component","useEffect","getItem","StyledBox","top","left","height","transform","boxShadow","p","StyledCard","Card","overflowX","StyledCardWrapper","flexDirection","overflowY","StyledCardMediaWrapper","maxwidth","StyledCommentWrapper","StyleExitButton","StyldCardContentWrapper","postComment","BasicModal","setOpen","handleClose","Modal","CardMedia","image","url","CardContent","CardHeader","paddingRight","avatar","red","paddingTop","title","comments","margin","href","body","fontSize","paddingBottom","setLike","like","setSave","likeCount","TextField","InputProps","disableUnderline","label","addComment","disabled","RecipeReviewCard","expanded","setExpanded","sendPost","marginBottom","border","subheader","CardActions","disableSpacing","Collapse","in","timeout","paragraph","slice","expand","useObserver","ref","canLoad","isPostsLoading","cb","observer","useRef","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","Feed","lastElement","totalPageCount","getPostsThink","postsArray","posts","Fragment","GET_POSTS","ITERATION_PAGE","SET_PAGE","SET_POSTS_LOADING","SET_LIKE","ADD_COMMENT","SET_SAVE","getPosts","setPostsLoading","feedReducer","concat","comment","NoInternetError","textAlign","compose","responseUsers","index","count","responsePhoto","responseComments","liked","Promise","all","reponse","feedPage","iteratonPage","setPage","document","SettingsModal","handleSettingsClose","Paper","MenuList","ListItemText","handleFormProblemDialogOpen","chunkArray","arr","chunk","newArray","i","ImageButton","ButtonBase","opacity","zIndex","ImageSrc","right","bottom","backgroundSize","backgroundPosition","Image","ImageBackdrop","black","focusRipple","backgroundImage","className","Posts","md","UserListModal","disableRipple","disableFocusRipple","Dialog","DialogTitle","borderBottom","titleText","DialogContent","userList","userMatch","deleteUser","buttonText","DialogForm","setValue","openModal","handleFormProblemDialogClose","autoFocus","multiline","fullWidth","rows","DialogActions","typographyStyle","typographyButtonStyle","textTransform","fontFamily","Profile","currentPage","isPageLoading","getAlbumThink","useParams","tag","allTabs","setOpenModal","isSub","deleteSubscriptions","addSubscription","totalPostsCount","deleteSubscribers","borderColor","Tabs","centered","Tab","path","render","visibility","GET_USER","GET_ALBUM","IS_PAGE_LOADING","TOTAL_POSTS_COUNT","IS_USER_LOADING","album","isUserLoading","responseUser","responseUserAlbum","userAlbumAndComment","headers","profileReducer","ErrorPage","align","getUserThink","profilePage","authUsername","withRouter","authContext","useContext","findIndex","checkSub","match","params","containerStyle","feldStyle","ChangePassword","oldPassword","newPasswordFirst","newPasswordSecond","NotificationSettings","notificationSettings","changeSettings","RadioGroup","FormControlLabel","control","Radio","subscriptionRequest","reminders","firstPublications","supportRequests","EditProfile","editProfile","editName","editUsername","editWebsite","maxRows","editAboutSelf","editEmail","editPhoneNumber","editGender","Checkbox","recommendationSimilarAccounts","SecuritySettings","securitySettings","accountPrivacy","onlineStatus","settingsPage","settings","minHeight","orientation","borderRight","CHANGE_SETTINGS","settingsReducer","settingsName","preventDefault","ScrollToTop","prevProps","this","location","scrollTo","GET_POST","DELETE_LIKE","SET_POST_IS_LOADING","postIsLoading","postPageReducer","styleCard","getPostThunk","postResponse","userResponce","commentsResponce","lenght","postPage","deleteLike","fileInput","background","accept","htmlFor","files","App","Provider","Navigation","pt","exact","Login","SettingsContainer","AddPost","PostPage","ProfileContainer","FeedContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","basename","process","getElementById"],"mappings":"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","file":"static/js/main.4d9a654a.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com'\r\n})\r\n\r\nexport const api = {\r\n    login(id) {\r\n        return instance.get(`/users?id=${id}`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                \r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n\r\n    getUser(username) {\r\n        return instance.get(`/users?username=${username}`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n\r\n    getAllUsers() {\r\n        return instance.get(`/users`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n\r\n    getUserAlbum(albumId, page) {\r\n        return instance.get(`/photos?albumId=${albumId}&_limit=3&_page=${page}`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n\r\n    getPhoto(id) {\r\n        return instance.get(`/photos?id=${id}`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n\r\n    getComments(page) {\r\n        //debugger\r\n        return instance.get(`/comments?_limit=2&_page=${page}`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n\r\n    getUserById(userId) {\r\n        return instance.get(`/users?id=${userId}`)\r\n            .then((response) => {\r\n                return response\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    console.log('response');\r\n                } else if (error.request) {\r\n                    return error.request\r\n                }\r\n            })\r\n    },\r\n}\r\n\r\n","import { api } from \"../api/api\"\r\n\r\nconst SET_AUTH_USER = 'auth-reducer/SET_AUTH_USER'\r\nconst SET_ERROR = 'profile-reducer/SET_ERROR'\r\nconst LOGOUT_USER = 'auth-reducer/LOGOUT_USER'\r\nconst GET_ALL_USERS = 'profile-reducer/GET_ALL_USERS';\r\nconst DELETE_SUBSCRIPTIONS = 'profile-reducer/DELETE_SUBSCRIPTIONS';\r\nconst DELETE_SUBSCRIBERS = 'profile-reducer/DELETE_SUBSCRIBERS';\r\nconst ADD_SUBSCRIPTION = 'profile-reducer/ADD_SUBSCRIPTION';\r\nconst SAVED_POST = 'profile-reducer/SAVED_POST';\r\nconst DELETE_POST = 'profile-reducer/DELETE_POST';\r\nconst SET_LOADING = 'profile-reducer/SET_LOADING';\r\n\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    error: false,\r\n    user: {\r\n        \"id\": null,\r\n        \"name\": \"\",\r\n        \"username\": \"\",\r\n        \"email\": \"\",\r\n        \"address\": {},\r\n        \"phone\": \"\",\r\n        \"website\": \"\",\r\n        \"company\": {}\r\n    },\r\n    subscriptions: [],\r\n    subscribers: [],\r\n    savedPosts: [],\r\n    isLoading: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER:\r\n                return {\r\n                    ...state,\r\n                    ...action.user\r\n                }\r\n        case LOGOUT_USER:\r\n                return {\r\n                    ...state,\r\n                    ...action.user\r\n                }\r\n        case GET_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                subscribers: action.users.filter((item) => {\r\n                    if (item.username !== state.user.username) return true;\r\n                    return false;\r\n                }),\r\n                subscriptions: action.users.filter((item) => {\r\n                    if (item.username !== state.user.username) return true;\r\n                    return false;\r\n                })\r\n            }\r\n        case DELETE_SUBSCRIBERS:\r\n            return {\r\n                ...state,\r\n                subscribers: state.subscribers.filter((item) => {\r\n                    if (item.username !== action.username) return true;\r\n                    return false;\r\n                }),\r\n                \r\n            }\r\n        case DELETE_SUBSCRIPTIONS:\r\n            return {\r\n                ...state,\r\n                subscriptions: state.subscriptions.filter((item) => {\r\n                    if (item.username !== action.username) return true;\r\n                    return false;\r\n                })\r\n            }\r\n        case ADD_SUBSCRIPTION:\r\n            return {\r\n                ...state,\r\n                subscriptions: [...state.subscriptions, {username: action.username}]\r\n            }\r\n        case SAVED_POST:\r\n            \r\n            return {\r\n                ...state,\r\n                savedPosts: [...state.savedPosts, {...action.post, savedPost: true, type: 'saved'}]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                savedPosts: state.savedPosts.filter((item) => {\r\n                    \r\n                    if (item.postId !== action.id) return true;\r\n                    return false;\r\n                })\r\n            }\r\n        case SET_ERROR: \r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case SET_LOADING: \r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setAuthUser = (isAuth, user) => {\r\n    return {\r\n        type: 'auth-reducer/SET_AUTH_USER',\r\n        user: {\r\n            isAuth,\r\n            error: null,\r\n            user,\r\n        }\r\n    }\r\n}\r\n\r\nconst logoutUser = () => {\r\n    return {\r\n        type: 'auth-reducer/LOGOUT_USER',\r\n        user: {\r\n            isAuth: false,\r\n            error: null,\r\n            user: {\r\n                \"id\": null,\r\n                \"name\": \"\",\r\n                \"username\": \"\",\r\n                \"email\": \"\",\r\n                \"address\": {},\r\n                \"phone\": \"\",\r\n                \"website\": \"\",\r\n                \"company\": {}\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nconst getAllUser = (users) => {\r\n    return {\r\n        type: 'profile-reducer/GET_ALL_USERS',\r\n        users\r\n    }\r\n}\r\n\r\nexport const deleteSubscribers = (username) => {\r\n    return {\r\n        type: 'profile-reducer/DELETE_SUBSCRIBERS',\r\n        username\r\n    }\r\n}\r\n\r\nexport const deleteSubscriptions = (username) => {\r\n    return {\r\n        type: 'profile-reducer/DELETE_SUBSCRIPTIONS',\r\n        username\r\n    }\r\n}\r\n\r\nexport const addSubscription = (username) => {\r\n    return {\r\n        type: 'profile-reducer/SUBSCRIPTION',\r\n        username\r\n    }\r\n}\r\n\r\nexport const savedPost = (post) => {\r\n    return {\r\n        type: 'profile-reducer/SAVED_POST',\r\n        post\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => {\r\n    return {\r\n        type: 'profile-reducer/DELETE_POST',\r\n        id\r\n    }\r\n}\r\n\r\nexport const setError = (error) => {\r\n    return {\r\n        type: 'profile-reducer/SET_ERROR',\r\n        error\r\n    }\r\n}\r\n\r\nexport const setLoading = (isLoading) => {\r\n    return {\r\n        type: 'profile-reducer/SET_LOADING',\r\n        isLoading\r\n    }\r\n}\r\n\r\nexport const getMeThunk = (login) => {\r\n    return async (dispatch) => {\r\n        dispatch(setError(false))\r\n        \r\n        try {\r\n            const response = await api.login(login);\r\n\r\n            if (response.data.length !== 0) {\r\n                dispatch(setAuthUser(true, response.data[0]))\r\n            }\r\n        } catch (err) {\r\n            \r\n            dispatch(setError(true))\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginThunk = (login) => {\r\n    return async (dispatch) => {\r\n            dispatch(setError(false))\r\n            dispatch(setLoading(true))\r\n        \r\n        try {\r\n            const response = await api.login(login);\r\n            \r\n            if (response.data.length !== 0) {\r\n                dispatch(getMeThunk(login))\r\n                localStorage.setItem('LOCAL_SAFE_AUTH', login);\r\n                dispatch(AllUserThink())\r\n                \r\n            }\r\n        } catch (err) {\r\n            dispatch(setError(true))\r\n        }\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\nexport const logoutThunk = () => {\r\n    return async (dispatch) => {\r\n        dispatch(logoutUser())\r\n        localStorage.removeItem('LOCAL_SAFE_AUTH');\r\n    }\r\n}\r\n\r\nexport const AllUserThink = () => {\r\n    return async (dispatch) => {\r\n        dispatch(setError(false))\r\n        \r\n        try {\r\n            const responseAllUser = await api.getAllUsers();\r\n        \r\n            if (responseAllUser.data.length !== 0) {\r\n                dispatch(getAllUser(responseAllUser.data));\r\n            }\r\n        } catch (error) {\r\n            dispatch(setError(true))\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { createContext } from \"react\";\r\n\r\n\r\nexport const AuthContext = createContext({});","import * as React from 'react';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport { Box, Divider, IconButton } from '@mui/material';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\n\r\nconst ModalMenu = (props) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const onLogout = () => {\r\n        handleMenuClose()\r\n        props.logoutThunk();\r\n    }\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    return (\r\n        <Box>\r\n            <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n                sx = {props.customStyle}\r\n            >\r\n                {props.children}\r\n            </IconButton>\r\n            <Menu\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                id={menuId}\r\n                keepMounted\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n                }}\r\n                open={isMenuOpen}\r\n                onClose={handleMenuClose}\r\n            >\r\n                <MenuItem \r\n                    component = {Link}\r\n                    to={`/${props.username}/publications`} \r\n                    style = {{textDecoration: 'none',color: 'black'}} \r\n                    onClick={handleMenuClose}\r\n                >\r\n                    <AccountCircle sx = {{marginRight: '10px'}}/> Профиль\r\n                </MenuItem>\r\n\r\n                <MenuItem \r\n                    onClick={handleMenuClose}\r\n                    component = {Link}\r\n                    to= {`/${props.username}/saved`} \r\n                    style = {{textDecoration: 'none',color: 'black'}} \r\n                >\r\n                    <BookmarkBorderIcon sx = {{marginRight: '10px'}}/> Сохнаненное\r\n                </MenuItem>\r\n\r\n                <MenuItem \r\n                    onClick={handleMenuClose}\r\n                    component = {Link}\r\n                    to=\"/accounts/edit\" \r\n                    style = {{textDecoration: 'none',color: 'black'}}\r\n                >\r\n                    <SettingsIcon sx = {{marginRight: '10px'}}/> Настройки\r\n                </MenuItem>\r\n\r\n                <Divider />\r\n                \r\n                <NavLink style = {{\r\n                    textDecoration: 'none',\r\n                    color: 'black'\r\n                }} to=\"/\">\r\n                    <MenuItem onClick={onLogout}>Выйти</MenuItem>\r\n                </NavLink>\r\n            </Menu>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ModalMenu","\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport {Avatar, List, ListItem, ListItemAvatar } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst NotificationModal = (props) => {\r\n\r\n    const handleNotificationOpen = (event) => {\r\n        setNotificationAnchorEl(event.currentTarget);\r\n    };\r\n    const handleNotificationClose = () => {\r\n        setNotificationAnchorEl(null);\r\n    };  \r\n    const [notificationanchorEl, setNotificationAnchorEl] = React.useState(null);\r\n    const isNotificationOpen = Boolean(notificationanchorEl);\r\n    const NotificationId = 'primary-notification';  \r\n\r\n    return (\r\n        <Box>\r\n            <IconButton\r\n                size=\"large\"\r\n                aria-label=\"show 17 new notifications\"\r\n                color=\"inherit\"\r\n                onClick = {handleNotificationOpen}\r\n            >\r\n                {props.children}\r\n            </IconButton>\r\n            <Menu\r\n                id={NotificationId}\r\n                anchorEl={notificationanchorEl}\r\n                open={isNotificationOpen}\r\n                onClose={handleNotificationClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                MenuListProps={{\r\n                'aria-labelledby': 'basic-button',\r\n                }}\r\n                sx = {{\r\n                    maxHeight: '500px',\r\n                }}\r\n            >\r\n                <List sx={{ width: '100%', maxWidth: '500px', minWidth: '300px', bgcolor: 'background.paper', padding: '0px 0px', }}>\r\n                    {\r\n                        props.notificationsData.map((item) => {\r\n                            return (\r\n                                <React.Fragment key = {item.id}>\r\n                                    <ListItem sx = {{\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'space-between'\r\n                                }}>\r\n                                    <Box>\r\n                                        <ListItemAvatar sx={{ display: 'inline-block'}}>\r\n                                            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                                        </ListItemAvatar>\r\n                                        <Typography\r\n                                            sx={{ display: 'inline-block'}}\r\n                                            component=\"span\"\r\n                                            variant=\"body2\"\r\n                                            color=\"text.primary\"\r\n                                        >\r\n                                            <NavLink \r\n                                                style = {{\r\n                                                    textDecoration: 'none', \r\n                                                    color: 'black', \r\n                                                    marginRight: '10px'\r\n                                                }} \r\n                                                to={`/${item.username}/publications`}\r\n                                            >\r\n                                                <b>{item.username}</b>\r\n                                            </NavLink>\r\n                                            {item.message}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    <NavLink onClick = {handleNotificationClose} style = {{textDecoration: 'none', color: 'black'}} to={`/post/1`}><img src={item.img}/></NavLink>\r\n                                    \r\n                                    </ListItem>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </Menu>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default NotificationModal","import {useState} from \"react\"\r\n\r\nconst useForm = (initialValue) => {\r\n    const [values, setValues] = useState(initialValue);\r\n\r\n    const handleInputChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    const handleCheckboxChange = (e) => {\r\n        const {name, checked} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: checked,\r\n        })\r\n    }\r\n\r\n    return({\r\n        values,\r\n        handleInputChange,\r\n        handleCheckboxChange\r\n    })\r\n}\r\n\r\nexport default useForm;","import InputBase from '@mui/material/InputBase';\r\nimport { styled, alpha } from '@mui/material/styles';\r\n\r\nexport const Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: '10%',\r\n    [theme.breakpoints.down('md')]: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n        },\r\n    },\r\n}));","import * as React from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport useForm from '../customHooks/useFrom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Search, StyledInputBase } from '../styledComponent/search';\r\n\r\nconst initialPostValues = {\r\n    searchUser: ''\r\n}\r\n\r\nconst SearchInputComponent = () => {\r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(initialPostValues);\r\n\r\n    let history = useHistory()\r\n\r\n    const handleSearchUser = () => {\r\n        \r\n        history.push(`/${values.searchUser}/publications`); \r\n        values.searchUser = ''\r\n    }\r\n    return (\r\n        <Search sx = {{\r\n            justify: 'center'\r\n        }}>\r\n            <IconButton onClick ={handleSearchUser} sx ={{color: 'inherit'}}>\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <StyledInputBase\r\n                name = \"searchUser\"\r\n                value={values.searchUser}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Search…\"\r\n                inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n        </Search>\r\n    )\r\n}\r\n\r\nexport default SearchInputComponent","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Badge from '@mui/material/Badge';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport Button from '@mui/material/Button';\r\nimport { CssBaseline, Grid, useScrollTrigger } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { connect } from 'react-redux';\r\nimport { logoutThunk } from '../redux/auth-reducer';\r\nimport { AuthContext } from '../context/authContext'\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\nimport ModalMenu from './ModalMenu';\r\nimport NotificationModal from './NotificationModal';\r\nimport SearchInput from './SearchInputComponent';\r\n\r\nconst notificationsData = [\r\n    {\r\n        id: '1',\r\n        username: 'Antonette',\r\n        message: \"I'll be in your\",\r\n        img: 'https://via.placeholder.com/40/197d29',\r\n    },\r\n    {\r\n        id: '2',\r\n        username: 'Antonette',\r\n        message: \"I'll be in your\",\r\n        img: 'https://via.placeholder.com/40/197d29',\r\n    },\r\n    {\r\n        id: '3',\r\n        username: 'Antonette',\r\n        message: \"I'll be in your\",\r\n        img: 'https://via.placeholder.com/40/197d29',\r\n    },\r\n]\r\n\r\nfunction ElevationScroll(props) {\r\n    const { children, window } = props;\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 0,\r\n        target: window ? window() : undefined,\r\n    });\r\n\r\n    return React.cloneElement(children, {\r\n        elevation: trigger ? 4 : 0,\r\n    });\r\n}\r\n\r\nfunction PrimarySearchAppBar(props) {    \r\n\r\n    const isAuth = React.useContext(AuthContext);    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n                <ElevationScroll {...props}>\r\n                    <AppBar>\r\n                        <Toolbar sx={{ mr: 1 }}>\r\n                            <Grid\r\n                                alignItems=\"center\"\r\n                                justifyContent=\"center\"\r\n                                container\r\n                                direction=\"row\"\r\n                            >\r\n                                {isAuth.isAuth ?\r\n                                    <Grid\r\n                                        alignItems=\"center\"\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justifyContent=\"space-between\"\r\n                                        sx = {{\r\n                                            maxWidth: '800px'\r\n                                        }}\r\n                                    >\r\n                                        <NavLink style = {{\r\n                                            textDecoration: 'none',\r\n                                            color: 'white'\r\n                                        }} to=\"/\">\r\n                                            <Button color=\"inherit\">\r\n                                                <Typography\r\n                                                    variant=\"h6\"\r\n                                                    noWrap\r\n                                                    component=\"div\"\r\n                                                >\r\n                                                    My Album\r\n                                                </Typography>\r\n                                            </Button>\r\n                                        </NavLink>\r\n                                        \r\n                                        <SearchInput/>\r\n\r\n                                        <div>\r\n                                            <Box sx={{ flexGrow: 1 }} />\r\n                                            <Box sx={{ display: 'flex' }}>\r\n                                                <NavLink style = {{\r\n                                                    textDecoration: 'none',\r\n                                                    color: 'white'\r\n                                                }} to=\"/\">\r\n                                                    <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                                                        <HomeIcon />\r\n                                                    </IconButton>\r\n                                                </NavLink>\r\n                                                <NavLink style = {{\r\n                                                    textDecoration: 'none',\r\n                                                    color: 'white'\r\n                                                }} to=\"/create\">\r\n                                                    <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                                                        <AddBoxIcon />\r\n                                                    </IconButton>\r\n                                                </NavLink>\r\n\r\n                                                <NotificationModal\r\n                                                    notificationsData = {notificationsData}\r\n                                                >\r\n                                                    <Badge badgeContent={notificationsData.length} color=\"error\">\r\n                                                    <NotificationsIcon />\r\n                                                    </Badge>\r\n                                                </NotificationModal>\r\n                                                \r\n                                                <ModalMenu\r\n                                                    logoutThunk = {props.logoutThunk}\r\n                                                    username = {props.username}\r\n                                                >\r\n                                                    <AccountCircle />\r\n                                                </ModalMenu>\r\n                                            </Box>\r\n                                        </div>\r\n                                    </Grid>\r\n                                    :\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        noWrap\r\n                                        component=\"div\"\r\n                                        sx={{ display: { xs: 'none', sm: 'block' } }}\r\n                                    >\r\n                                        MY ALBUM\r\n                                    </Typography>\r\n                                }\r\n                            </Grid>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </ElevationScroll>\r\n            <Toolbar />\r\n        </React.Fragment>  \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        username: state.authReducer.user.username\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logoutThunk})(PrimarySearchAppBar)","export default __webpack_public_path__ + \"static/media/loader.5cea070a.svg\";","import loader from './loader.svg'\r\n\r\nconst LoaderPage = () => {\r\n    return (\r\n        <>\r\n            <img style = {{marginTop: '15%'}} src={loader} alt=\"Loading\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoaderPage","import { useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport LoaderPage from \"../common/LoaderPage\"\r\nimport { loginThunk } from \"../redux/auth-reducer\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n        error: state.authReducer.error,\r\n        isLoading: state.authReducer.isLoading\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        useEffect(() => {\r\n            if(localStorage.getItem('LOCAL_SAFE_AUTH') && props.isAuth === false) {\r\n                props.loginThunk(localStorage.getItem('LOCAL_SAFE_AUTH'))\r\n            }\r\n        }, [props.isAuth])\r\n\r\n        if (!(localStorage.getItem('LOCAL_SAFE_AUTH')) && !props.isAuth) return <Redirect to = '/login'/>\r\n\r\n        if (props.isLoading || !props.isAuth) return <LoaderPage/>;\r\n\r\n        return <Component {...props}/>\r\n        \r\n    }\r\n\r\n    return connect(mapStateToProps, {loginThunk})(RedirectComponent)\r\n}","import { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport { Card, IconButton } from '@mui/material';\r\n\r\nexport const StyledBox = styled(Box)(({ theme }) => ({\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    height: '100%',\r\n    transform: 'translate(-50%, -50%)',\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    padding: 0,\r\n    \r\n    [theme.breakpoints.up(1000)]: {\r\n        height: 700,\r\n    },\r\n}));\r\n\r\nexport const StyledCard = styled(Card)(({ theme }) => ({\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    height: '100%',\r\n    transform: 'translate(-50%, -50%)',\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    padding: 0,\r\n    borderRadius: '15px',\r\n    overflowX: 'heddien',\r\n    [theme.breakpoints.up(1000)]: {\r\n        height: 700,\r\n    },\r\n    [theme.breakpoints.down(1000)]: {\r\n        width: '900px'\r\n    },\r\n    [theme.breakpoints.down(900)]: {\r\n        width: '800px'\r\n    },\r\n    [theme.breakpoints.down(800)]: {\r\n        width: '700px'\r\n    },\r\n    [theme.breakpoints.down(700)]: {\r\n        width: '600px'\r\n    },\r\n    [theme.breakpoints.down(600)]: {\r\n        width: '500px'\r\n    },\r\n    [theme.breakpoints.down(500)]: {\r\n        width: '400px'\r\n    },\r\n}));\r\n\r\nexport const StyledCardWrapper = styled(Box)(({ theme }) => ({\r\n    display: 'flex', \r\n    justifyContent: 'start', \r\n    alignItems: 'center', \r\n    height: '100%',\r\n    [theme.breakpoints.down(1000)]: {\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n        width: '100%'\r\n    },\r\n}))\r\n\r\nexport const StyledCardMediaWrapper = styled(Box)(({ theme }) => ({\r\n    maxwidth: '600px', \r\n    height: '100%', \r\n    display: 'flex', \r\n    alignItems: 'center', \r\n    backgroundColor: 'black',\r\n    [theme.breakpoints.up(1000)]: {\r\n        width: '600px',\r\n    },\r\n    [theme.breakpoints.down(1000)]: {\r\n        width: '100%',\r\n    },\r\n}))\r\n\r\nexport const StyledCommentWrapper = styled(Box)(({ theme }) => ({\r\n    justifyContent: 'space-between', \r\n    alignItems: 'center',\r\n    [theme.breakpoints.up(1000)]: {\r\n        height: '490px',\r\n    },\r\n}))\r\n\r\nexport const StyleExitButton = styled(IconButton)(({ theme }) => ({\r\n    position: 'absolute',\r\n    top: '-3%',\r\n    transform: 'translate(-50%, -50%)',\r\n    color: 'white',\r\n    [theme.breakpoints.down(1000)]: {\r\n        top: '3%',\r\n    },\r\n}))\r\n\r\nexport const StyldCardContentWrapper = styled(Box)(({ theme }) => ({\r\n    maxwidth: '900px',\r\n    width: '100%',\r\n    height: '100%', \r\n    display: 'inline-block',\r\n    [theme.breakpoints.up(1000)]: {\r\n        width: '400px',\r\n    },\r\n}))","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { CardContent, CardHeader, CardMedia, Divider, Grid, IconButton, TextField } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport useForm from '../customHooks/useFrom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport { StyledBox, StyledCard, StyledCardWrapper, StyledCardMediaWrapper, StyledCommentWrapper, StyleExitButton, StyldCardContentWrapper } from '../styledComponent/postInModal';\r\n\r\nconst initialPostValues = {\r\n    postComment: '',\r\n}\r\n\r\nexport default function BasicModal(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    \r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(initialPostValues);\r\n\r\n    const sendPost = () => {\r\n        props.addComment(values.postComment, props.post.postId)\r\n        values.postComment = ''\r\n    }\r\n\r\n    const deletePost = () => {\r\n        props.deletePost(props.post.postId)\r\n        props.setSave(props.post.postId)\r\n    }\r\n\r\n    const savedPost = () => {\r\n        props.savedPost(props.post)\r\n        props.setSave(props.post.postId)\r\n    }\r\n        \r\n    return (\r\n        <React.Fragment>\r\n            <Button sx = {props.customStyle} color={'inherit'} onClick={handleOpen}>{props.children}</Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <StyledBox>\r\n                    <StyledCard>\r\n                        <StyledCardWrapper>\r\n                            <StyledCardMediaWrapper>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    height=\"auto\"\r\n                                    width = '600px'\r\n                                    image= {props.post.url}\r\n                                    alt=\"green iguana\"\r\n                                />\r\n                            </StyledCardMediaWrapper>\r\n                            <StyldCardContentWrapper>\r\n                                <CardContent sx = {{padding: '0'}}>\r\n                                    <Box sx = {{height: '60px', width: '100%'}}>\r\n                                        <CardHeader\r\n                                            sx = {{padding: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                            avatar={\r\n                                                <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                                                    R\r\n                                                </Avatar>\r\n                                            }\r\n                                            action={\r\n                                                <IconButton aria-label=\"settings\" sx = {{padding: 0, paddingTop: '15px'}}>\r\n                                                    <MoreVertIcon />\r\n                                                </IconButton>\r\n                                            }\r\n                                            title= {\r\n                                                <NavLink style = {{textDecoration: 'none', color: 'black'}} to={`/${props.post.username}/publications`}>{props.post.username}</NavLink>\r\n                                            }\r\n                                        />\r\n                                    </Box>\r\n                                    <Divider/>\r\n                                    <StyledCommentWrapper>\r\n                                        {\r\n                                            props.comments.map((item) => {\r\n                                                return (\r\n                                                    <Box key = {item.id} sx = {{padding: '10px'}}>\r\n                                                        <Box sx={{width: '100%', margin: '0', display: 'flex', justifyContent: 'left', alignItems: 'center'}}>\r\n                                                            <Avatar sx={{ bgcolor: red[500], width: 24, height: 24 }} aria-label=\"recipe\">\r\n                                                                R\r\n                                                            </Avatar>\r\n                                                            <Typography\r\n                                                                sx={{ display: 'inline-block', width: '100%', paddingLeft: '15px'}}\r\n                                                                component=\"span\"\r\n                                                                variant=\"body2\"\r\n                                                                color=\"text.primary\"\r\n                                                            >\r\n                                                                <a href=\"/\">User</a>\r\n                                                                <Typography component=\"span\" variant=\"body2\" sx={{ paddingLeft: '15px'}}>\r\n                                                                    {item.body}\r\n                                                                </Typography>\r\n                                                            </Typography>\r\n                                                        </Box>\r\n                                                        <Typography sx = {{paddingLeft: '50px', color: 'gray'}} fontSize = '12px'>\r\n                                                            3 ч.\r\n                                                        </Typography>\r\n                                                    </Box>   \r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </StyledCommentWrapper>\r\n                                    <Divider/>\r\n                                    <Box sx = {{height: '100px', width: '100%'}}>\r\n                                    <Grid\r\n                                        alignItems=\"center\"\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justifyContent=\"space-between\"\r\n                                        sx = {{paddingBottom: '0px'}}\r\n                                    >\r\n                                        <Box>\r\n                                            <IconButton aria-label=\"add to favorites\" onClick = {() => props.setLike(props.post.postId)}>\r\n                                                {props.post.like \r\n                                                    ? <FavoriteIcon fontSize = 'medium' color='error'/>\r\n                                                    : <FavoriteBorderIcon fontSize = 'medium' />\r\n                                                }\r\n                                            </IconButton>\r\n                                            <NavLink style = {{textDecoration: 'none'}} to={`/post/${props.post.id}`}>\r\n                                                <IconButton aria-label=\"share\">\r\n                                                    <OpenInNewIcon />\r\n                                                </IconButton>\r\n                                            </NavLink>\r\n                                            \r\n                                        </Box>\r\n                                        {\r\n                                            props.post.savedPost\r\n                                            ?<IconButton onClick = {deletePost} aria-label=\"share\"><BookmarkIcon /></IconButton>                                    \r\n                                            :<IconButton onClick = {savedPost} aria-label=\"share\"><BookmarkBorderIcon/></IconButton>\r\n                                        }\r\n                                        \r\n                                    </Grid>\r\n                                        <Box sx = {{paddingLeft: '10px'}}>\r\n                                            <Typography fontSize = '15px'>\r\n                                                <b>{props.post.likeCount} отметок \"Нравится\"</b>\r\n                                            </Typography>\r\n                                            <Typography fontSize = '10px' color = 'gray'>\r\n                                                5 ЧАСОВ НАЗАД\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <Divider/>\r\n                                    <form>\r\n                                        <Grid\r\n                                            alignItems=\"center\"\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justifyContent=\"space-between\"\r\n                                            sx = {{height: '50px', width: '100%'}}\r\n                                        >\r\n                                            <TextField placeholder=\"Оставить комментарий\" \r\n                                            InputProps={{ disableUnderline: true }} \r\n                                            sx = {{width: '300px', paddingLeft: '10px'}} \r\n                                            id=\"filled-basic\" \r\n                                            label=\"\" \r\n                                            variant=\"standard\" \r\n                                            name = \"postComment\"\r\n                                            onChange = {handleInputChange}\r\n                                            value = {values.postComment}\r\n                                            />\r\n                                            {\r\n                                                values.postComment\r\n                                                ? <Button \r\n                                                    variant=\"text\"\r\n                                                    onClick = {sendPost}\r\n                                                >   \r\n                                                Send\r\n                                                </Button>\r\n                                                : <Button \r\n                                                    variant=\"text\"\r\n                                                    disabled\r\n                                                >   \r\n                                                Send\r\n                                                </Button>\r\n                                            }\r\n                                        </Grid>\r\n                                    </form>\r\n                                </CardContent>\r\n                            </StyldCardContentWrapper>\r\n                        </StyledCardWrapper>\r\n                    </StyledCard>\r\n                    <StyleExitButton onClick = {handleClose}> \r\n                        <CloseIcon fontSize = 'large' />\r\n                    </StyleExitButton>\r\n                </StyledBox>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport { Button, Divider, Grid, TextField } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport PostInModal from './PostInModalFeed'\r\nimport useForm from '../customHooks/useFrom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\n\r\nconst initialPostValues = {\r\n    postComment: '',\r\n}\r\n\r\nexport default function RecipeReviewCard( props) {\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    \r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(initialPostValues);\r\n\r\n    const sendPost = () => {\r\n        props.addComment(values.postComment, props.post.postId)\r\n        values.postComment = ''\r\n    }\r\n\r\n    const deletePost = () => {\r\n        props.deletePost(props.post.postId)\r\n        props.setSave(props.post.postId)\r\n    }\r\n\r\n    const savedPost = () => {\r\n        props.savedPost(props.post)\r\n        props.setSave(props.post.postId)\r\n    }\r\n    \r\n    return (\r\n        <Box sx = {{width: '100%', justifyContent: 'center', display: 'flex', paddingBottom: '20px'}}>\r\n            <Card sx={{ width: 600, padding: '0px', marginBottom: '0px', border: 'solid 1px gray'}}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                            R\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <IconButton aria-label=\"settings\" sx = {{padding: 0, paddingTop: '10px', paddingRight: '10px'}}>\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                    }\r\n                    title= {\r\n                        <NavLink style = {{textDecoration: 'none', color: 'black'}} to={`/${props.post.username}/publications`}>{props.post.username}</NavLink>\r\n                    }\r\n                    subheader=\"September 14, 2016\"\r\n                />\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    height=\"auto\"\r\n                    image= {props.post.url}\r\n                    width = '100%'\r\n                    alt=\"Paella dish\"\r\n                />\r\n                <CardActions disableSpacing>\r\n                    <Grid\r\n                        alignItems=\"center\"\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"space-between\"\r\n                    >\r\n                        <Box>\r\n                            <IconButton aria-label=\"add to favorites\" onClick = {() => props.setLike(props.post.postId)}>\r\n                                {props.post.like \r\n                                    ? <FavoriteIcon fontSize = 'medium' color='error'/>\r\n                                    : <FavoriteBorderIcon fontSize = 'medium' />\r\n                                }\r\n                                \r\n                            </IconButton>\r\n                        </Box>\r\n                        {\r\n                            props.post.savedPost\r\n                            ?<IconButton onClick = {deletePost} aria-label=\"share\"><BookmarkIcon /></IconButton>                                    \r\n                            :<IconButton onClick = {savedPost} aria-label=\"share\"><BookmarkBorderIcon/></IconButton>\r\n                        }\r\n                    </Grid>\r\n                    \r\n                </CardActions>\r\n                <Typography sx = {{paddingLeft: '16px'}}>\r\n                    {props.post.likeCount} отметок \"Нравится\"\r\n                </Typography>\r\n                {!expanded \r\n                    ? <Box>\r\n                        <Typography sx = {{paddingLeft : '16px', paddingRight : '16px', paddingBottom : '0', paddingTop : '0'}}>\r\n                            <a href=\"/\">{props.post.username}</a> {props.post.title.slice(0, 300)}{props.post.title.length > 300 && '...'}\r\n                            {\r\n                                props.post.title.length > 300 && <CardActions disableSpacing sx = {{padding: '0', paddingLeft: '8px', height: '16px', display: 'inline-block'}}>\r\n                                    <IconButton\r\n                                        expand={expanded}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                        sx = {{fontSize: '16px', padding: '0', paddingLeft: '8px'}}\r\n                                    >\r\n                                        ещё\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                                \r\n                            }\r\n                            </Typography>\r\n                        </Box>\r\n                    : <Collapse in={expanded} timeout=\"auto\">\r\n                        <CardContent sx = {{paddingLeft : '16px', paddingRight : '16px', paddingBottom : '0', paddingTop : '0'}}>\r\n                            <Typography paragraph sx = {{margin: '0'}}>\r\n                                <a href=\"/\">{props.post.username}</a> {props.post.title}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Collapse>\r\n                }\r\n                <CardContent sx = {{padding : '0px', marginBottom: '0px'}}>\r\n                    <Box>\r\n                        <Box sx={{paddingLeft: '16px'}}>\r\n                            <PostInModal \r\n                                addComment = {props.addComment} \r\n                                setLike = {props.setLike} \r\n                                comments = {props.post.comments} \r\n                                post = {props.post}\r\n                                deletePost = {props.deletePost}\r\n                                savedPost = {props.savedPost}\r\n                                setSave = {props.setSave}\r\n                                customStyle = {{\r\n                                    padding: '0'\r\n                                }}\r\n                            >\r\n                                Посмотеть комментарии\r\n                            </PostInModal>\r\n                            \r\n                        </Box>\r\n                    </Box>\r\n                    <Typography sx = {{paddingLeft: '16px', paddingBottom: '8px', color: 'gray'}} fontSize = '10px'>\r\n                        21 ЧАСОВ НАЗАД\r\n                    </Typography>\r\n                    <Divider />\r\n                    <form>\r\n                        <Grid\r\n                            alignItems=\"center\"\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"space-between\"\r\n                            sx = {{height: '40px'}}\r\n                        >\r\n                            <TextField \r\n                                placeholder=\"Оставить комментарий\" \r\n                                InputProps={{ disableUnderline: true }} \r\n                                sx = {{width: '430px', paddingLeft: '10px'}} \r\n                                id=\"filled-basic\"\r\n                                name = \"postComment\"\r\n                                variant=\"standard\" \r\n                                onChange = {handleInputChange}\r\n                                value = {values.postComment}\r\n                            />\r\n                            {\r\n                                values.postComment\r\n                                ? <Button \r\n                                    variant=\"text\"\r\n                                    onClick = {sendPost}\r\n                                >   \r\n                                Send\r\n                                </Button>\r\n                                : <Button \r\n                                    onClick = {sendPost}\r\n                                    variant=\"text\"\r\n                                    disabled\r\n                                >   \r\n                                Send\r\n                                </Button>\r\n                            }\r\n                        </Grid>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    );\r\n}\r\n\r\n// disabled","export default __webpack_public_path__ + \"static/media/loading.603c632f.gif\";","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useObserver = (ref, canLoad, isPostsLoading, cb, ...values) => {\r\n    const observer = useRef()\r\n    useEffect(() => {\r\n        \r\n        if (isPostsLoading) return;\r\n        if (observer.current) observer.current.disconnect();\r\n        const callback = function(entries) {\r\n            \r\n            if (entries[0].isIntersecting && canLoad) {\r\n                cb(...values)\r\n            }\r\n        };\r\n        observer.current = new IntersectionObserver(callback);\r\n        observer.current.observe(ref.current)\r\n    }, [isPostsLoading])\r\n}","import React, { useRef } from 'react'\r\nimport Post from './Post'\r\nimport loader from './loading.gif'\r\nimport { useObserver } from '../customHooks/useOserver'\r\n\r\nlet Feed = (props) => {\r\n\r\n    const lastElement = useRef()\r\n    \r\n    useObserver(lastElement, props.page <= props.totalPageCount, props.isPostsLoading, props.getPostsThink, props.page);\r\n\r\n    let postsArray = props.posts.map((item) => {\r\n        return (\r\n            <Post \r\n                key = {item.postId}\r\n                addComment = {props.addComment} \r\n                setLike = {props.setLike} \r\n                post = {item}\r\n                deletePost = {props.deletePost}\r\n                savedPost = {props.savedPost}\r\n                setSave = {props.setSave}\r\n            />\r\n        )\r\n    })\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {postsArray}\r\n            <img ref = {lastElement} style = {{width: '100px'}} src={loader} alt=\" \" />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Feed;","import { api } from '../api/api';\r\nimport { setError } from './auth-reducer';\r\n\r\nconst GET_POSTS = 'feed-reducer/GET_POSTS';\r\nconst ITERATION_PAGE = 'feed-reducer/ITERATION_PAGE';\r\nconst SET_PAGE = 'feed-reducer/SET_PAGE';\r\nconst SET_POSTS_LOADING = 'feed-reducer/SET_POSTS_LOADING';\r\nconst SET_LIKE = 'feed-reducer/SET_LIKE';\r\nconst ADD_COMMENT = 'feed-reducer/ADD_COMMENT';\r\nconst SET_SAVE = 'feed-reducer/SET_SAVE';\r\n\r\n\r\nlet initialState = {\r\n    page: 1,\r\n    posts: [],\r\n    isPostsLoading: false,\r\n    totalPageCount: 50,\r\n}\r\n\r\nconst feedReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.concat(action.posts),\r\n            }\r\n        case ITERATION_PAGE: \r\n            return {\r\n                ...state,\r\n                page: ++state.page\r\n            }\r\n        case SET_PAGE: \r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            }\r\n        case SET_POSTS_LOADING:\r\n            return {\r\n                ...state,\r\n                isPostsLoading: action.isPostsLoading\r\n            }\r\n        case SET_LIKE:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((item) => {\r\n                    if (item.postId === action.postId) {\r\n                        item.like = !item.like;\r\n                        if (item.like) {\r\n                            item.likeCount++;\r\n                            return item;\r\n                        }\r\n                        item.likeCount--;\r\n                        return item;\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        case SET_SAVE:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((item) => {\r\n                    if (item.postId === action.postId) {\r\n                        item.savedPost = !item.savedPost;\r\n                        return item;\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        case ADD_COMMENT:\r\n            \r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((item) => {\r\n                    if (item.postId === action.postId) {\r\n                        item.comments.push({'body': action.comment})\r\n                        return item;\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getPosts = (posts) => {\r\n    return {\r\n        type: 'feed-reducer/GET_POSTS',\r\n        posts\r\n    }\r\n}\r\n\r\nexport const iteratonPage = () => {\r\n    return {\r\n        type: 'feed-reducer/ITERATION_PAGE'\r\n    }\r\n}\r\n\r\nexport const setPage = (page) => {\r\n    return {\r\n        type: 'feed-reducer/SET_PAGE',\r\n        page\r\n    }\r\n}\r\n\r\nexport const setPostsLoading = (isPostsLoading) => {\r\n    return {\r\n        type: 'feed-reducer/SET_POSTS_LOADING',\r\n        isPostsLoading\r\n    }\r\n}\r\n\r\nexport const setLike = (postId) => {\r\n    return {\r\n        type: 'feed-reducer/SET_LIKE',\r\n        postId,\r\n    }\r\n}\r\n\r\nexport const setSave = (postId) => {\r\n    return {\r\n        type: 'feed-reducer/SET_SAVE',\r\n        postId,\r\n    }\r\n}\r\n\r\nexport const addComment = (comment, postId) => {\r\n    return {\r\n        type: 'feed-reducer/ADD_COMMENT',\r\n        comment,\r\n        postId,\r\n    }\r\n}\r\n\r\n\r\nexport const getPostsThink = (page) => { // Получает 10 постов, по одному от каждого пользователя\r\n    return async (dispatch) => {\r\n        dispatch(setError(false))\r\n        dispatch(setPostsLoading(true))\r\n        try {\r\n            const responseUsers = await api.getAllUsers();\r\n        \r\n            const posts = responseUsers.data.map(async (item, index) => {\r\n            const count = page + index*50;\r\n\r\n            const responsePhoto = await api.getPhoto(count);\r\n            const responseComments = await api.getComments(index)\r\n\r\n            return {\r\n                postId: responsePhoto.data[0].id,\r\n                albumId: item.id,\r\n                username: item.username,\r\n                url: responsePhoto.data[0].url,\r\n                title: responsePhoto.data[0].title,\r\n                comments: responseComments.data,\r\n                liked: false,\r\n                likeCount: 0,\r\n                savedPost: false,\r\n            }\r\n        })\r\n\r\n        Promise.all(posts)\r\n            .then(reponse => {\r\n                if (reponse.length !== 0) {\r\n                    dispatch(getPosts(reponse));\r\n                    dispatch(iteratonPage())\r\n                    dispatch(setPostsLoading(false))\r\n                }\r\n            })\r\n        } catch (error) {\r\n            dispatch(setError(true))\r\n        }\r\n    }\r\n}\r\n\r\nexport default feedReducer;","import { Typography } from \"@mui/material\"\r\n\r\nconst NoInternetError = () => {\r\n    return (\r\n        <Typography textAlign={'center'} variant=\"h5\">Нет соединения с интернетом. Попробуйте обновить страницу</Typography>\r\n    )\r\n}\r\n\r\nexport default NoInternetError","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport Feed from './Feed'\r\nimport { getPostsThink, iteratonPage, setPage, setLike, addComment, setSave } from '../redux/feed-reducer'\r\nimport { deletePost, savedPost } from '../redux/auth-reducer';\r\nimport NoInternetError from '../common/NoInternetError'\r\n\r\nconst FeedAPIContainer = (props) => {\r\n    useEffect(() => {\r\n        props.setPage(1)\r\n    }, [])\r\n    useEffect(() => {\r\n        document.title = 'myAlbum'\r\n    }, [])\r\n\r\n    if (props.error) return <NoInternetError/>\r\n    \r\n    return (\r\n        <Feed\r\n            posts = {props.posts}\r\n            page = {props.page}\r\n            isPostsLoading = {props.isPostsLoading}\r\n            totalPageCount = {props.totalPageCount}\r\n            getPostsThink = {props.getPostsThink}\r\n            setLike = {props.setLike}\r\n            addComment = {props.addComment}\r\n            deletePost = {props.deletePost}\r\n            savedPost = {props.savedPost}\r\n            setSave = {props.setSave}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.feedPage.posts,\r\n        page: state.feedPage.page,\r\n        isPostsLoading: state.feedPage.isPostsLoading,\r\n        totalPageCount: state.feedPage.totalPageCount,\r\n        error: state.authReducer.error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        iteratonPage: () => {\r\n            dispatch(iteratonPage())\r\n        },\r\n        setPage: (page) => {\r\n            dispatch(setPage(page))\r\n        },\r\n        setLike: (postId) => {\r\n            dispatch(setLike(postId))\r\n        },\r\n        setSave: (postId) => {\r\n            dispatch(setSave(postId))\r\n        },\r\n        addComment: (comment, postId) => {\r\n            dispatch(addComment(comment, postId))\r\n        },\r\n        savedPost: (post) => {\r\n            dispatch(savedPost(post))\r\n        },\r\n        deletePost: (id) => {\r\n            dispatch(deletePost(id))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(null, {getPostsThink}),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(FeedAPIContainer);","import * as React from 'react';\r\nimport Modal from '@mui/material/Modal';\r\nimport {IconButton, ListItemText, MenuItem, MenuList, Paper } from '@mui/material';\r\nimport Divider from '@mui/material/Divider';\r\nimport { Box } from '@mui/system';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SettingsModal(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleSettingsOpen = () => setOpen(true);\r\n    const handleSettingsClose = () => setOpen(false);\r\n\r\n    const multyHandle = () => {\r\n        props.handleFormProblemDialogOpen();\r\n        handleSettingsClose()\r\n    }\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        width: 500,\r\n        transform: 'translate(-50%, -50%)',\r\n        bgcolor: 'background.paper',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IconButton variant=\"text\" color={'inherit'} onClick={handleSettingsOpen}>{props.children}</IconButton>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleSettingsClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Paper>\r\n                        <MenuList>\r\n                            <MenuItem component = {Link} to = '/accounts/changepassword' onClick={handleSettingsClose} sx = {{textAlign: 'center'}}>\r\n                                <ListItemText>Сменить пароль</ListItemText>\r\n                            </MenuItem>\r\n\r\n                            <Divider/>\r\n\r\n                            <MenuItem component = {Link} to = '/accounts/emails' onClick={handleSettingsClose} sx = {{textAlign: 'center'}}>\r\n                                <ListItemText>Уведомления</ListItemText>\r\n                            </MenuItem>\r\n\r\n                            <Divider />\r\n\r\n                            <MenuItem component = {Link} to = '/accounts/privacy_and_security' onClick={handleSettingsClose} sx = {{textAlign: 'center'}}>\r\n                                <ListItemText>Конфиденциальность и безопасность</ListItemText>\r\n                            </MenuItem>\r\n\r\n                            <Divider />\r\n\r\n                            <MenuItem onClick={multyHandle} sx = {{textAlign: 'center'}}>\r\n                                <ListItemText>Сообщить о проблеме</ListItemText>\r\n                            </MenuItem>\r\n\r\n                            <Divider sx = {{marginBottom: '8px', marginTop: '8px'}} />\r\n\r\n                            <MenuItem onClick={handleSettingsClose} sx = {{textAlign: 'center'}}>\r\n                                <ListItemText>Выход</ListItemText>\r\n                            </MenuItem>\r\n\r\n                            <Divider />\r\n\r\n                            <MenuItem onClick={handleSettingsClose} sx = {{textAlign: 'center'}}>\r\n                                <ListItemText>Отмена</ListItemText>\r\n                            </MenuItem>\r\n                        </MenuList>\r\n                    </Paper>\r\n                </Box>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}","export const chunkArray = (arr, chunk = 3) => {\r\n    let newArray = []\r\n    for (let i = 0; i < arr.length; i += chunk) {\r\n        newArray.push(arr.slice(i, i + chunk))\r\n    }\r\n    return newArray;\r\n} ","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { ButtonBase, CardContent, CardHeader, CardMedia, Divider, Grid, IconButton, TextField } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport useForm from '../customHooks/useFrom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport { styled } from '@mui/material/styles';\r\nimport ModeCommentIcon from '@mui/icons-material/ModeComment';\r\nimport { StyledBox, StyledCard, StyledCardWrapper, StyledCardMediaWrapper, StyledCommentWrapper, StyleExitButton, StyldCardContentWrapper } from '../styledComponent/postInModal';\r\n\r\nconst ImageButton = styled(ButtonBase)(({ theme }) => ({\r\n    position: 'relative',\r\n    width: '30%',\r\n    paddingBottom: '30%',\r\n    height: '0',\r\n    margin: '0px 16px',\r\n    '& .TypographyOpacity-root': {\r\n        opacity: 0,\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n        width: '33.3%',\r\n        paddingBottom: '33.3%',\r\n        margin: '0px'\r\n    },\r\n    '&:hover, &.Mui-focusVisible': {\r\n        zIndex: 1,\r\n        '& .MuiImageBackdrop-root': {\r\n            opacity: 0.7,\r\n        },\r\n        '& .MuiImageMarked-root': {\r\n            opacity: 0,\r\n        },\r\n        '& .TypographyOpacity-root': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}));\r\n\r\nconst ImageSrc = styled('span')({\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n    \r\n});\r\n    \r\nconst Image = styled('span')(({ theme }) => ({\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n}));\r\n\r\nconst ImageBackdrop = styled('span')(({ theme }) => ({\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0,\r\n    transition: theme.transitions.create('opacity'),\r\n}));\r\n\r\nconst initialPostValues = {\r\n    postComment: '',\r\n}\r\n\r\nexport default function BasicModal(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    \r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(initialPostValues);\r\n\r\n    const sendPost = () => {\r\n        props.addComment(values.postComment, props.post.postId)\r\n        values.postComment = ''\r\n    }\r\n\r\n    const deletePost = () => {\r\n        props.deletePost(props.post.postId)\r\n        if (props.post.type !== 'saved') {\r\n            props.setSave(props.post.postId)\r\n        }\r\n        if (props.post.type === 'saved') {\r\n            handleClose()\r\n        }\r\n    }\r\n\r\n    const savedPost = () => {\r\n        props.savedPost(props.post)\r\n        props.setSave(props.post.postId)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n                <ImageButton\r\n                    onClick={handleOpen}\r\n                    focusRipple\r\n                >\r\n                    <ImageSrc \r\n                        style={{ \r\n                            backgroundImage: `url(${props.item.url}?w=164&h=164&fit=crop&auto=format)` \r\n                        }} \r\n                    />\r\n                    <ImageBackdrop className=\"MuiImageBackdrop-root\" />\r\n                    <Image>\r\n                        <Typography\r\n                            className = 'TypographyOpacity-root' \r\n                            sx = {{\r\n                                display: 'flex', \r\n                                justifyContent: 'space-around', \r\n                                alignItems: \"center\", \r\n                                width: '100px'\r\n                            }}\r\n                        >\r\n                            <FavoriteIcon \r\n                                fontSize = 'small'\r\n                            /> \r\n                            {props.item.likeCount} \r\n                            <ModeCommentIcon/> \r\n                            {props.item.comments.length}\r\n                        </Typography>\r\n                    </Image>                                                    \r\n                </ImageButton>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <StyledBox>\r\n                    <StyledCard>\r\n                        <StyledCardWrapper>\r\n                            <StyledCardMediaWrapper>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    height=\"auto\"\r\n                                    width = '600px'\r\n                                    image= {props.post.url}\r\n                                    alt=\"green iguana\"\r\n                                />\r\n                            </StyledCardMediaWrapper>\r\n                            <StyldCardContentWrapper>\r\n                                <CardContent sx = {{padding: '0'}}>\r\n                                    <Box sx = {{height: '60px', width: '100%'}}>\r\n                                        <CardHeader\r\n                                            sx = {{padding: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                            avatar={\r\n                                                <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                                                    R\r\n                                                </Avatar>\r\n                                            }\r\n                                            action={\r\n                                                <IconButton aria-label=\"settings\" sx = {{padding: 0, paddingTop: '15px'}}>\r\n                                                    <MoreVertIcon />\r\n                                                </IconButton>\r\n                                            }\r\n                                            title= {\r\n                                                <NavLink style = {{textDecoration: 'none', color: 'black'}} to={`/${props.post.username}/publications`}>{props.post.username}</NavLink>\r\n                                            }\r\n                                        />\r\n                                    </Box>\r\n                                    <Divider/>\r\n                                    <StyledCommentWrapper>\r\n                                        {\r\n                                            props.comments.map((item) => {\r\n                                                return (\r\n                                                    <Box key = {item.id} sx = {{padding: '10px'}}>\r\n                                                        <Box sx={{width: '100%', margin: '0', display: 'flex', justifyContent: 'left', alignItems: 'center'}}>\r\n                                                            <Avatar sx={{ bgcolor: red[500], width: 24, height: 24 }} aria-label=\"recipe\">\r\n                                                                R\r\n                                                            </Avatar>\r\n                                                            <Typography\r\n                                                                sx={{ display: 'inline-block', width: '300px', paddingLeft: '15px'}}\r\n                                                                component=\"span\"\r\n                                                                variant=\"body2\"\r\n                                                                color=\"text.primary\"\r\n                                                            >\r\n                                                                <a href=\"/\">User</a>\r\n                                                                <Typography component=\"span\" variant=\"body2\" sx={{ paddingLeft: '15px'}}>\r\n                                                                    {item.body}\r\n                                                                </Typography>\r\n                                                            </Typography>\r\n                                                        </Box>\r\n                                                        <Typography sx = {{paddingLeft: '50px', color: 'gray'}} fontSize = '12px'>\r\n                                                            3 ч.\r\n                                                        </Typography>\r\n                                                    </Box>   \r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </StyledCommentWrapper>\r\n                                    <Divider/>\r\n                                    <Box sx = {{height: '100px', width: '100%'}}>\r\n                                    <Grid\r\n                                        alignItems=\"center\"\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justifyContent=\"space-between\"\r\n                                        sx = {{paddingBottom: '0px'}}\r\n                                    >\r\n                                        <Box>\r\n                                            <IconButton aria-label=\"add to favorites\" onClick = {() => props.setLike(props.post.postId)}>\r\n                                                {props.post.like \r\n                                                    ? <FavoriteIcon fontSize = 'medium' color='error'/>\r\n                                                    : <FavoriteBorderIcon fontSize = 'medium' />\r\n                                                }\r\n                                            </IconButton>\r\n                                            <NavLink style = {{textDecoration: 'none'}} to={`/post/${props.post.id}`}>\r\n                                                <IconButton aria-label=\"share\">\r\n                                                    <OpenInNewIcon />\r\n                                                </IconButton>\r\n                                            </NavLink>\r\n                                            \r\n                                        </Box>\r\n                                        {\r\n                                            props.post.savedPost\r\n                                            ?<IconButton onClick = {deletePost} aria-label=\"share\"><BookmarkIcon /></IconButton>                                    \r\n                                            :<IconButton onClick = {savedPost} aria-label=\"share\"><BookmarkBorderIcon/></IconButton>\r\n                                        }\r\n                                        \r\n                                    </Grid>\r\n                                        <Box sx = {{paddingLeft: '10px'}}>\r\n                                            <Typography fontSize = '15px'>\r\n                                                <b>{props.post.likeCount} отметок \"Нравится\"</b>\r\n                                            </Typography>\r\n                                            <Typography fontSize = '10px' color = 'gray'>\r\n                                                5 ЧАСОВ НАЗАД\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <Divider/>\r\n                                    <form>\r\n                                        <Grid\r\n                                            alignItems=\"center\"\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justifyContent=\"space-between\"\r\n                                            sx = {{height: '50px', width: '100%'}}\r\n                                        >\r\n                                            <TextField placeholder=\"Оставить комментарий\" \r\n                                            InputProps={{ disableUnderline: true }} \r\n                                            sx = {{width: '300px', paddingLeft: '10px'}} \r\n                                            id=\"filled-basic\" \r\n                                            label=\"\" \r\n                                            variant=\"standard\" \r\n                                            name = \"postComment\"\r\n                                            onChange = {handleInputChange}\r\n                                            value = {values.postComment}\r\n                                            />\r\n                                            {\r\n                                                values.postComment\r\n                                                ? <Button \r\n                                                    variant=\"text\"\r\n                                                    onClick = {sendPost}\r\n                                                >   \r\n                                                Send\r\n                                                </Button>\r\n                                                : <Button \r\n                                                    variant=\"text\"\r\n                                                    disabled\r\n                                                >   \r\n                                                Send\r\n                                                </Button>\r\n                                            }\r\n                                        </Grid>\r\n                                    </form>\r\n                                </CardContent>\r\n                            </StyldCardContentWrapper>\r\n                        </StyledCardWrapper>\r\n                    </StyledCard>\r\n                    <StyleExitButton onClick = {handleClose}>\r\n                        <CloseIcon fontSize = 'large' />\r\n                    </StyleExitButton>\r\n                </StyledBox>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/loading.3539afbf.svg\";","import { Box } from \"@mui/material\";\r\nimport { chunkArray } from \"../scripts/scripts\";\r\nimport PostingModal from './PostInModal'\r\nimport loader from './loading.svg';\r\n\r\nconst Posts = (props) => {\r\n    return(\r\n        <Box>\r\n            {chunkArray(props.posts).map((item, index) => {\r\n                return (\r\n                    <Box \r\n                        key = {index}\r\n                        sx = {{\r\n                            width: '100%', \r\n                            marginTop: {xs: '0', sm: '0', md: '20px'},\r\n                            display: 'flex',\r\n                            justifyContent: 'left',\r\n                        }}\r\n                    >\r\n                        {\r\n                            item.map((item) => {\r\n                                return (\r\n                                    <PostingModal \r\n                                    item = {item}\r\n                                    key = {item.id}\r\n                                    addComment = {props.addComment} \r\n                                    setLike = {props.setLike} \r\n                                    comments = {item.comments} \r\n                                    post = {item} \r\n                                    savedPost = {props.savedPost}\r\n                                    deletePost = {props.deletePost}\r\n                                    setSave = {props.setSave}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </Box>\r\n                )\r\n            })}\r\n            <img ref = {props.lastElement} style = {props.customStyle} src={loader} alt=\" \" />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Posts","import { Avatar, Button, Dialog, DialogContent, DialogTitle, Divider, IconButton, Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nconst UserListModal = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <Box>\r\n            <Button \r\n                sx = {props.customStyle} \r\n                color={'inherit'} \r\n                onClick={handleOpen}\r\n                disableRipple \r\n                disableFocusRipple\r\n            >\r\n                {props.children}\r\n            </Button>\r\n            <Dialog \r\n                open={open} \r\n                onClose={handleClose}\r\n            >\r\n                <DialogTitle \r\n                    sx = {{\r\n                        display: 'flex', \r\n                        width: '400px', \r\n                        alignItems: 'center', \r\n                        justifyContent: 'space-between', \r\n                        padding: '0', \r\n                        borderBottom: '1px solid black'\r\n                    }}\r\n                >\r\n                    <Typography \r\n                        component = {'span'} \r\n                        sx = {{\r\n                            width: '100%', \r\n                            textAlign: 'center', \r\n                            marginLeft: '40px'\r\n                        }}\r\n                    >\r\n                        {props.titleText}\r\n                    </Typography>\r\n                    <IconButton \r\n                        onClick = {handleClose}>\r\n                        <ClearIcon/>\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent \r\n                    sx = {{\r\n                        padding: '0', \r\n                        overflowY: 'scroll', \r\n                        height: '300px'\r\n                    }}\r\n                >\r\n                    {\r\n                        props.userList.map((item) => {\r\n                            return (\r\n                                <Box \r\n                                    key = {item.id}\r\n                                    sx = {{\r\n                                        display: 'flex', \r\n                                        alignItems: 'center', \r\n                                        justifyContent: 'space-between', \r\n                                        padding: '10px 10px'\r\n                                    }}\r\n                                >\r\n                                    <Box \r\n                                        sx = {{\r\n                                            display: 'flex', \r\n                                            alignItems: 'center'\r\n                                        }}\r\n                                    >\r\n                                        <Avatar \r\n                                            alt=\"Remy Sharp\"\r\n                                            src=\"/static/images/avatar/1.jpg\"\r\n                                            sx={{ \r\n                                                width: 40, \r\n                                                height: 40,\r\n                                            }}\r\n                                        />\r\n                                        <NavLink \r\n                                            style = {{\r\n                                                textDecoration: 'none', \r\n                                                color: 'black', \r\n                                                margin: '0 10px'\r\n                                            }} \r\n                                            to={`/${item.username}/publications`} \r\n                                            onClick={handleClose}\r\n                                        >\r\n                                            {item.username}\r\n                                        </NavLink>\r\n                                    </Box>\r\n                                    { props.userMatch && <Button variant=\"outlined\" onClick = {() => props.deleteUser(item.username)}>{props.buttonText}</Button>}\r\n                                </Box>\r\n                            )\r\n                        })\r\n                    }\r\n                    <Divider/>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default UserListModal","import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, Divider, IconButton, TextField, Typography } from \"@mui/material\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport React from \"react\";\r\n\r\nconst DialogForm = (props) => {\r\n    \r\n    const [value, setValue] = React.useState();\r\n\r\n    const handleChange = (event) => setValue(event.target.value);\r\n\r\n    return (\r\n        <Box>\r\n            <Dialog open={props.openModal} onClose={props.handleFormProblemDialogClose}>\r\n                <DialogTitle sx = {{display: 'flex', width: '500px', alignItems: 'center', justifyContent: 'space-between', paddingBottom: '6px', paddingTop: '6px'}}>\r\n                    <Typography component = {'span'}>\r\n                        Сообщить о проблеме\r\n                    </Typography>\r\n                    <IconButton onClick = {props.handleFormProblemDialogClose}>\r\n                        <ClearIcon/>\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <Divider />\r\n                <DialogContent sx = {{paddingBottom: '6px', paddingTop: '6px'}}>\r\n                    <TextField\r\n                        id=\"outlined-multiline-flexible\"\r\n                        autoFocus\r\n                        multiline\r\n                        label=\"Описание проблемы\"\r\n                        margin=\"dense\"\r\n                        value={value}\r\n                        fullWidth\r\n                        rows={4}\r\n                        onChange={handleChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions sx = {{display: 'flex', width: '500px', alignItems: 'center', justifyContent: 'space-between', paddingBottom: '6px', paddingTop: '6px'}}>\r\n                    <Button onClick={props.handleFormProblemDialogClose}>Отправить жалобу</Button>\r\n                    <Button>Добавить файл</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default DialogForm","import { Avatar, Button, Grid, Tab, Tabs, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport React, { useRef } from 'react';\r\nimport AppsIcon from '@mui/icons-material/Apps';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport { Link, NavLink, Route, Switch, useParams} from 'react-router-dom';\r\nimport SettingsModal from './SettingsModal'\r\nimport { useObserver } from \"../customHooks/useOserver\";\r\nimport Posts from \"./Posts\";\r\nimport UserListModal from \"./UserListModal\";\r\nimport DialogForm from \"./DialogForm\";\r\n\r\nconst typographyStyle = {\r\n    display: 'inline-block',\r\n    marginRight: '20px',\r\n    \r\n}\r\n\r\nconst typographyButtonStyle = {\r\n    display: 'inline-block',\r\n    marginRight: '20px',\r\n    textTransform: 'none',\r\n    color: 'black',\r\n    fontSize: 16,\r\n    fontFamily: 'sans-serif'\r\n}\r\n\r\nconst Profile = (props) => {\r\n\r\n    const lastElement = useRef();\r\n    \r\n    const canLoad = props.currentPage < props.totalPageCount;\r\n    \r\n    useObserver(lastElement, canLoad, props.isPageLoading, props.getAlbumThink, props.user.username, props.currentPage);\r\n    \r\n    const {username, tag} = useParams();\r\n    \r\n    const allTabs = [`/${username}/publications`, `/${username}/saved`];\r\n\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n    const handleFormProblemDialogOpen = () => setOpenModal(true);\r\n    const handleFormProblemDialogClose = () => setOpenModal(false);\r\n        \r\n    return (\r\n        <>\r\n            <Box sx = {{width: '1000px'}}>\r\n                <Grid\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    container\r\n                    direction=\"row\" \r\n                    sx = {{marginTop: '20px'}}\r\n                >\r\n                    <Box sx = {{marginLeft: '100px', marginRight: '100px'}}>\r\n                        <Avatar \r\n                            alt=\"Remy Sharp\"\r\n                            src=\"/static/images/avatar/1.jpg\"\r\n                            sx={{ width: 130, height: 130, marginBottom: '20px' }}\r\n                        />\r\n                    </Box>\r\n                    <Box>   \r\n                        <Box sx = {{marginBottom: '10px'}}>\r\n                            <Typography sx ={typographyStyle}>{props.user.username}</Typography>\r\n                            {\r\n                                props.userMatch \r\n                                    ? <>\r\n                                        <NavLink style = {{\r\n                                                textDecoration: 'none',\r\n                                                color: 'white'\r\n                                            }} to=\"/accounts/edit\">\r\n                                                <Button variant=\"outlined\">Редактировать профиль</Button>\r\n                                        </NavLink>\r\n                                        <SettingsModal\r\n                                            handleFormProblemDialogOpen = {handleFormProblemDialogOpen}                            \r\n                                        >\r\n                                            <SettingsIcon/>\r\n                                        </SettingsModal>\r\n                                    </>\r\n                                    : <>\r\n                                        {\r\n                                            props.isSub \r\n                                                ? <Button variant=\"outlined\" onClick = {() => props.deleteSubscriptions(props.user.username)}>Отписаться</Button>\r\n                                                : <Button variant=\"contained\" onClick = {() => props.addSubscription(props.user.username)}>Подписаться</Button>\r\n                                        }\r\n                                    </>\r\n                            }\r\n                        </Box>\r\n                        <Box sx = {{marginBottom: '10px', display: 'flex', alignItems: 'center'}}>\r\n                            <Typography sx = {typographyStyle}><b>{props.totalPostsCount}</b> публикаций</Typography>\r\n                            <UserListModal\r\n                                userList = {props.subscribers}\r\n                                customStyle = {typographyButtonStyle}\r\n                                titleText = {'Подписчиков'}\r\n                                buttonText = {'Удалить'}\r\n                                deleteUser = {props.deleteSubscribers}\r\n                                userMatch = {props.userMatch}\r\n                                >\r\n                                <b>{props.subscribers.length}</b> подписчиков\r\n                            </UserListModal>\r\n                            <UserListModal\r\n                                userList = {props.subscriptions}\r\n                                customStyle = {typographyButtonStyle}\r\n                                userMatch = {props.userMatch}\r\n                                deleteUser = {props.deleteSubscriptions}\r\n                                buttonText = {'Отписаться'}\r\n                                titleText = {'Подписок'}\r\n                            >\r\n                                <b>{props.subscriptions.length}</b> подписок\r\n                            </UserListModal>\r\n                        </Box>\r\n                        <Box sx = {{marginBottom: '10px'}}>\r\n                            <Typography sx = {typographyStyle}><b>{props.user.name}</b></Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n                <Box sx={{ width: '100%', marginTop: '20px'}}>\r\n                    <Box \r\n                        sx = {{ \r\n                            width: '100%', \r\n                            marginTop: '20px'\r\n                        }}\r\n                    >\r\n                        <Box \r\n                            sx = {{ \r\n                                borderBottom: 1, \r\n                                borderColor: 'divider' \r\n                            }}\r\n                        >\r\n                            <Tabs \r\n                                value={`/${username}/${tag}`} \r\n                                aria-label=\"basic tabs example\" \r\n                                centered\r\n                            >\r\n                                <Tab \r\n                                    label = {\r\n                                        <Grid \r\n                                            alignItems=\"center\" \r\n                                            container \r\n                                            direction=\"row\"\r\n                                        >\r\n                                            <AppsIcon/>\r\n                                            ПУБЛИКАЦИИ\r\n                                        </Grid>\r\n                                    } \r\n                                    value = { `/${username}/publications` } \r\n                                    component={Link} \r\n                                    to={allTabs[0]} \r\n                                />\r\n                                <Tab \r\n                                    label = {\r\n                                        <Grid \r\n                                            alignItems=\"center\" \r\n                                            container \r\n                                            direction=\"row\"\r\n                                        >\r\n                                            <BookmarkBorderIcon/>\r\n                                            СОХРАНЕННОЕ\r\n                                        </Grid>\r\n                                    } \r\n                                    value={`/${username}/saved`} \r\n                                    component={Link} \r\n                                    to={allTabs[1]}/>\r\n                            </Tabs>\r\n                        </Box>\r\n                        <Switch>\r\n                            <Route \r\n                                path={allTabs[0]} \r\n                                render={() => (\r\n                                    <Posts\r\n                                        lastElement = {lastElement}\r\n                                        posts = {props.posts}\r\n                                        addComment = {props.addComment} \r\n                                        setLike = {props.setLike}\r\n                                        setSave = {props.setSave}\r\n                                        savedPost = {props.savedPost}\r\n                                        deletePost = {props.deletePost}\r\n                                        customStyle = {{\r\n                                            width: '100px'\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            />\r\n                            <Route \r\n                                path={allTabs[1]} \r\n                                render={() => {\r\n                                    return (\r\n                                        <Posts\r\n                                            lastElement = {lastElement}\r\n                                            posts = {props.savedPosts}\r\n                                            addComment = {props.addComment} \r\n                                            setLike = {props.setLike}\r\n                                            savedPost = {props.savedPost}\r\n                                            deletePost = {props.deletePost}\r\n                                            customStyle = {{\r\n                                                visibility: 'hidden',\r\n                                                width: '100px'\r\n                                            }}\r\n                                        />\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </Switch>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <DialogForm\r\n                handleFormProblemDialogClose = {handleFormProblemDialogClose}\r\n                handleFormProblemDialogOpen = {handleFormProblemDialogOpen}\r\n                openModal = {openModal}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n","import { api } from '../api/api';\r\nimport { setError } from './auth-reducer';\r\n\r\nconst GET_USER = 'profile-reducer/GET_USER';\r\nconst GET_ALBUM = 'profile-reducer/GET_ALBUM';\r\nconst ITERATION_PAGE = 'profile-reducer/ITERATION_PAGE';\r\nconst SET_PAGE = 'profile-reducer/SET_PAGE';\r\nconst IS_PAGE_LOADING = 'profile-reducer/IS_PAGE_LOADING';\r\nconst TOTAL_POSTS_COUNT = 'profile-reducer/TOTAL_POSTS_COUNT';\r\nconst SET_LIKE = 'profile-reducer/SET_LIKE';\r\nconst ADD_COMMENT = 'profile-reducer/ADD_COMMENT';\r\nconst IS_USER_LOADING = 'profile-reducer/IS_USER_LOADING';\r\nconst SET_SAVE = 'profile-reducer/SET_SAVE';\r\n\r\nlet initialState = {\r\n    user : {\r\n        \"id\": null,\r\n        \"name\": \"\",\r\n        \"username\": \"\",\r\n        \"email\": \"\",\r\n        \"address\": {},\r\n        \"phone\": \"\",\r\n        \"website\": \"\",\r\n        \"company\": {}\r\n    },\r\n    album: [],\r\n    totalPageCount: 10,\r\n    currentPage: 1,\r\n    isPageLoading: false,\r\n    isUserLoading: false,\r\n    totalPostsCount: 0,\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n                album: []\r\n            }\r\n        case GET_ALBUM:\r\n            return {\r\n                ...state,\r\n                album: [...state.album, ...action.album]\r\n            }\r\n        case ITERATION_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: ++state.currentPage\r\n            }\r\n        case SET_PAGE:\r\n            \r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case IS_PAGE_LOADING:\r\n            return {\r\n                ...state,\r\n                isPageLoading: action.isPageLoading\r\n            }\r\n        case IS_USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isUserLoading: action.isUserLoading\r\n            }\r\n        case TOTAL_POSTS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalPostsCount: action.totalPostsCount\r\n            }\r\n        case SET_LIKE:\r\n            \r\n            return {\r\n                ...state,\r\n                album: state.album.map((item) => {\r\n                    if (item.postId === action.postId) {\r\n                        item.like = !item.like;\r\n                        if (item.like) {\r\n                            item.likeCount++;\r\n                            return item;\r\n                        }\r\n                        item.likeCount--;\r\n                        return item;\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                album: state.album.map((item) => {\r\n                    if (item.postId === action.postId) {\r\n                        item.comments = [...item.comments, {'body': action.comment}]\r\n                        \r\n                        return item;\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        case SET_SAVE:\r\n            return {\r\n                ...state,\r\n                posts: state.album.map((item) => {\r\n                    if (item.postId === action.postId) {\r\n                        item.savedPost = !item.savedPost;\r\n                        return item;\r\n                    }\r\n                    return item;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getUser = (user) => {\r\n    return {\r\n        type: 'profile-reducer/GET_USER',\r\n        user\r\n    }\r\n}\r\n\r\nconst getAlbum = (album) => {\r\n    return {\r\n        type: 'profile-reducer/GET_ALBUM',\r\n        album\r\n    }\r\n}\r\n\r\nconst iteratoinPage = () => {\r\n    return {\r\n        type: 'profile-reducer/ITERATION_PAGE',\r\n    }\r\n}\r\n\r\nexport const setPage = (page) => {\r\n    return {\r\n        type: 'profile-reducer/SET_PAGE',\r\n        page\r\n    }\r\n}\r\n\r\nconst isPageLoading = (isPageLoading) => {\r\n    return {\r\n        type: 'profile-reducer/IS_PAGE_LOADING',\r\n        isPageLoading\r\n    }\r\n}\r\nconst isUserLoading = (isUserLoading) => {\r\n    return {\r\n        type: 'profile-reducer/IS_USER_LOADING',\r\n        isUserLoading\r\n    }\r\n}\r\n\r\nconst totalPostsCount = (totalPostsCount) => {\r\n    return {\r\n        type: 'profile-reducer/TOTAL_POSTS_COUNT',\r\n        totalPostsCount\r\n    }\r\n}\r\n\r\nexport const setLike = (postId) => {\r\n    return {\r\n        type: 'profile-reducer/SET_LIKE',\r\n        postId,\r\n    }\r\n}\r\n\r\nexport const setSave = (postId) => {\r\n    return {\r\n        type: 'profile-reducer/SET_SAVE',\r\n        postId,\r\n    }\r\n}\r\n\r\nexport const addComment = (comment, postId) => {\r\n    return {\r\n        type: 'profile-reducer/ADD_COMMENT',\r\n        comment,\r\n        postId,\r\n    }\r\n}\r\n\r\nexport const getAlbumThink = (username, page) => {\r\n    return async (dispatch) => {\r\n        dispatch(setError(false))\r\n        try {\r\n            dispatch(isPageLoading(true))\r\n            \r\n            const responseUser = await api.getUser(username);\r\n            const responseUserAlbum = await api.getUserAlbum(responseUser.data[0].id, page);\r\n            \r\n            if (responseUserAlbum.data.length !== 0) {\r\n                let userAlbumAndComment = responseUserAlbum.data.map((item) => {\r\n                    item.comments = [\r\n                        {\"body\": \"harum non quasi et ratione\\ntempore iure ex voluptates in ratione\\nharum architecto fugit inventore cupiditate\\nvoluptates magni quo et\", id: '1'},\r\n                        {\"body\": \"doloribus at sed quis culpa deserunt consectetur qui praesentium\\naccusamus fugiat dicta\\nvoluptatem rerum ut voluptate autem\\nvoluptatem repellendus aspernatur dolorem in\", id: '2'}\r\n                    ];\r\n                    item.like = false;\r\n                    item.likeCount = 0;\r\n                    item.postId = item.id\r\n                    item.username = username;\r\n                    item.username = username;\r\n                    item.savedPost = false;\r\n                    return item\r\n                })\r\n                dispatch(getAlbum(userAlbumAndComment));\r\n                dispatch(iteratoinPage());\r\n                dispatch(totalPostsCount(responseUserAlbum.headers[\"x-total-count\"]))\r\n                dispatch(isPageLoading(false))\r\n            }\r\n        } catch (error) {\r\n            dispatch(setError(true))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserThink = (username, currentPage) => {\r\n    return async (dispatch) => {\r\n        dispatch(isUserLoading(true))\r\n        try {\r\n            dispatch(setError(false))\r\n            const responseUser = await api.getUser(username);\r\n            \r\n            if (responseUser.data.length !== 0) {\r\n                dispatch(setPage(1));\r\n                dispatch(getUser(responseUser.data[0]));\r\n                dispatch(getAlbumThink(username, currentPage));\r\n            }\r\n            \r\n        } catch (error) {\r\n            dispatch(setError(true))\r\n        }\r\n        dispatch(isUserLoading(false));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import { Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst ErrorPage = () => {\r\n    return <Box sx = {{width: '100%', marginTop: '2%'}}>\r\n        <Typography variant=\"h5\" align = 'center'><b>К сожалению, эта страница недоступна.</b></Typography>\r\n        <Typography sx = {{marginTop: '2%'}} align = 'center'>\r\n            Возможно, вы воспользовались недействительной ссылкой или страница была удалена. \r\n            <NavLink style={{textDecoration: 'none', color: 'blue'}} to = '/'>\r\n                Вернуться на главную страницу\r\n            </NavLink>\r\n        </Typography>\r\n    </Box>\r\n}\r\n\r\nexport default ErrorPage","import React, { useContext, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { useParams } from 'react-router-dom';\r\nimport Profile from './Profile';\r\nimport {getUserThink, setLike, addComment, setPage, setSave} from '../redux/profile-reducer'\r\nimport {withRouter} from 'react-router-dom';\r\nimport { getAlbumThink } from '../redux/profile-reducer';\r\nimport { addSubscription, AllUserThink, deletePost, deleteSubscribers, deleteSubscriptions, savedPost } from '../redux/auth-reducer';\r\nimport LoaderPage from '../common/LoaderPage';\r\nimport ErrorPage from './ErrorPage';\r\nimport NoInternetError from '../common/NoInternetError';\r\nimport { AuthContext } from '../context/authContext';\r\n\r\nconst checkSub = (arr, username) => {\r\n    const index = arr.findIndex((item) => {\r\n        if(item.username === username) return true;\r\n        return false\r\n    })\r\n    if (index >= 0) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nconst ProfileAPIContainer = (props) => {\r\n    const {username} = useParams();\r\n    \r\n    useEffect(() => {\r\n        if (!props.isUserLoading) {\r\n            props.getUserThink(username, 1);\r\n        }\r\n    }, [username])\r\n\r\n    useEffect(() => {\r\n        document.title = username\r\n    }, [username])\r\n    \r\n    const authContext = useContext(AuthContext)\r\n\r\n    const isSub = checkSub(props.subscriptions, username);\r\n\r\n    const userMatch = username === props.authUsername;\r\n    \r\n    if (props.error) return <NoInternetError/>\r\n    \r\n    if (props.isUserLoading) return <LoaderPage/>\r\n    \r\n    if (!(props.user.username === username) && authContext.isAuth) return <ErrorPage/>\r\n\r\n\r\n    return (\r\n        <Profile\r\n            posts = {props.posts}\r\n            user = {props.user}\r\n            tag = {props.match.params.tag}\r\n            userMatch = {userMatch}\r\n            totalPostsCount = {props.totalPostsCount}\r\n            setLike = {props.setLike}\r\n            setSave = {props.setSave}\r\n            addComment = {props.addComment}\r\n            subscribers = {props.subscribers}\r\n            subscriptions = {props.subscriptions}\r\n            deleteSubscriptions = {props.deleteSubscriptions}\r\n            deleteSubscribers = {props.deleteSubscribers}\r\n            addSubscription = {props.addSubscription}\r\n            savedPost = {props.savedPost}\r\n            deletePost = {props.deletePost}\r\n            savedPosts = {props.savedPosts}\r\n            isPageLoading = {props.isPageLoading}\r\n            getAlbumThink = {props.getAlbumThink}\r\n            totalPageCount = {props.totalPageCount}\r\n            currentPage = {props.currentPage}\r\n            isSub = {isSub}\r\n            isUserLoading = {props.isUserLoading}\r\n        />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.album,\r\n        user: state.profilePage.user,\r\n        currentPage: state.profilePage.currentPage,\r\n        isPageLoading: state.profilePage.isPageLoading,\r\n        totalPageCount: state.profilePage.totalPageCount,\r\n        totalPostsCount: state.profilePage.totalPostsCount,\r\n        subscribers: state.authReducer.subscribers,\r\n        subscriptions: state.authReducer.subscriptions,\r\n        authUsername: state.authReducer.user.username,\r\n        isAuth: state.authReducer.isAuth,\r\n        savedPosts: state.authReducer.savedPosts,\r\n        isUserLoading: state.profilePage.isUserLoading,\r\n        error: state.authReducer.error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLike: (postId) => {\r\n            dispatch(setLike(postId))\r\n        },\r\n        setSave: (postId) => {\r\n            dispatch(setSave(postId))\r\n        },\r\n        addComment: (comment, postId) => {\r\n            dispatch(addComment(comment, postId))\r\n        },\r\n        deleteSubscribers: (username) => {\r\n            dispatch(deleteSubscribers(username))\r\n        },\r\n        deleteSubscriptions: (username) => {\r\n            dispatch(deleteSubscriptions(username))\r\n        },\r\n        AllUserThink: () => {\r\n            dispatch(AllUserThink())\r\n        },\r\n        addSubscription: (username) => {\r\n            dispatch(addSubscription(username))\r\n        },\r\n        savedPost: (post) => {\r\n            dispatch(savedPost(post))\r\n        },\r\n        deletePost: (id) => {\r\n            dispatch(deletePost(id))\r\n        },\r\n        setPage: (page) => {\r\n            dispatch(setPage(page))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(null, {getUserThink, getAlbumThink}),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(ProfileAPIContainer)","import { Avatar, Button, TextField, Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport useForm from \"../customHooks/useFrom\"\r\n\r\nconst containerStyle = {\r\n    display: {xs: 'block', sm: 'block', md: 'flex'}, \r\n    alignItems: 'start',\r\n    width: '100%',\r\n    margin: '10px 0 0 0',\r\n}\r\n\r\nconst typographyStyle = {\r\n    width: '170px', \r\n    margin: '0 10px 0 30px', \r\n    textAlign: 'end'\r\n}\r\n\r\nconst feldStyle = {\r\n    margin: '0 50px 0 10px',\r\n    padding: {xs: '0 50px 0 10px', sm: '0 50px 0 10px', md: '0'}, \r\n    width: '100%',\r\n}\r\n\r\nconst ChangePassword = () => {\r\n    const initialValues = {\r\n        oldPassword: '',\r\n        newPasswordFirst: '',\r\n        newPasswordSecond: '',\r\n    }\r\n\r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(initialValues);\r\n\r\n    const handleSubmit = () => {\r\n        console.log(values);\r\n    }\r\n\r\n    return(\r\n        <Box sx = {{width: '100%'}}>\r\n            <Box \r\n                sx = {{\r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    width: '100%',\r\n                    margin: '10px 0 30px 0',\r\n                }}>\r\n                <Box sx = {{width: '170px', margin: '0 10px 0 30px', display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <Avatar \r\n                        alt=\"Remy Sharp\"\r\n                        src=\"/static/images/avatar/1.jpg\"\r\n                        sx={{ width: 50, height: 50 }}\r\n                    />\r\n                </Box>\r\n                <Typography variant = 'h6' sx = {feldStyle}>Bred</Typography>\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Старый пароль:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"oldPassword\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = 'oldPassword'\r\n                    onChange={handleInputChange}\r\n                    value = {values.oldPassword}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Новый пароль:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"newPasswordFirst\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = 'newPasswordFirst'\r\n                    onChange={handleInputChange}\r\n                    value = {values.newPasswordFirst}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Подтвердите новый пароль:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"newPasswordSecond\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = 'newPasswordSecond'\r\n                    onChange={handleInputChange}\r\n                    value = {values.newPasswordSecond}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Box sx = {{width: '170px', margin: '0 10px 0 30px'}}>\r\n                    \r\n                </Box>\r\n                <Box sx = {feldStyle}>\r\n                    <Button onClick={handleSubmit} variant=\"contained\">Сменить пароль</Button>\r\n                </Box>\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Box sx = {{width: '170px', margin: '0 10px 0 30px'}}>\r\n                    \r\n                </Box>\r\n                <Box sx = {feldStyle}>\r\n                    <Button>Забыли пароль?</Button>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","import { Button, FormControlLabel, Radio, RadioGroup, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport useForm from \"../customHooks/useFrom\";\r\n\r\nconst NotificationSettings = ({notificationSettings, changeSettings}) => {\r\n\r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(notificationSettings);\r\n\r\n    const handleSubmit = () => {\r\n        changeSettings(values, 'notificationSettings')\r\n    }\r\n\r\n    return (\r\n        <Box sx = {{width: '100%', height: '100%', padding: '30px 40px'}}>\r\n            <Box sx = {{width: '100%', height: '100%'}}>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Отметки \"Нравится\"</Typography>\r\n                <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    value={values.like}\r\n                    name=\"like\"\r\n                    onChange={handleInputChange}\r\n                    >\r\n                    <FormControlLabel value=\"1\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"Выкл.\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От людей, на которых вы подписаны\" />\r\n                    <FormControlLabel value=\"3\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От всех\" />\r\n                </RadioGroup>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>johnappleseed нравится ваше фото.</Typography>\r\n                <hr/>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Комментарии</Typography>\r\n                <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    value={values.comments}\r\n                    name=\"comments\"\r\n                    onChange={handleInputChange}\r\n                    >\r\n                    <FormControlLabel value=\"1\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"Выкл.\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От людей, на которых вы подписаны\" />\r\n                    <FormControlLabel value=\"3\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От всех\" />\r\n                </RadioGroup>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>johnappleseed прокомментировал(-а): \"Хороший снимок!\"</Typography>\r\n                <hr/>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Принятые запросы на подписку</Typography>\r\n                <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    value={values.subscriptionRequest}\r\n                    name=\"subscriptionRequest\"\r\n                    onChange={handleInputChange}\r\n                    >\r\n                    <FormControlLabel value=\"1\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"Выкл.\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От всех\" />\r\n                </RadioGroup>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>John Appleseed (johnappleseed) принял(-а) ваш запрос на подписку.</Typography>\r\n                <hr/>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Напоминания</Typography>\r\n                <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    value={values.reminders}\r\n                    name=\"reminders\"\r\n                    onChange={handleInputChange}\r\n                    >\r\n                    <FormControlLabel value=\"1\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"Выкл.\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От всех\" />\r\n                </RadioGroup>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>У вас есть непросмотренные уведомления и другие похожие уведомления.</Typography>\r\n                <hr/>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Первые публикации</Typography>\r\n                <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    value={values.firstPublications}\r\n                    name=\"firstPublications\"\r\n                    onChange={handleInputChange}\r\n                    >\r\n                    <FormControlLabel value=\"1\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"Выкл.\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От людей, на которых вы подписаны\" />\r\n                    <FormControlLabel value=\"3\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От всех\" />\r\n                </RadioGroup>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>Вы увидите первый пост johnappleseed в Instagram, а также другие похожие уведомления.</Typography>\r\n                <hr/>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Запросы поддержки</Typography>\r\n                <RadioGroup\r\n                    value={values.supportRequests}\r\n                    name=\"supportRequests\"\r\n                    onChange={handleInputChange}\r\n                    >\r\n                    <FormControlLabel value=\"1\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"Выкл.\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio sx = {{padding: '0 10px'}}/>} label=\"От всех\" />\r\n                </RadioGroup>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>Ваш запрос на поддержку (дата: июля 10) только что был обновлен.</Typography>\r\n                \r\n                <Box \r\n                    sx = {{\r\n                        margin: '20px 0', \r\n                        width: '100%', \r\n                        display: {xs: 'block', sm: 'block', md: 'flex'}, \r\n                        justifyContent: 'left',\r\n                    }}\r\n                >\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\" \r\n                        sx = {{\r\n                            display: 'block',\r\n                            margin: {xs: '20px', sm: '20px', md: '0'}\r\n                        }}\r\n                    >\r\n                        отправить\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default NotificationSettings","import { Avatar, Box, Button, Checkbox, FormControlLabel, TextField, Typography } from \"@mui/material\";\r\nimport useForm from \"../customHooks/useFrom\";\r\n\r\nconst containerStyle = {\r\n    display: {xs: 'block', sm: 'block', md: 'flex'}, \r\n    alignItems: 'start',\r\n    width: '100%',\r\n    margin: '10px 0 0 0',\r\n}\r\n\r\nconst typographyStyle = {\r\n    width: '170px', \r\n    margin: '0 10px 0 30px', \r\n    textAlign: 'end'\r\n}\r\n\r\nconst feldStyle = {\r\n    margin: '0 50px 0 10px',\r\n    padding: {xs: '0 50px 0 10px', sm: '0 50px 0 10px', md: '0'}, \r\n    width: '100%',\r\n}\r\n\r\nconst EditProfile = ({editProfile, changeSettings}) => {\r\n\r\n    const {\r\n        values,\r\n        handleInputChange,\r\n        handleCheckboxChange,\r\n    } = useForm(editProfile);\r\n\r\n    const handleSubmit = () => {\r\n        changeSettings(values, 'editProfile')\r\n    }\r\n\r\n    return (\r\n        <Box  sx = {{width: '100%'}}>\r\n            <Box \r\n                sx = {{\r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    width: '100%',\r\n                    margin: '10px 0 30px 0',\r\n                }}>\r\n                <Box sx = {{width: '170px', margin: '0 10px 0 30px', display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <Avatar \r\n                        alt=\"Remy Sharp\"\r\n                        src=\"/static/images/avatar/1.jpg\"\r\n                        sx={{ width: 50, height: 50 }}\r\n                    />\r\n                </Box>\r\n                <Typography variant = 'h6' sx = {feldStyle}>Bred</Typography>\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Имя:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"editName\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editName\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editName}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Имя пользователя:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"editUsername\"  \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editUsername\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editUsername}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Веб-сайт:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"editWebsite\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editWebsite\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editWebsite}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>О себе:</b></Typography>\r\n                <TextField  \r\n                    multiline \r\n                    maxRows={4} \r\n                    id=\"editAboutSelf\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editAboutSelf\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editAboutSelf}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}></Typography>\r\n                <Typography variant = 'h6' sx = {{margin: '10px 50px 10px 10px', width: '100%',}}>Личная информация</Typography>\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Эл. адрес:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"editEmail\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editEmail\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editEmail}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Номер телефона:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"editPhoneNumber\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editPhoneNumber\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editPhoneNumber}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Пол:</b></Typography>\r\n                <TextField \r\n                    size = 'small' \r\n                    id=\"editGender\" \r\n                    variant=\"outlined\" \r\n                    sx = {feldStyle}\r\n                    name = \"editGender\"\r\n                    onChange = {handleInputChange}\r\n                    value = {values.editGender}\r\n                />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Typography sx = {typographyStyle}><b>Рекомендации похожих аккаунтов:</b></Typography>\r\n                <FormControlLabel \r\n                    id = 'recommendationSimilarAccounts'\r\n                    control={<Checkbox \r\n                        name = 'recommendationSimilarAccounts'\r\n                        onChange = {handleCheckboxChange}\r\n                        checked = {values.recommendationSimilarAccounts}\r\n                    />} \r\n                    label=\"Рекомендовать ваш аккаунт возможным подписчикам.\" \r\n                    sx = {feldStyle} \r\n                    />\r\n            </Box>\r\n            <Box sx = {containerStyle}>\r\n                <Box sx = {{width: '170px', margin: '0 10px 0 30px'}}>\r\n                    \r\n                </Box>\r\n                <Box \r\n                    sx = {{\r\n                        margin: '0 50px 0 10px', \r\n                        width: '100%', \r\n                        display: {xs: 'block', sm: 'block', md: 'flex'}, \r\n                        justifyContent: 'space-between',\r\n                    }}\r\n                >\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\" \r\n                        sx = {{\r\n                            display: 'block',\r\n                            margin: {xs: '20px', sm: '20px', md: '0'}\r\n                        }}\r\n                    >\r\n                        отправить\r\n                    </Button>\r\n                    <Button sx = {{\r\n                            display: 'block',\r\n                            margin: {xs: '20px', sm: '20px', md: '0'}\r\n                        }}\r\n                    >\r\n                        Временно отключить мой аккаунт\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default EditProfile","import { Box, Button, Checkbox, FormControlLabel, Typography } from \"@mui/material\";\r\nimport useForm from \"../customHooks/useFrom\";\r\n\r\nconst SecuritySettings = ({securitySettings, changeSettings}) => {\r\n\r\n    const {\r\n        values,\r\n        handleCheckboxChange,\r\n    } = useForm(securitySettings);\r\n\r\n    const handleSubmit = () => {\r\n        changeSettings(values, 'securitySettings')\r\n    }    \r\n\r\n    return (\r\n        <Box sx = {{width: '100%', height: '100%', padding: '30px 40px'}}>\r\n            <Box sx = {{width: '100%', height: '100%'}}>\r\n                <Typography sx = {{margin: '0 0 20px 0'}} variant=\"h6\">Конфиденциальность аккаунта</Typography>\r\n                <FormControlLabel \r\n                    id = 'accountPrivacy'\r\n                    control={<Checkbox \r\n                        name = 'accountPrivacy'\r\n                        onChange = {handleCheckboxChange}\r\n                        checked = {values.accountPrivacy}\r\n                    />} \r\n                    label=\"Закрытый аккаунт\"/>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>Если у вас закрытый аккаунт, ваши фото и видео в Instagram смогут видеть только люди, которых вы одобрите. Это не относится к уже существующим подписчикам.</Typography>\r\n                <hr/>\r\n                <Typography sx = {{margin: '20px 0'}} variant=\"h6\">Сетевой статус</Typography>\r\n                <FormControlLabel  \r\n                    id = 'onlineStatus'\r\n                    control={<Checkbox \r\n                        name = 'onlineStatus'\r\n                        onChange = {handleCheckboxChange}\r\n                        checked = {values.onlineStatus}\r\n                    />} \r\n                    label=\"Показывать сетевой статус\"/>\r\n                <Typography variant=\"subtitle2\" sx = {{color: 'gray'}}>Разрешить владельцам аккаунтов, на которые вы подписаны, и всем, кому вы отправляете сообщения, видеть, когда вы заходили в приложения Instagram в последний раз. Отключив эту настройку, вы не сможете видеть сетевой статус других аккаунтов.</Typography>\r\n                <Box \r\n                    sx = {{\r\n                        margin: '20px 0', \r\n                        width: '100%', \r\n                        display: {xs: 'block', sm: 'block', md: 'flex'}, \r\n                        justifyContent: 'left',\r\n                    }}\r\n                >\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\" \r\n                        sx = {{\r\n                            display: 'block',\r\n                            margin: {xs: '20px', sm: '20px', md: '0'}\r\n                        }}\r\n                    >\r\n                        отправить\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SecuritySettings","import React from \"react\";\r\nimport { Switch, Route, Link, withRouter} from \"react-router-dom\";\r\nimport { Card, Tab, Tabs } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NotificationSettings from './NotificationSettings'\r\nimport EditProfile from \"./EditProfile\";\r\nimport SecuritySettings from \"./SecuritySettings\";\r\n\r\nconst Settings = ({settingsPage, changeSettings}) => {\r\n    const allTabs = ['/accounts/edit', '/accounts/changepassword', '/accounts/privacy_and_security', '/accounts/emails'];\r\n    const {settings} = useParams()\r\n    return (\r\n        <Box key = {settings} sx = {{maxWidth: '1000px', width: '100%'}}>\r\n                <Box sx = {{width: '100%'}}>\r\n                    <Card sx={{ flexGrow: 1, bgcolor: 'background.paper', display: 'flex', minHeight: '700px', margin: '10px'}}>\r\n                        <Tabs \r\n                            orientation=\"vertical\"\r\n                            aria-label=\"Vertical tabs example\"\r\n                            sx={{ borderRight: 1, borderColor: 'divider', width: '250px' }}\r\n                            value={`/accounts/${settings}`}\r\n                        >\r\n                            <Tab \r\n                                label=\"Редактировать профиль\" \r\n                                value=\"/accounts/edit\" \r\n                                component={Link} \r\n                                to={allTabs[0]} \r\n                            />\r\n                            <Tab \r\n                                label=\"Сменить пароль\" \r\n                                value=\"/accounts/changepassword\" \r\n                                component={Link} \r\n                                to={allTabs[1]} \r\n                            />\r\n                            <Tab \r\n                                label=\"Конфиденциальность и безопасность\" \r\n                                value=\"/accounts/privacy_and_security\" \r\n                                component={Link} \r\n                                to={allTabs[2]} \r\n                            />\r\n                            <Tab \r\n                                label=\"Уведомления\" \r\n                                value=\"/accounts/emails\" \r\n                                component={Link} \r\n                                to={allTabs[3]} \r\n                            />\r\n                        </Tabs>\r\n                        <Switch>\r\n                            <Route path={allTabs[0]} render={() => {\r\n                                return (\r\n                                    <EditProfile \r\n                                        editProfile = {settingsPage.editProfile}\r\n                                        changeSettings = {changeSettings}\r\n                                    />\r\n                                )\r\n                            }} />\r\n                            <Route path={allTabs[1]} render={() => {\r\n                                return (\r\n                                    <ChangePassword/>\r\n                                )\r\n                            }} />\r\n                            <Route path={allTabs[2]} render={() => {\r\n                                return (\r\n                                    <SecuritySettings \r\n                                        securitySettings = {settingsPage.securitySettings}\r\n                                        changeSettings = {changeSettings}\r\n                                    />\r\n                                )\r\n                            }} />\r\n                            <Route path={allTabs[3]} render={() => {\r\n                                return (\r\n                                    <NotificationSettings \r\n                                        notificationSettings = {settingsPage.notificationSettings}\r\n                                        changeSettings = {changeSettings}\r\n                                    />\r\n                                )\r\n                            }} />\r\n                        </Switch>\r\n                    </Card>\r\n                </Box>\r\n        </Box>\r\n        \r\n    );\r\n}\r\n\r\nexport default withRouter(Settings)","const CHANGE_SETTINGS = 'settings-reducer/CHANGE_SETTINGS';\r\n\r\nlet initialState = {\r\n    notificationSettings: {\r\n        like: '2',\r\n        comments: '2',\r\n        subscriptionRequest: '1',\r\n        reminders: '1',\r\n        firstPublications: '1',\r\n        supportRequests: '1',\r\n    },\r\n    editProfile: {\r\n        editName: '',\r\n        editUsername: '',\r\n        editWebsite: '',\r\n        editAboutSelf: '',\r\n        editEmail: '',\r\n        editPhoneNumber: '',\r\n        editGender: '',\r\n        recommendationSimilarAccounts: false\r\n    },\r\n    securitySettings: {\r\n        accountPrivacy: false,\r\n        onlineStatus: false,\r\n    }\r\n}\r\n\r\nconst settingsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_SETTINGS: \r\n            return {\r\n                ...state,\r\n                [action.settingsName]: action.settings\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const changeSettings = (settings, settingsName) => {\r\n    return {\r\n        type: 'settings-reducer/CHANGE_SETTINGS',\r\n        settings,\r\n        settingsName,\r\n    }\r\n}\r\n\r\nexport default settingsReducer;","import { connect } from 'react-redux'\r\nimport Settings from './Settings'\r\nimport React, { useEffect } from 'react';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { changeSettings } from '../redux/settings-reducer';\r\nimport NoInternetError from '../common/NoInternetError';\r\n\r\nconst SettingAPIContainer = (props) => {\r\n    useEffect(() => {\r\n        document.title = 'Редактрование профиля'\r\n    }, [])\r\n\r\n    if (props.error) return <NoInternetError/>\r\n\r\n    return (\r\n        <Settings\r\n            settingsPage = {props.settingsPage}\r\n            changeSettings = {props.changeSettings}\r\n        />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        settingsPage: state.settingsPage,\r\n        error: state.authReducer.error,\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeSettings (settings, settingsName) {\r\n            dispatch(changeSettings(settings, settingsName))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(SettingAPIContainer);","import { Box, Button, TextField, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport NoInternetError from '../common/NoInternetError';\r\nimport { loginThunk } from '../redux/auth-reducer';\r\n\r\nconst Login = (props) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.loginThunk(value)\r\n        setValue('')\r\n\r\n    }\r\n    \r\n    if (props.error) return <NoInternetError/>\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to = '/'/>\r\n    }\r\n    return (\r\n        <form>\r\n            <Box \r\n                sx = {{\r\n                    border: '1px solid lightgray', \r\n                    borderRadius: '10px', \r\n                    marginTop: '100px', \r\n                    display: 'flex', \r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    width: '300px',\r\n                    }}>\r\n                <Typography variant = 'h5' sx = {{margin: '10px'}}>\r\n                    Авторизация\r\n                </Typography>\r\n                <TextField \r\n                    id=\"outlined-basic\" \r\n                    value = {value} \r\n                    onChange = {handleInputChange}\r\n                    label=\"Пароль\" \r\n                    variant=\"outlined\" />\r\n                <Button \r\n                    sx = {{margin: '20px 0px 20px 0px'}}\r\n                    onClick = {handleSubmit} \r\n                    variant=\"contained\"\r\n                >\r\n                    Войти\r\n                </Button>\r\n            </Box>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n        error: state.authReducer.error\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapDispatchToProps, {loginThunk})\r\n)(Login) ","import React from \"react\"\r\nimport { withRouter } from \"react-router\"\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n    }\r\n    \r\n    export default withRouter(ScrollToTop)","import { api } from \"../api/api\";\r\nimport { setError } from \"./auth-reducer\";\r\n\r\nconst GET_POST = 'postPage-reducer/GET_POST';\r\nconst SET_LIKE = 'postPage-reducer/SET_LIKE';\r\nconst ADD_COMMENT = 'postPage-reducer/ADD_COMMENT';\r\nconst DELETE_LIKE = 'postPage-reducer/DELETE_LIKE';\r\nconst SET_POST_IS_LOADING = 'postPage-reducer/SET_POST_IS_LOADING';\r\n\r\nconst initialState = {\r\n    comments: [],\r\n    postIsLoading: true,\r\n}\r\n\r\nconst postPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                ...action.post\r\n            }\r\n        case SET_LIKE:\r\n            return {\r\n                ...state,\r\n                liked: true,\r\n                likeCount: ++state.likeCount,\r\n            }\r\n        case DELETE_LIKE:\r\n            return {\r\n                ...state,\r\n                liked: false,\r\n                likeCount: --state.likeCount,\r\n            }\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                comments: [...state.comments, {body: action.comment}],\r\n            }\r\n        case SET_POST_IS_LOADING: \r\n            return {\r\n                ...state,\r\n                postIsLoading: action.postIsLoading\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst getPost = (post) => {\r\n    return {\r\n        type: 'postPage-reducer/GET_POST',\r\n        post\r\n    }\r\n}\r\n\r\nconst postIsLoading = (postIsLoading) => {\r\n    return {\r\n        type: 'postPage-reducer/SET_POST_IS_LOADING',\r\n        postIsLoading\r\n    }\r\n}\r\n\r\nexport const setLike = () => {\r\n    return {\r\n        type: 'postPage-reducer/SET_LIKE',\r\n    }\r\n}\r\n\r\nexport const deleteLike = () => {\r\n    return {\r\n        type: 'postPage-reducer/DELETE_LIKE',\r\n    }\r\n}\r\n\r\nexport const addComment = (comment) => {\r\n    return {\r\n        type: 'postPage-reducer/ADD_COMMENT',\r\n        comment,\r\n    }\r\n}\r\n\r\nexport const getPostThunk = (postId) => {\r\n    return async (dispatch) => {\r\n        dispatch(postIsLoading(true))\r\n        dispatch(setError(false))\r\n        try {\r\n            const postResponse = await api.getPhoto(postId);\r\n            const userResponce = await api.getUserById(postResponse.data[0].albumId);\r\n            const commentsResponce = await api.getComments(1);\r\n\r\n            const canCraetePost = postResponse.data.lenght !== 0 && userResponce.data.lenght !== 0 && commentsResponce.data.lenght !== 0;\r\n            \r\n            if (canCraetePost) {\r\n                dispatch(getPost({\r\n                        username: userResponce.data[0].username,\r\n                        id: postResponse.data[0].id,\r\n                        url: postResponse.data[0].url,\r\n                        title: postResponse.data[0].title,\r\n                        comments: [...commentsResponce.data],\r\n                        liked: false,\r\n                        likeCount: 0,\r\n                        savedPost: false,\r\n                    }\r\n                ))\r\n            }\r\n            dispatch(postIsLoading(false))\r\n        } catch (error) {\r\n            dispatch(setError(true))\r\n        }\r\n    }\r\n}\r\n\r\nexport default postPageReducer;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Card, CardContent, CardHeader, CardMedia, Divider, Grid, IconButton, TextField } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport useForm from '../customHooks/useFrom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { deletePost, savedPost } from '../redux/auth-reducer';\r\nimport { addComment, deleteLike, getPostThunk, setLike } from '../redux/postPage-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport LoaderPage from '../common/LoaderPage'\r\nimport NoInternetError from '../common/NoInternetError';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    height: 700,\r\n    bgcolor: 'background.paper',\r\n    p: 4,\r\n    padding: 0,\r\n};\r\n\r\nconst styleCard = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    height: 700,\r\n    bgcolor: 'background.paper',\r\n    p: 4,\r\n    padding: 0,\r\n    border: '1px solid lightgray',\r\n    borderRadius: '15px'\r\n};\r\n\r\nconst initialPostValues = {\r\n    postComment: '',\r\n}\r\n\r\nfunction PostModal({post, ...props}) {\r\n    const {postId} = useParams();\r\n\r\n    useEffect(() => {\r\n        document.title = `Пост ${postId}`\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        props.getPostThunk(postId)\r\n    }, [])\r\n    \r\n    const {\r\n        values,\r\n        handleInputChange,\r\n    } = useForm(initialPostValues);\r\n\r\n    const sendPost = () => {\r\n        props.addComment(values.postComment);\r\n        values.postComment = '';\r\n    }\r\n    \r\n    if (post.postIsLoading) {\r\n        return <LoaderPage/>\r\n    }\r\n\r\n    const deletePost = () => {\r\n        props.deletePost(post.postId)\r\n    }\r\n\r\n    const savedPost = () => {\r\n        props.savedPost(post)\r\n    }\r\n\r\n    if (props.error) return <NoInternetError/>\r\n    \r\n    return (\r\n        <Box sx = {{style}}>\r\n            <Card sx={styleCard}>\r\n                <Box sx = {{display: 'flex', justifyContent: 'start', alignItems: 'center', height: '100%'}}>\r\n                    <Box  sx = {{width: '600px', height: '100%', display: 'flex', alignItems: 'center', backgroundColor: 'black'}}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            height=\"auto\"\r\n                            width = '600px'\r\n                            image= {post.url}\r\n                            alt=\"green iguana\"\r\n                        />\r\n                    </Box>\r\n                    <Box sx = {{width: '400px', height: '100%', display: 'inline-block'}}>\r\n                        <CardContent sx = {{padding: '0'}}>\r\n                            <Box sx = {{height: '60px', width: '100%'}}>\r\n                                <CardHeader\r\n                                    sx = {{padding: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                    avatar={\r\n                                        <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                                            R\r\n                                        </Avatar>\r\n                                    }\r\n                                    action={\r\n                                        <IconButton aria-label=\"settings\" sx = {{padding: 0, paddingTop: '15px'}}>\r\n                                            <MoreVertIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                    title= {\r\n                                        <NavLink style = {{textDecoration: 'none', color: 'black'}} to={`/${post.username}/publications`}>{post.username}</NavLink>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            <Divider/>\r\n                            <Box sx = {{height: '480px', width: '100%', justifyContent: 'space-between', alignItems: 'center', overflowY: 'scroll'}}>\r\n                                {\r\n                                    post.comments.map((item) => {\r\n                                        return (\r\n                                            <Box key = {item.id} sx = {{padding: '10px'}}>\r\n                                                <Box sx={{width: '100%', margin: '0', display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n                                                    <Avatar sx={{ bgcolor: red[500], width: 24, height: 24 }} aria-label=\"recipe\">\r\n                                                        R\r\n                                                    </Avatar>\r\n                                                    <Typography\r\n                                                        sx={{ display: 'inline-block', width: '300px', paddingLeft: '15px'}}\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        color=\"text.primary\"\r\n                                                    >\r\n                                                        <a href=\"/\">User</a>\r\n                                                        <Typography component=\"span\" variant=\"body2\" sx={{ paddingLeft: '15px'}}>\r\n                                                            {item.body}\r\n                                                        </Typography>\r\n                                                    </Typography>\r\n                                                    <IconButton aria-label=\"add to favorites\">\r\n                                                        <FavoriteBorderIcon fontSize = 'small' />\r\n                                                    </IconButton>\r\n                                                </Box>\r\n                                                <Typography sx = {{paddingLeft: '50px', color: 'gray'}} fontSize = '12px'>\r\n                                                    3 ч.\r\n                                                </Typography>\r\n                                            </Box>   \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Box>\r\n                            <Divider/>\r\n                            <Box sx = {{height: '100px', width: '100%'}}>\r\n                            <Grid\r\n                                alignItems=\"center\"\r\n                                container\r\n                                direction=\"row\"\r\n                                justifyContent=\"space-between\"\r\n                                sx = {{paddingBottom: '0px'}}\r\n                            >\r\n                                <Box>\r\n                                    \r\n                                    {\r\n                                        post.liked\r\n                                            ? <IconButton onClick={props.deleteLike} aria-label=\"add to favorites\">\r\n                                                <FavoriteIcon  fontSize = 'medium' color='error'/>\r\n                                            </IconButton>\r\n                                            : <IconButton onClick={props.setLike} aria-label=\"add to favorites\">\r\n                                                <FavoriteBorderIcon fontSize = 'medium'/>\r\n                                            </IconButton>\r\n                                    }\r\n                                    \r\n                                    <IconButton aria-label=\"share\">\r\n                                        <SendIcon />\r\n                                    </IconButton>\r\n                                </Box>\r\n                                    {\r\n                                        post.savedPost\r\n                                        ?<IconButton onClick = {deletePost} aria-label=\"share\"><BookmarkIcon /></IconButton>                                    \r\n                                        :<IconButton onClick = {savedPost} aria-label=\"share\"><BookmarkBorderIcon/></IconButton>\r\n                                    }\r\n                            </Grid>\r\n                                <Box sx = {{paddingLeft: '10px'}}>\r\n                                    <Typography fontSize = '15px'>\r\n                                        <b>{post.likeCount} отметок \"Нравится\"</b>\r\n                                    </Typography>\r\n                                    <Typography fontSize = '10px' color = 'gray'>\r\n                                        5 ЧАСОВ НАЗАД\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                            <Divider/>\r\n                            <form>\r\n                                <Grid\r\n                                    alignItems=\"center\"\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justifyContent=\"space-between\"\r\n                                    sx = {{height: '50px', width: '100%'}}\r\n                                >\r\n                                    <TextField placeholder=\"Оставить комментарий\" \r\n                                    InputProps={{ disableUnderline: true }} \r\n                                    sx = {{width: '300px', paddingLeft: '10px'}} \r\n                                    id=\"filled-basic\" \r\n                                    label=\"\" \r\n                                    variant=\"standard\" \r\n                                    name = \"postComment\"\r\n                                    onChange = {handleInputChange}\r\n                                    value = {values.postComment}\r\n                                    />\r\n                                    {\r\n                                        values.postComment\r\n                                        ? <Button \r\n                                            variant=\"text\"\r\n                                            onClick = {sendPost}\r\n                                        >   \r\n                                        Send\r\n                                        </Button>\r\n                                        : <Button \r\n                                            variant=\"text\"\r\n                                            disabled\r\n                                        >   \r\n                                        Send\r\n                                        </Button>\r\n                                    }\r\n                                </Grid>\r\n                            </form>\r\n                        </CardContent>\r\n                    </Box>\r\n                </Box>\r\n            </Card>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        post: state.postPage,\r\n        error: state.authReducer.error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLike: () => {\r\n            dispatch(setLike())\r\n        },\r\n        deleteLike: () => {\r\n            dispatch(deleteLike())\r\n        },\r\n        addComment: (comment) => {\r\n            dispatch(addComment(comment))\r\n        },\r\n        savedPost: (post) => {\r\n            dispatch(savedPost(post))\r\n        },\r\n        deletePost: (id) => {\r\n            dispatch(deletePost(id))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(null, {getPostThunk}),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(PostModal);","import { Button, TextField, Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\n\r\nconst AddPost = (props) => {\r\n    useEffect(() => {\r\n        document.title = 'Создание поста'\r\n    }, [])\r\n\r\n    let fileInput = useRef()\r\n\r\n    const handleSubmit = () => {\r\n        console.log(fileInput.current.files[0]);\r\n    }\r\n\r\n    return (\r\n        <Box \r\n            sx = {{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}\r\n        >\r\n            <Box \r\n                sx = {{\r\n                    width: {xs: '100%'},\r\n                    maxWidth: '500px',\r\n                    border: '1px solid lightgray',\r\n                    borderRadius: '10px',\r\n                    margin: '10px'\r\n                }}\r\n            >\r\n                <Box\r\n                    sx = {{\r\n                        display: 'flex',\r\n                        alignItems: 'center'\r\n                    }}\r\n                >\r\n                    <Box\r\n                        sx = {{\r\n                            width: {xs: '150px', sm: '200px'},\r\n                            height: {xs: '150px', sm: '200px'},\r\n                            background: 'gray',\r\n                            margin: '10px',\r\n                            borderRadius: '5px'\r\n                        }}\r\n                    >\r\n                    </Box>\r\n                    <Box\r\n                        sx = {{\r\n                            margin: {sx: '0px', sm: '20px'}\r\n                        }}\r\n                    >\r\n                        <input\r\n                            ref={fileInput}\r\n                            color=\"primary\"\r\n                            accept=\"image/*\"\r\n                            type=\"file\"\r\n                            id=\"icon-button-file\"\r\n                            style={{ display: 'none', }}\r\n                        />\r\n                        <label htmlFor=\"icon-button-file\">\r\n                            <Button\r\n                                \r\n                                component=\"span\"\r\n                                size=\"large\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Выбрать фотографию\r\n                            </Button>\r\n                        </label>\r\n                    </Box>\r\n                </Box>\r\n                <Typography \r\n                    variant=\"h6\"\r\n                    sx = {{\r\n                        margin: '10px'\r\n                    }}\r\n                >\r\n                    Подпись:\r\n                </Typography>\r\n                <TextField \r\n                    multiline \r\n                    rows={4}\r\n                    sx = {{\r\n                        width: '100%',\r\n                        padding: '0 10px'\r\n                    }}\r\n                />\r\n                <Box\r\n                    sx = {{\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        justifyContent: 'right',\r\n                        padding: '10px'\r\n                    }}\r\n                    \r\n                >\r\n                    <Button onClick={handleSubmit} variant=\"contained\">Опубликовать пост</Button>\r\n                    \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n)(AddPost);","import './App.css';\nimport Navigation from './navigation/Navigation'\nimport FeedContainer from './feed/FeedContainer';\nimport {Grid } from '@mui/material';\nimport {Route, Switch, withRouter} from \"react-router-dom\"\nimport React from 'react';\nimport ProfileContainer from './profile/ProfileContainer';\nimport SettingsContainer from './settings/SettingsContainer';\nimport Login from './login/Login';\nimport { AuthContext } from './context/authContext';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport ScrollToTop from './ScrollToTop';\nimport PostPage from './post/PostPage';\nimport AddPost from './addPost/AddPost.jsx';\n\nclass App extends React.Component {\n  render () {\n    return (\n      <ScrollToTop>\n        <AuthContext.Provider \n          value = {{\n            isAuth: this.props.isAuth,\n\n          }} \n        >\n        <Navigation/>\n        <Grid\n            sx = {{pt: '10px', width: '100%', height: '100%'}}\n            alignItems=\"start\"\n            justifyContent=\"center\"\n            container\n            direction=\"row\" \n          >\n            \n              <Switch>\n                <Route exact path = '/login' component = {Login} />\n                <Route exact path = '/accounts/:settings' component = {SettingsContainer} />\n                <Route exact path = '/create' component = {AddPost} />\n                <Route exact path = '/post/:postId' component = {PostPage} />\n                <Route exact path = '/:username/:tag' component = {ProfileContainer} />\n                <Route exact path = '/' component = {FeedContainer} /> \n              </Switch>\n            \n        </Grid>\n      </AuthContext.Provider>\n      </ScrollToTop>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.authReducer.isAuth,\n    error: state.authReducer.i\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  withRouter\n)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { combineReducers } from \"redux\";\r\nimport profileReducer from './profile-reducer';\r\nimport feedReducer from './feed-reducer';\r\nimport settingsReducer from './settings-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport postPageReducer from './postPage-reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nlet reducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    feedPage: feedReducer,\r\n    settingsPage: settingsReducer,\r\n    authReducer: authReducer,\r\n    postPage: postPageReducer\r\n})\r\n\r\nlet store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store = {store}>\n      <App/>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}